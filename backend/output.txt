Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:04:49.563Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T10:04:49.563Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:04:49.569Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T10:04:49.569Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T10:04:49.576Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:04:49.576Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T10:04:49.576Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:04:49.577Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T10:04:49.577Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T10:04:49.577Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:04:49.579Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T10:04:49.579Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T10:04:49.579Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T10:04:49.584Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T10:04:49.592Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T10:04:49.592Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:04:49.593Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T10:04:49.593Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T10:04:49.593Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:04:49.594Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T10:04:49.594Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T10:04:49.594Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T10:04:49.595Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T10:04:49.595Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:04:49.596Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T10:04:49.596Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T10:04:49.596Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:04:49.596Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.596Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T10:04:49.596Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.596Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.596Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.596Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T10:04:49.596Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:04:49.610Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T10:04:49.610Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T10:04:49.610Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:04:49.611Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T10:04:49.611Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:04:49.615Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:04:49.615Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.615Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T10:04:49.615Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.615Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:04:49.620Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:04:49.620Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.620Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.620Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T10:04:49.620Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.620Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.620Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T10:04:49.620Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.621Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T10:04:49.621Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.621Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:04:49.622Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:04:49.622Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.622Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.622Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T10:04:49.622Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.622Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.622Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T10:04:49.622Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.622Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T10:04:49.622Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.622Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:04:49.624Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.625Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.625Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.625Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T10:04:49.625Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.625Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.625Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.626Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.626Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.626Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T10:04:49.626Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.626Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.627Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.628Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:04:49.628Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.628Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.628Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T10:04:49.628Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.628Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T10:04:49.628Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.628Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.628Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.628Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:04:49.629Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.629Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.629Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T10:04:49.629Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.629Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.629Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T10:04:49.635Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T10:04:49.635Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T10:04:49.635Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T10:04:49.635Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:04:49.636Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.647Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.647Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:04:49.652Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.652Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T10:04:49.652Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.652Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:04:49.654Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:04:49.654Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.654Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T10:04:49.654Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.654Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:04:49.655Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:04:49.655Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.656Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T10:04:49.656Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.656Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:04:49.657Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:04:49.657Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:04:49.658Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:04:49.658Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.658Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.658Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:04:49.660Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T10:04:49.660Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T10:04:49.662Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T10:04:49.662Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:04:49.663Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T10:04:49.663Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.663Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:04:49.663Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.663Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:04:49.663Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.663Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.663Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:04:49.663Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.663Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.664Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.664Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.664Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:04:49.664Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.664Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:04:49.664Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.664Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.665Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T10:04:49.665Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.665Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T10:04:49.665Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.665Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.665Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:04:49.665Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.667Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:04:49.670Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T10:04:49.670Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.670Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:04:49.670Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.670Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:04:49.671Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.671Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:04:49.671Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T10:04:49.671Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:04:49.671Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.671Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:04:49.671Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T10:04:49.671Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:04:49.674Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.674Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:04:49.674Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T10:04:49.674Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:04:49.674Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.674Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:04:49.674Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:04:49.674Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:04:49.674Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.674Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:04:49.674Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T10:04:49.674Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:04:49.676Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:04:49.676Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T10:04:49.676Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.676Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:04:49.676Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:04:49.676Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:04:49.676Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.676Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:04:49.676Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:04:49.676Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:04:49.676Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.676Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:04:49.676Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:04:49.677Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:04:49.677Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.677Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:04:49.677Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T10:04:49.677Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T10:04:49.677Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T10:04:49.677Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:04:49.678Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T10:04:49.679Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:04:49.680Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.680Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.680Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T10:04:49.680Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:04:49.680Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:04:49.680Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.680Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:04:49.680Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:04:49.683Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T10:04:49.683Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.683Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:04:49.684Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:04:49.686Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T10:04:49.686Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.687Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:04:49.688Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:04:49.689Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.689Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:04:49.689Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.691Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T10:04:49.691Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.691Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:04:49.691Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:04:49.691Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.691Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:04:49.691Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:04:49.692Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.692Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:04:49.692Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:04:49.692Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.692Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:04:49.692Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:04:49.692Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.692Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:04:49.692Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:04:49.692Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.692Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:04:49.692Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:04:49.693Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T10:04:49.693Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:04:49.694Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:04:49.699Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.700Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T10:04:49.700Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.700Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T10:04:49.704Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T10:04:49.704Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T10:04:49.705Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:04:49.707Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:04:49.709Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.709Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T10:04:49.709Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.709Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T10:04:49.710Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T10:04:49.713Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T10:04:49.713Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T10:04:49.713Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T10:04:49.713Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T10:04:49.715Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T10:04:49.715Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T10:04:49.715Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:04:49.717Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.717Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.717Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.718Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T10:04:49.718Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.718Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:04:49.718Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.719Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:04:49.719Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.720Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:04:49.721Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:04:49.721Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:04:49.722Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:04:49.722Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T10:04:49.722Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T10:04:49.723Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T10:04:49.723Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T10:04:49.723Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:04:49.725Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T10:04:49.725Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:04:49.726Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.726Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T10:04:49.726Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.727Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T10:04:49.727Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.727Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:04:49.727Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:04:49.727Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.727Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:04:49.727Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:04:49.727Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.727Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:04:49.727Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:04:49.727Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.727Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:04:49.727Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:04:49.728Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:04:49.728Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:04:49.728Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:04:49.728Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T10:04:49.728Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:04:49.728Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T10:04:49.730Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:04:49.730Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T10:04:49.730Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:05:22.137Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T10:05:22.137Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:05:22.138Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T10:05:22.138Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T10:05:22.140Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:05:22.140Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T10:05:22.140Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:05:22.142Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T10:05:22.142Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T10:05:22.142Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:05:22.143Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T10:05:22.143Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T10:05:22.143Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T10:05:22.149Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T10:05:22.149Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T10:05:22.149Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:05:22.150Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T10:05:22.150Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T10:05:22.150Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:05:22.151Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T10:05:22.152Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T10:05:22.152Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T10:05:22.152Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T10:05:22.152Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:05:22.153Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T10:05:22.153Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T10:05:22.153Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:05:22.153Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.153Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T10:05:22.153Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.153Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.153Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.153Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T10:05:22.153Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:05:22.155Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T10:05:22.155Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T10:05:22.155Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:05:22.157Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T10:05:22.157Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:05:22.161Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:05:22.161Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.161Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T10:05:22.161Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.161Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:05:22.162Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:05:22.163Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.163Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.163Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T10:05:22.163Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.163Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.163Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T10:05:22.163Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.163Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T10:05:22.163Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.163Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:05:22.164Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:05:22.164Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.164Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.164Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T10:05:22.164Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.164Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.164Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T10:05:22.164Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.165Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T10:05:22.165Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.165Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:05:22.166Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.166Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.166Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.166Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T10:05:22.166Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.166Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.166Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.169Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.169Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.169Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T10:05:22.169Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.169Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.170Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.171Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:05:22.171Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.172Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.172Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T10:05:22.172Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.172Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T10:05:22.172Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.172Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.172Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.172Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:05:22.173Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.173Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.173Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T10:05:22.173Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.173Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.173Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T10:05:22.174Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T10:05:22.174Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T10:05:22.174Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T10:05:22.174Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:05:22.175Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.175Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.175Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:05:22.177Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.177Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T10:05:22.177Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.177Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:05:22.179Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:05:22.179Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.179Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T10:05:22.179Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.179Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:05:22.180Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:05:22.181Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.181Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T10:05:22.181Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.181Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:05:22.182Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:05:22.182Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:05:22.183Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:05:22.183Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.183Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.183Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:05:22.184Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T10:05:22.184Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T10:05:22.187Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T10:05:22.187Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:05:22.189Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T10:05:22.189Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.189Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:05:22.189Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.189Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:05:22.190Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.190Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.190Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:05:22.190Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.190Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.190Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.190Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.190Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:05:22.190Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.191Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:05:22.191Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.191Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.191Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T10:05:22.191Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.191Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T10:05:22.191Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.191Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.191Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:05:22.191Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:05:22.194Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T10:05:22.195Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:05:22.195Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.195Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:05:22.195Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:05:22.195Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:05:22.195Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.195Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:05:22.195Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T10:05:22.195Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T10:05:22.197Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T10:05:22.198Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T10:05:22.198Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:05:22.200Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:05:22.200Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T10:05:22.200Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.200Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:05:22.200Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:05:22.200Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:05:22.200Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.200Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:05:22.201Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.202Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:05:22.202Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:05:22.203Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:05:22.204Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:05:22.209Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T10:05:22.209Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.209Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T10:05:22.209Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:05:22.210Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:05:22.211Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.211Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:05:22.211Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:05:22.211Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.211Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:05:22.211Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.213Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T10:05:22.214Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.214Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:05:22.214Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:05:22.214Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.215Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:05:22.215Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:05:22.215Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.216Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:05:22.216Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:05:22.216Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.216Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:05:22.216Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:05:22.216Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.216Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:05:22.216Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:05:22.216Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.216Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:05:22.216Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.218Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:05:22.219Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:05:22.223Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.224Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T10:05:22.224Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.224Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T10:05:22.225Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T10:05:22.225Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T10:05:22.225Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:05:22.229Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:05:22.231Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.231Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T10:05:22.231Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.231Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T10:05:22.232Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T10:05:22.234Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T10:05:22.234Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T10:05:22.234Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T10:05:22.234Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T10:05:22.237Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T10:05:22.238Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T10:05:22.238Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:05:22.242Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.242Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.242Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.242Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T10:05:22.242Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.242Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:05:22.242Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.246Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:05:22.246Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.248Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:05:22.248Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:05:22.248Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:05:22.251Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:05:22.252Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T10:05:22.252Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T10:05:22.255Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T10:05:22.255Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T10:05:22.255Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:05:22.258Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T10:05:22.259Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:05:22.261Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.261Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T10:05:22.262Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:05:22.266Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T10:05:22.269Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:05:22.269Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T10:05:22.270Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T10:06:24.679Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.679Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T10:06:24.679Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.679Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:06:24.687Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T10:06:24.687Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:06:24.689Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T10:06:24.689Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T10:06:24.690Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:06:24.691Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T10:06:24.691Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:06:24.692Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T10:06:24.692Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T10:06:24.692Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:06:24.696Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T10:06:24.696Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T10:06:24.696Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T10:06:24.704Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T10:06:24.704Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T10:06:24.704Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:06:24.721Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T10:06:24.721Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T10:06:24.721Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:06:24.723Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T10:06:24.723Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T10:06:24.723Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T10:06:24.723Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T10:06:24.723Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:06:24.725Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T10:06:24.725Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T10:06:24.725Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:06:24.725Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.725Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T10:06:24.725Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.725Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.726Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.726Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T10:06:24.726Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:06:24.733Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T10:06:24.733Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T10:06:24.733Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:06:24.735Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T10:06:24.735Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:06:24.743Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:06:24.743Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.743Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T10:06:24.743Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.743Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:06:24.746Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:06:24.746Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.746Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.746Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T10:06:24.746Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.746Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.746Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T10:06:24.746Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.746Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T10:06:24.746Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.747Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:06:24.748Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:06:24.748Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.748Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.748Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T10:06:24.748Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.748Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.748Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T10:06:24.748Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.748Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T10:06:24.748Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.748Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:06:24.752Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.752Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.752Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.752Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T10:06:24.752Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.752Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.752Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.754Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.754Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.754Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T10:06:24.754Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.754Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.754Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.757Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:06:24.757Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.757Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.757Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T10:06:24.757Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.757Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T10:06:24.757Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.757Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.757Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.757Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:06:24.758Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.758Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.758Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T10:06:24.758Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.758Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.758Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T10:06:24.760Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T10:06:24.760Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T10:06:24.760Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T10:06:24.760Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:06:24.761Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.762Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.762Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:06:24.763Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.763Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T10:06:24.764Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.764Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:06:24.765Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:06:24.766Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.766Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T10:06:24.766Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.766Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:06:24.770Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:06:24.770Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.770Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T10:06:24.770Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.770Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:06:24.772Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:06:24.772Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:06:24.774Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:06:24.774Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.774Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.774Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:06:24.776Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T10:06:24.776Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T10:06:24.779Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T10:06:24.779Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:06:24.782Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T10:06:24.782Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.783Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:06:24.783Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.783Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:06:24.783Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.783Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.783Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:06:24.783Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.783Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.783Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.783Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.783Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:06:24.784Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.784Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:06:24.784Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.784Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.784Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T10:06:24.784Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.784Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T10:06:24.785Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.785Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.785Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:06:24.785Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:06:24.788Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:06:24.789Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:06:24.789Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.789Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:06:24.789Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T10:06:24.789Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:06:24.790Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:06:24.790Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T10:06:24.790Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T10:06:24.791Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:06:24.795Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:06:24.795Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T10:06:24.795Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.795Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:06:24.795Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:06:24.795Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:06:24.795Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.795Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:06:24.795Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:06:24.795Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:06:24.795Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.795Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:06:24.795Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:06:24.796Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:06:24.796Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.796Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T10:06:24.796Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:06:24.796Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.796Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.796Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T10:06:24.796Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:06:24.796Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:06:24.796Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.797Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:06:24.797Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:06:24.799Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.800Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:06:24.800Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:06:24.803Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.804Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:06:24.804Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:06:24.804Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.804Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:06:24.804Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:06:24.804Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.804Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:06:24.804Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:06:24.806Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:06:24.809Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:06:24.812Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.812Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T10:06:24.812Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.812Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T10:06:24.812Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T10:06:24.813Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T10:06:24.813Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:06:24.816Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:06:24.817Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.817Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T10:06:24.817Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.817Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T10:06:24.821Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T10:06:24.823Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T10:06:24.823Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T10:06:24.823Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T10:06:24.823Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T10:06:24.827Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T10:06:24.827Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T10:06:24.827Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:06:24.830Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.830Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.830Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.830Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T10:06:24.830Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.830Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:06:24.830Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.832Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:06:24.832Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.836Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:06:24.836Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:06:24.836Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:06:24.838Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:06:24.839Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T10:06:24.839Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T10:06:24.841Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T10:06:24.841Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T10:06:24.841Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:06:24.843Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T10:06:24.843Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:06:24.845Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.845Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T10:06:24.845Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.846Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T10:06:24.846Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:06:24.847Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T10:06:24.849Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:06:24.849Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T10:06:24.850Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T10:07:40.485Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.486Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T10:07:40.486Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.486Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:07:40.491Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T10:07:40.491Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:07:40.493Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T10:07:40.493Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T10:07:40.494Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:07:40.494Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T10:07:40.494Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:07:40.496Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T10:07:40.496Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T10:07:40.496Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:07:40.498Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T10:07:40.498Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T10:07:40.498Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T10:07:40.503Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T10:07:40.503Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T10:07:40.503Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:07:40.504Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T10:07:40.505Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T10:07:40.505Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:07:40.506Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T10:07:40.506Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T10:07:40.506Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T10:07:40.506Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T10:07:40.506Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:07:40.508Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T10:07:40.508Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T10:07:40.508Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:07:40.508Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.508Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T10:07:40.508Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.508Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.508Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.508Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T10:07:40.508Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:07:40.510Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T10:07:40.510Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T10:07:40.510Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:07:40.511Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T10:07:40.511Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:07:40.517Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:07:40.517Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.517Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T10:07:40.517Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.517Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:07:40.518Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:07:40.518Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.518Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.518Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T10:07:40.518Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.518Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.518Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T10:07:40.518Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.524Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T10:07:40.524Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.524Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:07:40.525Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:07:40.525Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.526Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.526Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T10:07:40.526Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.526Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.526Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T10:07:40.526Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.526Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T10:07:40.526Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.526Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:07:40.527Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.527Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.527Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.527Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T10:07:40.527Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.527Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.527Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.529Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.529Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.529Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T10:07:40.529Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.529Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.529Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.530Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:07:40.530Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.530Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.530Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T10:07:40.530Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.530Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T10:07:40.530Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.530Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.530Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.530Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:07:40.531Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.531Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.532Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T10:07:40.532Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.532Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.532Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T10:07:40.533Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T10:07:40.533Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T10:07:40.533Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T10:07:40.533Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:07:40.534Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.534Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.534Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:07:40.535Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.535Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T10:07:40.535Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.535Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:07:40.537Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:07:40.537Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.537Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T10:07:40.537Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.537Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:07:40.538Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:07:40.538Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.538Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T10:07:40.538Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.538Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:07:40.539Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:07:40.540Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T10:07:40.541Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T10:07:40.541Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.541Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.541Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T10:07:40.543Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T10:07:40.543Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T10:07:40.544Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T10:07:40.544Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.545Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.546Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:07:40.546Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:07:40.547Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T10:07:40.548Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:07:40.548Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.548Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:07:40.548Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:07:40.548Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:07:40.548Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.548Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:07:40.548Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T10:07:40.548Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:07:40.549Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.550Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:07:40.550Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T10:07:40.550Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T10:07:40.550Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T10:07:40.550Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:07:40.552Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:07:40.554Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.556Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:07:40.557Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.558Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T10:07:40.558Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:07:40.559Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:07:40.561Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:07:40.564Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.564Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T10:07:40.564Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.564Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T10:07:40.564Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T10:07:40.565Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T10:07:40.565Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:07:40.567Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:07:40.569Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.569Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T10:07:40.569Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.569Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T10:07:40.571Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T10:07:40.572Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T10:07:40.572Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T10:07:40.572Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T10:07:40.572Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T10:07:40.574Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T10:07:40.574Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T10:07:40.574Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:07:40.575Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.575Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.575Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.575Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T10:07:40.575Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.575Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T10:07:40.575Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.577Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T10:07:40.577Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.579Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:07:40.579Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:07:40.579Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T10:07:40.583Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T10:07:40.583Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T10:07:40.583Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T10:07:40.584Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T10:07:40.584Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T10:07:40.585Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:07:40.587Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T10:07:40.587Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T10:07:40.588Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.589Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T10:07:40.589Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T10:07:40.590Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T10:07:40.592Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T10:07:40.592Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T10:07:40.592Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "right",
      "value": {
        "type": "StringLiteral",
        "value": "correct",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "wrong",
      "value": {
        "type": "StringLiteral",
        "value": "not wrong this time!",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "right",
      "type": "string",
      "value": "correct",
      "timestamp": "2024-08-30T18:15:43.343Z",
      "description": "Set variable right to correct."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "wrong",
      "type": "string",
      "value": "not wrong this time!",
      "timestamp": "2024-08-30T18:15:43.343Z",
      "description": "Set variable wrong to not wrong this time!."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "right",
      "value": {
        "type": "StringLiteral",
        "value": "correct",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "wrong",
      "value": {
        "type": "StringLiteral",
        "value": "not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "right",
      "type": "string",
      "value": "correct",
      "timestamp": "2024-08-30T18:18:47.682Z",
      "description": "Set variable right to correct."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "wrong",
      "type": "string",
      "value": "not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!",
      "timestamp": "2024-08-30T18:18:47.682Z",
      "description": "Set variable wrong to not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "right",
      "value": {
        "type": "StringLiteral",
        "value": "correct",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "wrong",
      "value": {
        "type": "StringLiteral",
        "value": "not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "right",
      "type": "string",
      "value": "correct",
      "timestamp": "2024-08-30T18:18:58.943Z",
      "description": "Set variable right to correct."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "wrong",
      "type": "string",
      "value": "not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
      "timestamp": "2024-08-30T18:18:58.943Z",
      "description": "Set variable wrong to not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "right",
      "value": {
        "type": "StringLiteral",
        "value": "correct",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "wrong",
      "value": {
        "type": "StringLiteral",
        "value": "not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "right",
      "type": "string",
      "value": "correct",
      "timestamp": "2024-08-30T18:19:15.389Z",
      "description": "Set variable right to correct."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "wrong",
      "type": "string",
      "value": "not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
      "timestamp": "2024-08-30T18:19:15.389Z",
      "description": "Set variable wrong to not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "StringLiteral",
        "value": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "string",
      "value": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
      "timestamp": "2024-08-30T18:19:37.650Z",
      "description": "Set variable x to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "StringLiteral",
        "value": "Not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "string",
      "value": "Not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
      "timestamp": "2024-08-30T18:19:52.311Z",
      "description": "Set variable x to Not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T18:23:04.576Z",
      "description": "Set variable x to 1."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T18:32:18.568Z",
      "description": "Set variable x to 1."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T18:36:03.897Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T18:36:03.897Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "an",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "array",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "with",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T18:37:12.205Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T18:37:12.205Z",
      "description": "Set variable y to 2."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "this",
        "is",
        "an",
        "array",
        "with",
        "words"
      ],
      "timestamp": "2024-08-30T18:37:12.206Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "an",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "array",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "with",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T18:37:29.766Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T18:37:29.766Z",
      "description": "Set variable y to 2."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "this",
        "is",
        "an",
        "array",
        "with",
        "words",
        "words",
        "words",
        "words",
        "words",
        "words",
        "words",
        "words"
      ],
      "timestamp": "2024-08-30T18:37:29.767Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "an",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "array",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "with",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "words",
      "value": {
        "type": "StringLiteral",
        "value": "imposter among us",
        "line": 4
      },
      "position": "11"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T18:38:08.565Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T18:38:08.565Z",
      "description": "Set variable y to 2."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "this",
        "is",
        "an",
        "array",
        "with",
        "words",
        "words",
        "words",
        "words",
        "words",
        "words",
        "words",
        "words"
      ],
      "timestamp": "2024-08-30T18:38:08.566Z",
      "description": "Created array words."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "words",
      "value": "imposter among us",
      "position": 11,
      "timestamp": "2024-08-30T18:38:08.566Z",
      "description": "Added imposter among us to array words at position 11."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Hello World",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subst",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "2",
        "end": "5"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Hello World",
      "timestamp": "2024-08-30T18:44:21.243Z",
      "description": "Set variable word to Hello World."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subst",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 2,
        "end": 5,
        "result": "llo"
      },
      "timestamp": "2024-08-30T18:44:21.243Z",
      "description": "Set variable subst to a substring of word from index 2 to 5."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Hello World",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subst",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "2",
        "end": "5"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Hello World",
      "timestamp": "2024-08-30T18:44:37.777Z",
      "description": "Set variable word to Hello World."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subst",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 2,
        "end": 5,
        "result": "llo"
      },
      "timestamp": "2024-08-30T18:44:37.777Z",
      "description": "Set variable subst to a substring of word from index 2 to 5."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T22:43:10.537Z",
      "description": "Set variable word to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 0,
        "end": 2,
        "result": "He"
      },
      "timestamp": "2024-08-30T22:43:10.537Z",
      "description": "Set variable variableName to a substring of word from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "adbwjahbdhjwa",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "adbwjahbdhjwa",
      "timestamp": "2024-08-30T22:56:27.038Z",
      "description": "Set variable word to adbwjahbdhjwa."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 3,
        "result": "db"
      },
      "timestamp": "2024-08-30T22:56:27.039Z",
      "description": "Set variable variableName to a substring of word from index 1 to 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 4
        },
        "operator": "-",
        "right": "1"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T02:14:05.901Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T02:14:05.901Z",
      "description": "Set variable y to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T02:14:05.901Z",
      "description": "Set variable z to 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": -1,
      "timestamp": "2024-08-31T02:14:05.902Z",
      "description": "Set variable x to -1."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:18:02.604Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:18:02.604Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:19:33.201Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:19:33.201Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:20:37.388Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:20:37.388Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:24:24.993Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:24:24.993Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:31:11.006Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:31:11.007Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:34:10.802Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:34:10.802Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:44:44.939Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:44:44.939Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:49:11.150Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:49:11.150Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:50:03.931Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T02:50:03.931Z",
      "description": "Set variable variableName to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:50:28.080Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T02:50:28.080Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:51:37.317Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T02:51:37.317Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:56:35.200Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T02:56:35.200Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:01:17.691Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:01:17.691Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:03:17.926Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:03:17.926Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:04:19.231Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:04:19.231Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:05:06.484Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:05:06.484Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:06:29.090Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:06:29.091Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:06:42.926Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:06:42.926Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:06:42.927Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:07:06.335Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:07:06.335Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:07:06.335Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:07:38.735Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:07:38.735Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:07:38.735Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:09:29.793Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:09:29.794Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:09:29.794Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:10:00.727Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:10:00.727Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:10:00.727Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:11:07.203Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:11:07.203Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:11:07.203Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:11:41.715Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:11:41.715Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:11:41.715Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:11:58.892Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:11:58.892Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:11:58.892Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:13:20.117Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:13:20.117Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:13:20.117Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:15:46.689Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:15:46.689Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:15:46.689Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:16:24.515Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:16:24.515Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:16:24.515Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:16:45.538Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:16:45.539Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:16:45.539Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:17:07.524Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:17:07.525Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:17:07.525Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:19:56.014Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:19:56.014Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:19:56.014Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:23:52.656Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:23:52.656Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:23:52.656Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:24:04.115Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:24:04.116Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:24:04.116Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:24:58.399Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:24:58.399Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:24:58.399Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:26:19.402Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:26:19.402Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:26:19.402Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:26:53.769Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:26:53.769Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:26:53.770Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:28:25.812Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:28:25.812Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:28:25.813Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:30:15.400Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:30:15.400Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:30:15.400Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:32:01.338Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:32:01.339Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:32:01.339Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:32:25.719Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:32:25.719Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:32:25.720Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:32:48.755Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:32:48.755Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:32:48.755Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:33:24.518Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:33:24.518Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:33:24.518Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:34:30.174Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:34:30.174Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:34:30.174Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:34:41.120Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:34:41.120Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:34:41.120Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:36:21.718Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:36:21.718Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:36:21.718Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:38:05.478Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:38:05.478Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:38:05.478Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:38:40.538Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:38:40.538Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:38:40.538Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:38:59.974Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:38:59.974Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:38:59.974Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:39:33.210Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:39:33.210Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:39:33.210Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:39:53.785Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:39:53.785Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:39:53.785Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:40:12.371Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:40:12.371Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:40:12.371Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:40:33.531Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:40:33.531Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:40:33.531Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:41:04.214Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:41:04.214Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:41:04.214Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hey",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "damn",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "word array is here to play",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "hey",
        "a",
        "damn",
        "word array is here to play"
      ],
      "timestamp": "2024-08-31T03:41:50.199Z",
      "description": "Created array words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:41:50.199Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:41:50.199Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:41:50.199Z",
      "description": "Set variable y to 2."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T03:41:50.200Z",
      "description": "Created array nums."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hey",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "damn",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "word array is here to play",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "hey",
        "a",
        "damn",
        "word array is here to play"
      ],
      "timestamp": "2024-08-31T03:43:02.650Z",
      "description": "Created array words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:43:02.650Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:43:02.651Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:43:02.651Z",
      "description": "Set variable y to 2."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T03:43:02.651Z",
      "description": "Created array nums."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "This",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "an",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "assortment of many words",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T03:44:59.591Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:44:59.591Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:44:59.591Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "This",
        "is",
        "an",
        "assortment of many words"
      ],
      "timestamp": "2024-08-31T03:44:59.591Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:46:04.879Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:46:04.879Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:46:04.879Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:46:04.880Z",
      "description": "Created array nums2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:46:30.306Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:46:30.307Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:46:30.307Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:46:30.307Z",
      "description": "Created array nums2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:47:04.409Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:47:04.409Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:47:04.409Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:47:04.410Z",
      "description": "Created array nums2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:48:42.279Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:48:42.279Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:48:42.279Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T03:48:42.280Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS  AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:54:42.857Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS  AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T03:54:42.857Z",
      "description": "Set variable words to THIS IS  AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERYY LONG"
      },
      "timestamp": "2024-08-31T03:54:42.857Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T03:54:42.858Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:55:10.030Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T03:55:10.031Z",
      "description": "Set variable words to THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "ERYY LONG "
      },
      "timestamp": "2024-08-31T03:55:10.031Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T03:55:10.031Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:57:47.422Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T03:57:47.423Z",
      "description": "Set variable words to THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "ERYY LONG "
      },
      "timestamp": "2024-08-31T03:57:47.423Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T03:57:47.424Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:58:48.677Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T03:58:48.677Z",
      "description": "Set variable words to THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "ERYY LONG "
      },
      "timestamp": "2024-08-31T03:58:48.677Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T03:58:48.678Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:59:16.349Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T03:59:16.349Z",
      "description": "Set variable words to THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERY LONG "
      },
      "timestamp": "2024-08-31T03:59:16.349Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T03:59:16.350Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:00:42.722Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T04:00:42.722Z",
      "description": "Set variable words to THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERY LONG "
      },
      "timestamp": "2024-08-31T04:00:42.722Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T04:00:42.723Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:01:41.861Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T04:01:41.861Z",
      "description": "Set variable words to THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERY LONG "
      },
      "timestamp": "2024-08-31T04:01:41.861Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T04:01:41.862Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:02:19.129Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T04:02:19.129Z",
      "description": "Set variable words to THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERY LONG "
      },
      "timestamp": "2024-08-31T04:02:19.129Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T04:02:19.129Z",
      "description": "Created array words."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        10
      ],
      "timestamp": "2024-08-31T04:02:19.130Z",
      "description": "Created array nums2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums3",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums4",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums5",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums6",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 6
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 9
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:03:28.619Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums3",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:03:28.619Z",
      "description": "Created array nums3."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "nums4",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:03:28.620Z",
      "description": "Created array nums4."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums5",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:03:28.621Z",
      "description": "Created array nums5."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums6",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:03:28.621Z",
      "description": "Created array nums6."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T04:03:28.622Z",
      "description": "Set variable words to THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERY LONG "
      },
      "timestamp": "2024-08-31T04:03:28.622Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T04:03:28.622Z",
      "description": "Created array words."
    },
    {
      "line": 9,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        10
      ],
      "timestamp": "2024-08-31T04:03:28.623Z",
      "description": "Created array nums2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums3",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums4",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums5",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums6",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 6
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 9
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:04:20.029Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums3",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:04:20.029Z",
      "description": "Created array nums3."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T04:04:20.029Z",
      "description": "Set variable words to THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums4",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:04:20.030Z",
      "description": "Created array nums4."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums5",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:04:20.030Z",
      "description": "Created array nums5."
    },
    {
      "line": 6,
      "operation": "create_array",
      "varName": "nums6",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:04:20.030Z",
      "description": "Created array nums6."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERY LONG "
      },
      "timestamp": "2024-08-31T04:04:20.030Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T04:04:20.031Z",
      "description": "Created array words."
    },
    {
      "line": 9,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        10
      ],
      "timestamp": "2024-08-31T04:04:20.031Z",
      "description": "Created array nums2."
    }
  ]
}
