AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.562Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.562Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.562Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.562Z",
      "description": "Checked if age > 18."
    },
    {
      "line": null,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-08-31T23:04:57.562Z",
      "description": "Set variable status to Child."
    },
    {
      "line": null,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-08-31T23:04:57.562Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": null,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-08-31T23:04:57.562Z",
      "description": "Set variable membership to None."
    },
    {
      "line": null,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-08-31T23:04:57.562Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": null,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-08-31T23:04:57.562Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.562Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:04:57.569Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.569Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.569Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.569Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-08-31T23:04:57.569Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-08-31T23:04:57.569Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.569Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-08-31T23:04:57.571Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.571Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.571Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.571Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:04:57.573Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.573Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.573Z",
      "description": "Checked if x > 30."
    },
    {
      "line": null,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-08-31T23:04:57.573Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": null,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-08-31T23:04:57.573Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": null,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-08-31T23:04:57.573Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.573Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.576Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.576Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-08-31T23:04:57.576Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.576Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:04:57.579Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.579Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.579Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-08-31T23:04:57.579Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.579Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.579Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.582Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.582Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:04:57.582Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.582Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.585Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.585Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.586Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.586Z",
      "description": "Checked if x > 10."
    },
    {
      "line": null,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:04:57.586Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.586Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.588Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.588Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.588Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-08-31T23:04:57.588Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.588Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.589Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:04:57.589Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:04:57.590Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.590Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:04:57.590Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.592Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-31T23:04:57.592Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-31T23:04:57.593Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-31T23:04:57.593Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.595Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:04:57.595Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-31T23:04:57.597Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.597Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-31T23:04:57.597Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.597Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.599Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-31T23:04:57.599Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.600Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-31T23:04:57.600Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-31T23:04:57.602Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:04:57.602Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-31T23:04:57.602Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.604Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-31T23:04:57.604Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.604Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.606Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-31T23:04:57.606Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-31T23:04:57.606Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-31T23:04:57.628Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-31T23:04:57.629Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-31T23:04:57.629Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.630Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-31T23:04:57.630Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-31T23:04:57.630Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.634Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:04:57.634Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:04:57.634Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:04:57.635Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:04:57.635Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:04:57.637Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:04:57.637Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-31T23:04:57.637Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:04:57.637Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.637Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:04:57.637Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.637Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.637Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.637Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-31T23:04:57.637Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.638Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:04:57.638Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:04:57.638Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.639Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:04:57.639Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:04:57.641Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:04:57.641Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.641Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-31T23:04:57.641Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.641Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:04:57.643Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.643Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.643Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.643Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-31T23:04:57.643Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.643Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.643Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:04:57.643Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.643Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-31T23:04:57.643Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.643Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.644Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:04:57.644Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.644Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.644Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-31T23:04:57.644Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.644Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.644Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-31T23:04:57.644Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.644Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-31T23:04:57.644Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.644Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:04:57.647Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.647Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.647Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.647Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-31T23:04:57.647Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.647Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.647Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.648Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.649Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.649Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-31T23:04:57.649Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.649Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.649Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.652Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:04:57.652Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.652Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.652Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-31T23:04:57.652Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.652Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-31T23:04:57.652Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.652Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.652Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.652Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:04:57.655Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.655Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.655Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-31T23:04:57.655Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.655Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.655Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-31T23:04:57.656Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-31T23:04:57.656Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-31T23:04:57.656Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-31T23:04:57.656Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:04:57.660Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.660Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.660Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:04:57.661Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.661Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-31T23:04:57.661Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.661Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:04:57.663Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:04:57.663Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.663Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-31T23:04:57.663Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.663Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:04:57.679Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:04:57.679Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.679Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-31T23:04:57.679Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.679Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:04:57.681Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:04:57.681Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:04:57.682Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:04:57.682Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.682Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.683Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.684Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:04:57.684Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-31T23:04:57.685Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-31T23:04:57.685Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:04:57.687Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-31T23:04:57.691Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-31T23:04:57.693Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:04:57.694Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:04:57.694Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:04:57.695Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:04:57.697Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:04:57.700Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.702Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:04:57.702Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.702Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:04:57.702Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:04:57.702Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:04:57.703Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:04:57.704Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.708Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.708Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:04:57.708Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.708Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-31T23:04:57.708Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-31T23:04:57.708Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-31T23:04:57.708Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.711Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.712Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.712Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:04:57.712Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.712Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:04:57.713Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:04:57.715Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-31T23:04:57.715Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-31T23:04:57.715Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-31T23:04:57.715Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-31T23:04:57.716Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-31T23:04:57.717Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-31T23:04:57.717Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.719Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.719Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.719Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.719Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-31T23:04:57.719Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.719Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:04:57.719Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.722Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:04:57.722Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.724Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.724Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:04:57.724Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:04:57.725Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:04:57.725Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-31T23:04:57.725Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:04:57.728Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:04:57.728Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-31T23:04:57.728Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.729Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-31T23:04:57.729Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:04:57.731Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.731Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-31T23:04:57.731Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:04:57.733Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-31T23:04:57.737Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:04:57.737Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-31T23:04:57.737Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.243Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.243Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.243Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.243Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-08-31T23:05:33.243Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-08-31T23:05:33.243Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-08-31T23:05:33.243Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-08-31T23:05:33.243Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-08-31T23:05:33.243Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.243Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:05:33.249Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.249Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.249Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.249Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-08-31T23:05:33.249Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-08-31T23:05:33.249Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.249Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-08-31T23:05:33.251Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.251Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.251Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.251Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:05:33.253Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.253Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.253Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-08-31T23:05:33.253Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-08-31T23:05:33.253Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-08-31T23:05:33.253Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.253Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.255Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.255Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-08-31T23:05:33.255Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.255Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:05:33.257Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.257Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.257Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-08-31T23:05:33.257Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.257Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.257Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.258Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.258Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:05:33.258Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.258Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.260Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.260Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.260Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.260Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:05:33.260Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.260Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.262Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.262Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.262Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-08-31T23:05:33.262Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.262Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.263Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:05:33.263Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:05:33.264Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.264Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:05:33.264Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.266Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-31T23:05:33.266Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-31T23:05:33.267Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-31T23:05:33.267Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.268Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:05:33.268Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-31T23:05:33.269Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.269Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-31T23:05:33.269Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.269Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.271Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-31T23:05:33.271Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.272Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-31T23:05:33.272Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-31T23:05:33.273Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:05:33.273Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-31T23:05:33.273Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.275Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-31T23:05:33.275Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.275Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.276Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-31T23:05:33.276Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-31T23:05:33.276Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-31T23:05:33.282Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-31T23:05:33.282Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-31T23:05:33.282Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.283Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-31T23:05:33.283Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-31T23:05:33.283Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.284Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:05:33.284Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:05:33.284Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:05:33.284Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:05:33.284Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:05:33.286Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:05:33.286Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-31T23:05:33.286Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:05:33.286Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.286Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:05:33.286Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.286Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.286Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.286Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-31T23:05:33.286Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.287Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:05:33.287Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:05:33.287Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.288Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:05:33.288Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:05:33.290Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:05:33.290Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.290Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-31T23:05:33.290Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.290Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:05:33.291Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.291Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.291Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.291Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-31T23:05:33.291Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.291Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.291Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:05:33.291Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.291Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-31T23:05:33.291Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.291Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.293Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:05:33.293Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.293Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.293Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-31T23:05:33.293Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.293Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.293Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-31T23:05:33.293Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.293Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-31T23:05:33.293Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.293Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:05:33.294Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.294Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.294Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.294Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-31T23:05:33.294Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.294Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.294Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.296Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.296Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.296Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-31T23:05:33.296Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.296Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.296Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.297Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:05:33.297Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.297Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.297Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-31T23:05:33.297Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.297Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-31T23:05:33.297Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.297Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.297Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.297Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:05:33.298Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.298Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.298Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-31T23:05:33.298Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.298Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.298Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-31T23:05:33.299Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-31T23:05:33.299Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-31T23:05:33.299Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-31T23:05:33.299Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:05:33.300Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.300Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.300Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:05:33.302Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.302Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-31T23:05:33.302Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.302Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:05:33.303Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:05:33.303Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.303Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-31T23:05:33.303Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.303Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:05:33.304Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:05:33.304Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.304Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-31T23:05:33.304Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.304Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:05:33.305Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:05:33.305Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:05:33.306Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:05:33.306Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.306Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.306Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.307Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:05:33.307Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-31T23:05:33.308Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-31T23:05:33.308Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:05:33.309Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-31T23:05:33.311Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-31T23:05:33.313Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:05:33.314Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:05:33.315Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:05:33.315Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.315Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:05:33.315Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:05:33.315Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.315Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:05:33.315Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:05:33.315Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.315Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:05:33.316Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:05:33.316Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.316Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:05:33.316Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:05:33.316Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.316Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:05:33.316Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.316Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.316Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:05:33.316Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:05:33.316Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.316Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:05:33.316Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:05:33.317Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:05:33.319Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-31T23:05:33.320Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:05:33.321Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.321Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:05:33.321Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.323Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.323Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:05:33.323Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.323Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-31T23:05:33.323Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-31T23:05:33.323Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-31T23:05:33.323Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.324Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.325Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.325Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:05:33.325Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.325Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:05:33.326Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:05:33.327Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-31T23:05:33.327Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-31T23:05:33.327Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-31T23:05:33.327Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-31T23:05:33.328Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-31T23:05:33.328Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-31T23:05:33.328Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.329Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.329Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.329Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.329Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-31T23:05:33.329Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.329Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:05:33.329Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.330Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:05:33.330Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.331Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.331Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:05:33.331Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:05:33.332Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:05:33.332Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-31T23:05:33.332Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:05:33.333Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:05:33.333Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-31T23:05:33.333Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.334Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-31T23:05:33.334Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:05:33.335Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.335Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-31T23:05:33.335Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.343Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:05:33.344Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-31T23:05:33.356Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:05:33.356Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-31T23:05:33.356Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.777Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.777Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.777Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.777Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-08-31T23:06:47.777Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-08-31T23:06:47.777Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-08-31T23:06:47.777Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-08-31T23:06:47.777Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-08-31T23:06:47.777Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.777Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:06:47.779Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.779Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.779Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.779Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-08-31T23:06:47.779Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-08-31T23:06:47.779Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.779Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-08-31T23:06:47.781Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.781Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.781Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.781Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:06:47.783Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.784Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.784Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-08-31T23:06:47.784Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-08-31T23:06:47.784Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-08-31T23:06:47.784Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.784Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.790Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.790Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-08-31T23:06:47.790Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.790Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:06:47.792Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.792Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.792Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-08-31T23:06:47.792Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.792Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.792Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.793Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.793Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:06:47.793Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.793Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.795Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.795Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.795Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.795Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:06:47.795Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.795Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.797Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.797Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.797Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-08-31T23:06:47.797Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.797Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.799Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:06:47.799Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:06:47.801Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.801Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:06:47.801Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.803Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-31T23:06:47.803Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-31T23:06:47.804Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-31T23:06:47.804Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.807Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:06:47.807Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-31T23:06:47.808Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.808Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-31T23:06:47.808Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.808Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.810Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-31T23:06:47.810Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.811Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-31T23:06:47.811Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-31T23:06:47.813Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:06:47.813Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-31T23:06:47.813Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.814Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-31T23:06:47.814Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.814Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.815Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-31T23:06:47.815Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-31T23:06:47.815Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-31T23:06:47.822Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-31T23:06:47.822Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-31T23:06:47.822Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.823Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-31T23:06:47.823Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-31T23:06:47.823Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.825Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:06:47.825Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:06:47.825Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:06:47.825Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:06:47.825Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:06:47.826Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:06:47.826Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-31T23:06:47.826Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:06:47.826Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.826Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:06:47.826Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.826Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.826Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.826Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-31T23:06:47.826Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.828Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:06:47.828Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:06:47.828Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.829Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:06:47.829Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:06:47.831Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:06:47.831Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.831Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-31T23:06:47.831Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.831Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:06:47.832Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.832Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.833Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.833Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-31T23:06:47.833Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.833Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.833Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:06:47.833Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.833Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-31T23:06:47.833Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.833Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.834Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:06:47.834Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.834Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.834Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-31T23:06:47.834Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.834Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.834Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-31T23:06:47.834Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.834Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-31T23:06:47.834Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.834Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:06:47.836Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.836Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.836Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.836Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-31T23:06:47.836Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.836Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.836Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.837Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.837Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.837Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-31T23:06:47.837Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.837Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.837Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.839Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:06:47.839Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.839Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.839Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-31T23:06:47.839Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.839Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-31T23:06:47.839Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.839Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.839Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.839Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:06:47.840Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.840Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.840Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-31T23:06:47.840Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.840Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.841Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-31T23:06:47.844Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-31T23:06:47.844Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-31T23:06:47.844Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-31T23:06:47.844Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:06:47.845Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.845Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.845Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:06:47.848Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.848Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-31T23:06:47.848Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.848Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:06:47.849Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:06:47.849Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.849Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-31T23:06:47.849Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.849Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:06:47.851Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:06:47.851Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.851Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-31T23:06:47.851Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.851Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:06:47.852Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:06:47.852Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:06:47.853Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:06:47.853Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.853Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.853Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.855Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:06:47.855Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-31T23:06:47.856Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-31T23:06:47.856Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:06:47.857Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-31T23:06:47.859Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-31T23:06:47.861Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:06:47.864Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:06:47.866Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:06:47.870Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:06:47.872Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:06:47.877Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.884Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.884Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:06:47.884Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.884Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-31T23:06:47.884Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-31T23:06:47.884Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-31T23:06:47.884Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.886Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.888Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.888Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:06:47.888Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.888Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:06:47.891Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:06:47.893Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-31T23:06:47.893Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-31T23:06:47.893Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-31T23:06:47.893Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-31T23:06:47.894Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-31T23:06:47.894Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-31T23:06:47.894Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.897Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.897Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.897Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.897Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-31T23:06:47.897Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.897Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:06:47.897Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.899Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:06:47.899Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.900Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.900Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:06:47.900Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:06:47.902Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:06:47.902Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-31T23:06:47.902Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:06:47.907Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:06:47.907Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-31T23:06:47.907Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.908Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-31T23:06:47.908Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:06:47.910Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.910Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-31T23:06:47.910Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:06:47.912Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:06:47.914Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:06:47.914Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:06:47.914Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:06:47.914Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:06:47.914Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-31T23:06:47.916Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:06:47.916Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-31T23:06:47.916Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.701Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.701Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.701Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.701Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-08-31T23:11:49.701Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-08-31T23:11:49.701Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-08-31T23:11:49.701Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-08-31T23:11:49.701Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-08-31T23:11:49.701Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.701Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.719Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.719Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.719Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.719Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-08-31T23:11:49.719Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-08-31T23:11:49.719Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-08-31T23:11:49.719Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-08-31T23:11:49.720Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-08-31T23:11:49.720Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.720Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:11:49.783Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.783Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.783Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.783Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-08-31T23:11:49.783Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-08-31T23:11:49.783Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.783Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-08-31T23:11:49.794Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.794Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.794Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.794Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:11:49.798Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.799Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.799Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-08-31T23:11:49.799Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-08-31T23:11:49.799Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-08-31T23:11:49.799Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.799Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.801Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.801Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-08-31T23:11:49.801Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.801Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:11:49.803Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.803Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.803Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-08-31T23:11:49.803Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.803Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.803Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.806Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.806Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:11:49.806Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.806Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.809Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.809Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.809Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.809Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:11:49.809Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.809Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.811Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.811Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.811Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-08-31T23:11:49.811Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.811Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.813Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:11:49.813Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:11:49.816Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.816Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:11:49.816Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.818Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-31T23:11:49.818Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-31T23:11:49.823Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-31T23:11:49.823Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.831Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:11:49.831Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-31T23:11:49.835Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.835Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-31T23:11:49.835Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.835Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.838Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-31T23:11:49.838Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.839Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-31T23:11:49.839Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-31T23:11:49.841Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:11:49.841Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-31T23:11:49.842Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.845Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-31T23:11:49.845Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.845Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.846Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-31T23:11:49.846Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-31T23:11:49.846Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-31T23:11:49.855Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-31T23:11:49.855Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-31T23:11:49.855Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.857Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-31T23:11:49.857Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-31T23:11:49.857Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.858Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:11:49.858Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:11:49.858Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:11:49.858Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:11:49.858Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:11:49.860Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:11:49.860Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-31T23:11:49.860Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:11:49.860Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.860Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:11:49.860Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.860Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.860Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.860Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-31T23:11:49.860Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.863Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:11:49.863Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:11:49.863Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.865Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:11:49.865Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:11:49.870Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:11:49.870Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.870Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-31T23:11:49.870Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.870Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:11:49.872Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.872Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.872Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.872Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-31T23:11:49.872Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.872Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.872Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:11:49.872Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.872Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-31T23:11:49.872Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.872Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.874Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:11:49.874Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.875Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.875Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-31T23:11:49.875Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.875Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.875Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-31T23:11:49.875Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.875Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-31T23:11:49.875Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.875Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:11:49.879Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.879Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.879Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.879Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-31T23:11:49.879Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.879Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.879Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.881Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.881Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.881Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-31T23:11:49.881Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.881Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.881Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.883Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:11:49.883Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.883Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.883Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-31T23:11:49.883Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.883Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-31T23:11:49.883Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.883Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.883Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.883Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:11:49.884Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.884Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.884Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-31T23:11:49.884Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.884Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.884Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-31T23:11:49.887Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-31T23:11:49.887Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-31T23:11:49.887Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-31T23:11:49.887Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:11:49.895Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.895Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.895Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:11:49.897Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.897Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-31T23:11:49.897Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.897Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:11:49.900Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:11:49.900Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.900Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-31T23:11:49.900Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.900Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:11:49.903Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:11:49.903Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.903Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-31T23:11:49.903Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.903Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:11:49.906Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:11:49.906Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:11:49.907Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:11:49.907Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.907Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.907Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.910Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:11:49.910Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-31T23:11:49.911Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-31T23:11:49.911Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:11:49.913Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-31T23:11:49.916Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-31T23:11:49.918Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:11:49.920Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:11:49.921Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:11:49.926Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:11:49.930Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:11:49.931Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.936Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.936Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:11:49.936Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.936Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-31T23:11:49.936Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-31T23:11:49.936Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-31T23:11:49.936Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.939Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.942Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.942Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:11:49.942Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.942Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:11:49.944Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:11:49.946Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-31T23:11:49.946Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-31T23:11:49.946Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-31T23:11:49.946Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-31T23:11:49.948Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-31T23:11:49.948Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-31T23:11:49.948Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.949Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.949Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.949Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.949Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-31T23:11:49.949Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.949Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:11:49.949Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.953Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:11:49.953Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.955Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.955Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:11:49.955Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:11:49.957Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:11:49.957Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-31T23:11:49.957Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:11:49.958Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:11:49.958Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-31T23:11:49.958Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.959Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-31T23:11:49.959Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:11:49.963Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.963Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-31T23:11:49.963Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:11:49.965Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-31T23:11:49.966Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:11:49.966Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-31T23:11:49.966Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:35.915Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.915Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.916Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.916Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-08-31T23:15:35.916Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-08-31T23:15:35.916Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-08-31T23:15:35.916Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-08-31T23:15:35.916Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-08-31T23:15:35.916Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.916Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:35.918Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.918Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.918Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:35.918Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-08-31T23:15:35.918Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-08-31T23:15:35.918Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.918Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-08-31T23:15:35.920Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.920Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.920Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.920Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:15:35.926Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.926Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.926Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-08-31T23:15:35.926Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-08-31T23:15:35.926Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-08-31T23:15:35.926Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.926Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:35.928Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:35.929Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-08-31T23:15:35.929Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.929Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:35.930Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:35.931Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-08-31T23:15:35.931Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-08-31T23:15:35.931Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.931Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.931Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:35.934Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.934Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:15:35.934Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.934Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:35.936Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.936Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.936Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.936Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:15:35.936Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.936Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:35.938Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.938Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:35.938Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-08-31T23:15:35.938Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.938Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:35.940Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:15:35.940Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:35.943Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:35.943Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:15:35.943Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:35.945Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-31T23:15:35.945Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-31T23:15:35.950Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-31T23:15:35.950Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:35.951Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:15:35.951Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-31T23:15:35.953Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:35.953Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-31T23:15:35.953Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.953Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:35.958Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-31T23:15:35.958Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:35.960Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-31T23:15:35.960Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-31T23:15:35.962Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:35.962Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:35.962Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:35.966Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-31T23:15:35.966Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:15:35.966Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:35.968Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-31T23:15:35.968Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-31T23:15:35.968Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-31T23:15:35.979Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-31T23:15:35.979Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-31T23:15:35.979Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:35.982Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-31T23:15:35.982Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-31T23:15:35.982Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:35.984Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:15:35.984Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:15:35.984Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:15:35.984Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:15:35.984Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:35.987Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:15:35.987Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-31T23:15:35.987Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:35.987Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.987Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:15:35.988Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.989Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.989Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.989Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-31T23:15:35.989Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:35.992Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:15:35.992Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:15:35.992Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:35.995Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:15:35.995Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:35.997Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:15:35.997Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-31T23:15:35.997Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-31T23:15:35.997Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:35.998Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:36.001Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:36.001Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.001Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.002Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-31T23:15:36.002Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.002Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.002Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:15:36.002Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.002Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-31T23:15:36.002Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.002Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:36.003Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:15:36.003Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.003Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.003Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-31T23:15:36.003Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.003Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.003Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-31T23:15:36.003Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.003Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-31T23:15:36.003Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.003Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:15:36.006Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.006Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.007Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.007Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-31T23:15:36.007Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.007Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.007Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.011Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.011Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.011Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-31T23:15:36.011Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.011Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.011Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.013Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:36.013Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.013Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.013Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-31T23:15:36.013Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.013Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-31T23:15:36.013Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.013Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.013Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.013Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:15:36.018Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.018Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.018Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-31T23:15:36.018Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.018Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.018Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-31T23:15:36.019Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-31T23:15:36.019Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-31T23:15:36.019Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-31T23:15:36.019Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:36.081Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.081Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.081Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:36.084Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.084Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-31T23:15:36.084Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.084Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:36.085Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:15:36.085Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.086Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-31T23:15:36.086Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.086Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:36.087Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:15:36.087Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.087Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-31T23:15:36.087Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.087Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:36.088Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:15:36.088Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:36.090Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:15:36.090Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.090Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.090Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:36.091Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:15:36.091Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-31T23:15:36.096Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-31T23:15:36.096Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:36.100Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-31T23:15:36.100Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:36.101Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-31T23:15:36.103Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-31T23:15:36.106Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:36.112Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:36.114Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:36.115Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:36.119Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.121Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-31T23:15:36.122Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:36.122Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.122Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-31T23:15:36.122Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:15:36.122Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.122Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:36.122Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:36.125Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.125Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:15:36.125Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.125Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-31T23:15:36.125Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-31T23:15:36.125Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-31T23:15:36.125Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:36.142Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:36.143Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.143Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:15:36.143Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.143Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:15:36.144Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:15:36.145Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-31T23:15:36.145Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-31T23:15:36.145Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-31T23:15:36.145Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-31T23:15:36.146Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-31T23:15:36.146Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-31T23:15:36.146Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:36.149Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.149Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.149Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.149Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-31T23:15:36.149Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.149Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:36.149Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.152Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:15:36.152Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.153Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:36.153Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:36.153Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:15:36.156Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:36.156Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-31T23:15:36.156Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:15:36.157Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:15:36.157Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-31T23:15:36.157Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:36.158Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-31T23:15:36.158Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:36.159Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.159Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-31T23:15:36.159Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:36.161Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-31T23:15:36.162Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:36.162Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-31T23:15:36.162Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.235Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.235Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.235Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.235Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-08-31T23:15:48.235Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-08-31T23:15:48.235Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-08-31T23:15:48.235Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-08-31T23:15:48.235Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-08-31T23:15:48.235Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.235Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:48.238Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.238Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.238Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.239Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-08-31T23:15:48.239Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-08-31T23:15:48.239Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.239Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-08-31T23:15:48.251Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.251Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.251Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.251Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:15:48.256Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.256Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.256Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-08-31T23:15:48.256Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-08-31T23:15:48.256Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-08-31T23:15:48.256Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.256Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.260Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.260Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-08-31T23:15:48.260Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.260Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:48.261Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.261Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.261Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-08-31T23:15:48.261Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.261Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.261Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.262Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.262Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:15:48.262Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.262Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.264Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.264Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.264Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.264Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:15:48.264Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.264Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.265Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.265Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.265Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-08-31T23:15:48.265Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.265Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.267Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:15:48.267Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:48.269Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.269Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:15:48.269Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.270Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-31T23:15:48.270Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-31T23:15:48.271Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-31T23:15:48.271Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.272Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:15:48.272Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-31T23:15:48.273Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.274Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-31T23:15:48.274Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.274Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.276Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-31T23:15:48.276Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.277Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-31T23:15:48.277Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-31T23:15:48.278Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:48.278Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:48.279Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.281Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-31T23:15:48.281Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.281Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.283Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-31T23:15:48.283Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-31T23:15:48.283Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-31T23:15:48.291Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-31T23:15:48.291Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-31T23:15:48.291Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.292Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-31T23:15:48.292Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-31T23:15:48.292Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.294Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:15:48.294Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:15:48.294Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:15:48.294Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:15:48.294Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:48.295Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:15:48.295Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-31T23:15:48.295Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:48.295Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.295Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:15:48.295Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.295Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.295Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.295Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-31T23:15:48.295Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.298Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:15:48.298Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:15:48.298Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.299Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:15:48.299Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:48.301Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:15:48.301Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.301Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-31T23:15:48.301Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.301Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:48.303Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.303Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.303Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.303Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-31T23:15:48.303Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.303Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.303Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:15:48.303Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.303Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-31T23:15:48.303Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.303Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.305Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:15:48.305Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.305Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.305Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-31T23:15:48.305Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.305Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.305Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-31T23:15:48.305Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.305Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-31T23:15:48.305Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.305Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:15:48.309Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.309Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.309Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.309Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-31T23:15:48.309Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.309Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.309Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.311Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.311Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.311Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-31T23:15:48.311Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.311Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.311Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.314Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:48.314Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.314Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.314Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-31T23:15:48.314Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.314Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-31T23:15:48.314Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.314Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.314Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.314Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:15:48.316Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.316Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.316Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-31T23:15:48.316Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.316Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.316Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-31T23:15:48.324Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-31T23:15:48.324Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-31T23:15:48.324Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-31T23:15:48.324Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:48.326Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.326Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.326Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:48.328Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.329Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-31T23:15:48.329Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.329Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:48.331Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:15:48.331Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.331Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-31T23:15:48.331Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.331Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:48.334Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:15:48.334Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.334Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-31T23:15:48.334Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.334Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:48.343Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:15:48.343Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:15:48.346Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:15:48.346Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.346Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.346Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.352Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:15:48.352Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-31T23:15:48.359Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-31T23:15:48.359Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:48.363Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-31T23:15:48.368Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-31T23:15:48.375Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:48.378Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:48.380Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:48.382Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:48.383Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:48.384Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:48.387Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.390Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.390Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:15:48.390Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.390Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-31T23:15:48.390Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-31T23:15:48.390Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-31T23:15:48.390Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.391Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.392Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.392Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:15:48.392Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.392Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:15:48.394Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:15:48.395Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-31T23:15:48.395Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-31T23:15:48.395Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-31T23:15:48.395Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-31T23:15:48.396Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-31T23:15:48.396Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-31T23:15:48.396Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.397Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.397Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.397Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.397Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-31T23:15:48.397Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.397Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:15:48.397Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.399Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:15:48.399Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.400Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.400Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:48.400Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:15:48.404Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:15:48.404Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-31T23:15:48.404Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:15:48.405Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:15:48.405Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-31T23:15:48.405Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.407Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-31T23:15:48.407Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:15:48.408Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.408Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-31T23:15:48.408Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:15:48.409Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-31T23:15:48.411Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:15:48.411Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-31T23:15:48.411Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.779Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.779Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.779Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.779Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-08-31T23:16:17.779Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-08-31T23:16:17.779Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-08-31T23:16:17.779Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-08-31T23:16:17.779Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-08-31T23:16:17.779Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.779Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:16:17.781Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.781Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.781Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.781Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-08-31T23:16:17.781Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-08-31T23:16:17.781Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.781Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-08-31T23:16:17.782Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.782Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.783Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.783Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:16:17.785Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.785Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.785Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-08-31T23:16:17.785Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-08-31T23:16:17.785Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-08-31T23:16:17.785Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.785Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.787Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.787Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-08-31T23:16:17.787Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.787Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:16:17.788Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.788Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.788Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-08-31T23:16:17.788Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.788Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.788Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.790Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.790Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:16:17.790Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.790Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.791Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.791Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.791Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.791Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:16:17.792Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.792Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.793Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.793Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.793Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-08-31T23:16:17.793Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.793Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.794Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:16:17.795Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:16:17.796Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.796Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:16:17.796Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.797Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-31T23:16:17.797Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-31T23:16:17.798Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-31T23:16:17.798Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.799Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:16:17.799Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-31T23:16:17.801Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.801Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-31T23:16:17.801Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.801Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.803Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-31T23:16:17.803Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.804Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-31T23:16:17.804Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-31T23:16:17.805Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:16:17.805Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-31T23:16:17.805Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.807Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-31T23:16:17.807Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.807Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.808Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-31T23:16:17.808Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-31T23:16:17.808Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-31T23:16:17.813Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-31T23:16:17.813Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-31T23:16:17.813Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.814Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-31T23:16:17.814Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-31T23:16:17.814Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.816Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:16:17.816Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:16:17.816Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:16:17.816Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:16:17.816Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:16:17.817Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:16:17.817Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-31T23:16:17.817Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:16:17.817Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.817Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:16:17.817Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.817Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.817Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.817Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-31T23:16:17.817Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.818Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:16:17.818Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:16:17.818Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.819Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:16:17.819Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:16:17.821Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:16:17.821Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.821Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-31T23:16:17.821Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.821Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:16:17.822Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.822Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.822Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.822Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-31T23:16:17.822Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.822Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.822Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:16:17.822Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.822Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-31T23:16:17.822Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.822Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.823Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:16:17.823Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.823Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.823Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-31T23:16:17.823Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.823Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.823Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-31T23:16:17.823Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.823Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-31T23:16:17.823Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.823Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:16:17.824Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.825Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.825Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.825Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-31T23:16:17.825Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.825Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.825Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.826Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.826Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.826Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-31T23:16:17.826Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.826Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.826Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.827Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:16:17.827Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.827Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.827Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-31T23:16:17.827Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.827Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-31T23:16:17.827Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.827Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.827Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.827Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:16:17.828Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.828Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.828Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-31T23:16:17.828Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.828Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.828Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-31T23:16:17.830Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-31T23:16:17.830Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-31T23:16:17.830Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-31T23:16:17.830Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:16:17.831Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.831Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.831Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:16:17.832Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.832Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-31T23:16:17.832Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.832Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:16:17.833Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:16:17.833Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.833Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-31T23:16:17.833Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.833Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:16:17.834Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:16:17.834Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.834Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-31T23:16:17.834Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.834Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:16:17.835Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:16:17.835Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:16:17.836Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:16:17.836Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.836Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.836Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.837Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:16:17.837Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-31T23:16:17.838Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-31T23:16:17.838Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:16:17.839Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:16:17.840Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-31T23:16:17.841Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-31T23:16:17.844Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:16:17.849Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:16:17.851Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:16:17.852Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:16:17.856Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:16:17.858Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-31T23:16:17.858Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.858Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:16:17.858Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:16:17.858Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.858Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:16:17.858Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:16:17.858Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.858Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:16:17.858Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:16:17.859Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.861Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.861Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:16:17.861Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.861Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-31T23:16:17.861Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-31T23:16:17.861Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-31T23:16:17.861Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.862Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.864Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.864Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:16:17.864Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.864Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:16:17.865Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:16:17.866Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-31T23:16:17.866Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-31T23:16:17.866Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-31T23:16:17.866Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-31T23:16:17.867Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-31T23:16:17.867Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-31T23:16:17.867Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.868Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.868Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.868Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.868Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-31T23:16:17.868Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.868Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:16:17.868Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.869Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:16:17.870Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.871Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.872Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:16:17.872Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:16:17.874Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:16:17.874Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-31T23:16:17.874Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:16:17.875Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:16:17.875Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-31T23:16:17.875Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.878Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-31T23:16:17.878Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:16:17.879Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.879Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-31T23:16:17.879Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:16:17.881Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-31T23:16:17.883Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:16:17.883Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-31T23:16:17.883Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.061Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.061Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.061Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.061Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-08-31T23:26:59.061Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-08-31T23:26:59.061Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-08-31T23:26:59.061Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-08-31T23:26:59.061Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-08-31T23:26:59.061Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.061Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:26:59.065Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.065Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.065Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.065Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-08-31T23:26:59.065Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-08-31T23:26:59.065Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.065Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-08-31T23:26:59.069Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.069Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.069Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.069Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:26:59.072Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.072Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.072Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-08-31T23:26:59.072Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-08-31T23:26:59.072Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-08-31T23:26:59.072Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.072Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.074Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.074Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-08-31T23:26:59.074Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.074Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:26:59.076Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.077Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.077Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-08-31T23:26:59.077Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.077Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.077Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.078Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.078Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:26:59.078Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.078Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.080Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.080Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.080Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.080Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:26:59.080Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.080Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.081Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.081Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.083Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-08-31T23:26:59.083Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.083Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.085Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:26:59.085Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:26:59.087Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.087Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:26:59.087Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.089Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-31T23:26:59.089Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-31T23:26:59.090Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-31T23:26:59.090Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.092Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:26:59.092Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-31T23:26:59.094Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.094Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-31T23:26:59.094Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.094Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.098Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-31T23:26:59.098Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.099Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-31T23:26:59.099Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-31T23:26:59.100Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:26:59.100Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-31T23:26:59.100Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.102Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-31T23:26:59.102Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.102Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.103Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-31T23:26:59.103Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-31T23:26:59.103Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-31T23:26:59.111Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-31T23:26:59.111Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-31T23:26:59.111Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.113Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-31T23:26:59.113Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-31T23:26:59.113Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.114Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:26:59.114Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:26:59.114Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:26:59.114Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:26:59.114Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:26:59.116Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:26:59.116Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-31T23:26:59.116Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:26:59.116Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.116Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:26:59.116Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.116Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.116Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.116Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-31T23:26:59.116Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.118Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:26:59.118Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:26:59.118Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.119Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:26:59.119Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:26:59.121Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:26:59.121Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.121Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-31T23:26:59.121Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.121Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:26:59.122Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.122Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.122Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.122Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-31T23:26:59.122Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.122Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.122Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:26:59.122Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.122Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-31T23:26:59.122Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.122Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.124Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:26:59.124Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.124Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.124Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-31T23:26:59.124Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.124Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.124Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-31T23:26:59.124Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.124Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-31T23:26:59.124Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.124Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:26:59.127Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.127Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.127Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.127Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-31T23:26:59.127Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.128Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.128Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.130Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.130Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.130Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-31T23:26:59.130Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.130Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.130Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.132Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:26:59.132Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.132Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.132Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-31T23:26:59.132Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.132Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-31T23:26:59.132Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.132Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.132Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.132Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:26:59.134Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.134Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.134Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-31T23:26:59.134Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.134Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.134Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-31T23:26:59.135Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-31T23:26:59.135Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-31T23:26:59.135Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-31T23:26:59.135Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:26:59.137Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.137Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.137Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:26:59.138Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.138Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-31T23:26:59.138Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.138Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:26:59.139Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:26:59.139Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.139Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-31T23:26:59.139Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.139Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:26:59.142Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:26:59.142Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.142Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-31T23:26:59.142Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.142Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:26:59.143Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:26:59.143Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:26:59.144Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:26:59.144Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.144Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.144Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.146Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:26:59.146Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-31T23:26:59.147Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-31T23:26:59.147Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:26:59.148Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-31T23:26:59.150Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-31T23:26:59.152Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:26:59.154Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:26:59.176Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:26:59.187Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:26:59.188Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:26:59.191Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-31T23:26:59.191Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.191Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:26:59.191Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:26:59.191Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.191Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:26:59.191Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:26:59.191Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.191Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:26:59.191Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:26:59.191Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.191Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:26:59.192Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.193Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.193Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:26:59.193Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.193Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-31T23:26:59.194Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-31T23:26:59.194Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-31T23:26:59.194Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.214Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.215Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.215Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:26:59.215Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.215Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:26:59.216Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:26:59.217Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-31T23:26:59.218Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-31T23:26:59.218Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-31T23:26:59.218Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-31T23:26:59.219Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-31T23:26:59.219Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-31T23:26:59.219Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.220Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.220Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.220Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.220Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-31T23:26:59.220Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.220Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:26:59.220Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.221Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:26:59.221Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.226Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.226Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:26:59.226Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:26:59.227Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:26:59.227Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-31T23:26:59.227Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:26:59.228Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:26:59.228Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-31T23:26:59.228Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.229Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-31T23:26:59.229Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:26:59.230Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.230Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-31T23:26:59.230Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:26:59.231Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-31T23:26:59.233Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:26:59.233Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-31T23:26:59.233Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:18.938Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.938Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.938Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.938Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-08-31T23:27:18.938Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-08-31T23:27:18.938Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-08-31T23:27:18.938Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-08-31T23:27:18.938Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-08-31T23:27:18.938Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:18.938Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:27:18.940Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.940Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.940Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:18.940Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-08-31T23:27:18.940Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-08-31T23:27:18.940Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:18.940Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-08-31T23:27:18.941Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.941Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.942Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:18.942Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:27:18.943Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.943Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.944Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-08-31T23:27:18.944Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-08-31T23:27:18.944Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-08-31T23:27:18.944Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:18.944Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:18.948Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:18.948Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-08-31T23:27:18.948Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:18.948Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:27:18.949Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:18.949Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-08-31T23:27:18.949Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-08-31T23:27:18.949Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:18.949Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:18.949Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:18.951Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.951Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:27:18.951Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:18.951Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:18.953Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.953Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.953Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.953Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:27:18.953Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:18.953Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:18.954Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:27:18.954Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:18.955Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-08-31T23:27:18.955Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:18.955Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:27:18.956Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:27:18.956Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:27:18.957Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:27:18.957Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:27:18.957Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:27:18.958Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-31T23:27:18.958Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-31T23:27:18.959Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-31T23:27:18.959Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:27:18.963Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:27:18.963Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-31T23:27:18.964Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:18.964Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-31T23:27:18.964Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:18.964Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:27:18.967Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-31T23:27:18.967Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:27:18.968Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-31T23:27:18.968Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-31T23:27:18.969Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:27:18.969Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-31T23:27:18.969Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:27:18.971Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-31T23:27:18.971Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:27:18.971Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:27:18.972Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-31T23:27:18.972Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-31T23:27:18.972Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-31T23:27:18.977Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-31T23:27:18.978Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-31T23:27:18.978Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:27:18.982Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-31T23:27:18.982Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-31T23:27:18.982Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:27:18.984Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:27:18.984Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:27:18.984Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:27:18.984Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:27:18.984Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:27:19.003Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:27:19.003Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-31T23:27:19.003Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:27:19.003Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.003Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:27:19.003Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.003Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.005Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.005Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-31T23:27:19.005Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:27:19.014Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:27:19.014Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:27:19.014Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:19.018Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:27:19.018Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:27:19.020Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:27:19.021Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.021Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-31T23:27:19.021Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.021Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:27:19.022Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:19.022Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.022Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.022Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-31T23:27:19.023Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.023Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.023Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:27:19.023Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.023Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-31T23:27:19.023Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.023Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:19.026Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:27:19.026Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.026Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.026Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-31T23:27:19.026Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.026Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.026Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-31T23:27:19.026Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.026Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-31T23:27:19.026Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.026Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:27:19.028Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.028Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.028Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.028Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-31T23:27:19.028Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.028Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.028Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.051Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.051Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.051Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-31T23:27:19.051Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.051Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.051Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.053Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:27:19.053Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.053Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.053Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-31T23:27:19.053Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.053Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-31T23:27:19.053Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.053Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.053Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.053Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:27:19.054Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.054Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.054Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-31T23:27:19.054Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.054Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.054Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-31T23:27:19.055Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-31T23:27:19.055Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-31T23:27:19.055Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-31T23:27:19.055Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:27:19.057Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.057Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.057Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:27:19.059Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.059Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-31T23:27:19.059Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.059Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:27:19.061Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:27:19.063Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.063Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-31T23:27:19.063Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.063Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:27:19.065Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:27:19.065Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.065Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-31T23:27:19.065Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.065Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:27:19.067Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:27:19.067Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:27:19.068Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:27:19.068Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.068Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.068Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:27:19.069Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:27:19.069Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-31T23:27:19.071Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-31T23:27:19.071Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:27:19.073Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-31T23:27:19.075Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:27:19.089Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-31T23:27:19.090Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:27:19.093Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:27:19.094Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:19.095Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:27:19.096Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:27:19.098Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:27:19.099Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-31T23:27:19.099Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:27:19.100Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:19.101Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.101Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:27:19.101Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.101Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-31T23:27:19.101Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-31T23:27:19.101Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-31T23:27:19.101Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:19.103Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:19.107Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.107Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:27:19.107Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.107Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:27:19.108Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:27:19.109Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-31T23:27:19.109Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-31T23:27:19.109Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-31T23:27:19.109Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-31T23:27:19.110Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-31T23:27:19.110Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-31T23:27:19.110Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:19.112Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.112Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.112Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.112Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-31T23:27:19.112Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.112Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:27:19.112Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.115Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:27:19.115Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.116Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:19.116Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:27:19.116Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:27:19.118Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:27:19.118Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-31T23:27:19.118Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:27:19.119Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:27:19.119Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-31T23:27:19.119Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:19.120Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-31T23:27:19.120Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:27:19.121Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.121Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-31T23:27:19.121Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:27:19.122Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-31T23:27:19.123Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:27:19.123Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-31T23:27:19.123Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.553Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.553Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.554Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.554Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-08-31T23:33:07.554Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-08-31T23:33:07.554Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-08-31T23:33:07.554Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-08-31T23:33:07.554Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-08-31T23:33:07.554Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": 20,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.554Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:33:07.556Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.556Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.556Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.556Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-08-31T23:33:07.556Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-08-31T23:33:07.556Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.556Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-08-31T23:33:07.563Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.563Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.563Z",
      "description": "Checked if score > 80."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.563Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:33:07.565Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.565Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.565Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-08-31T23:33:07.565Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-08-31T23:33:07.565Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-08-31T23:33:07.565Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.565Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.567Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.567Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-08-31T23:33:07.567Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.567Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:33:07.571Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.571Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.571Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-08-31T23:33:07.571Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.572Z",
      "description": "End of if statement."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.572Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.573Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.573Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:33:07.573Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.573Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": null,
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10"
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.576Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.576Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.576Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.576Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-08-31T23:33:07.576Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.576Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": null,
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.578Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.578Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.578Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-08-31T23:33:07.578Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.578Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.579Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:33:07.579Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:33:07.580Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.580Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:33:07.580Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.581Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-31T23:33:07.581Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 3
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-31T23:33:07.582Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-31T23:33:07.582Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.583Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-31T23:33:07.583Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-31T23:33:07.584Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.585Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-31T23:33:07.585Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.585Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 3
          },
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.588Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-31T23:33:07.588Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.589Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-31T23:33:07.589Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-31T23:33:07.590Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:33:07.590Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-31T23:33:07.590Z",
      "description": "Printed lengthOfString."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.593Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-31T23:33:07.593Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.593Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.594Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-31T23:33:07.594Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-31T23:33:07.594Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-31T23:33:07.600Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-31T23:33:07.600Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-31T23:33:07.600Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.603Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-31T23:33:07.603Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-31T23:33:07.603Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 5
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 5
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 5
        },
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.604Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:33:07.604Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:33:07.604Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:33:07.604Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:33:07.604Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 6
        },
        "line": 6
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          },
          "line": 7
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          },
          "line": 9
        }
      ],
      "line": 6
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 11
        },
        "line": 11
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          },
          "line": 12
        }
      ],
      "alternate": null,
      "line": 11
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 14
      },
      "line": 14
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:33:07.606Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:33:07.606Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-31T23:33:07.606Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:33:07.606Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.606Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:33:07.606Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.606Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.606Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.606Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-31T23:33:07.606Z",
      "description": "Printed max."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.609Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-31T23:33:07.609Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-31T23:33:07.609Z",
      "description": "Printed subStr."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.610Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:33:07.610Z",
      "description": "Printed x."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:33:07.615Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:33:07.615Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.615Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-31T23:33:07.615Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.615Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 9
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 9
        },
        "line": 10
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:33:07.616Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.617Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.617Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.617Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-31T23:33:07.617Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.617Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.617Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:33:07.617Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.617Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-31T23:33:07.617Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.617Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 9
      },
      "line": 9
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.620Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:33:07.620Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.620Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.620Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-31T23:33:07.620Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.620Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.620Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-31T23:33:07.620Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.620Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-31T23:33:07.620Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.620Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 11
          },
          "line": 11
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:33:07.621Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.621Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.621Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.621Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-31T23:33:07.621Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.621Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.621Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 9
              },
              "line": 9
            }
          ],
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.623Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.623Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.623Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-31T23:33:07.623Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.623Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.623Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 7
                },
                "line": 7
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 8
                  },
                  "line": 8
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 13
              },
              "line": 13
            }
          ],
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.626Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:33:07.626Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.627Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.627Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-31T23:33:07.627Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.627Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-31T23:33:07.627Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.627Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.627Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.627Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:33:07.628Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.628Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.628Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-31T23:33:07.628Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.628Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.628Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 4
          },
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 4
        },
        "line": 5
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-31T23:33:07.629Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-31T23:33:07.629Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-31T23:33:07.629Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-31T23:33:07.629Z",
      "description": "Printed fullName."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:33:07.630Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.630Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.630Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:33:07.632Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.632Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-31T23:33:07.632Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.632Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 4
            },
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:33:07.634Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:33:07.634Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.634Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-31T23:33:07.634Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.634Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 7
          },
          "line": 7
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:33:07.637Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:33:07.637Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.637Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-31T23:33:07.637Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.637Z",
      "description": "End of if statement."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:33:07.638Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:33:07.638Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-31T23:33:07.639Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-31T23:33:07.639Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.639Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.639Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.641Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-31T23:33:07.641Z",
      "description": "Printed myVar."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 3
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 3
            },
            "line": 4
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-31T23:33:07.644Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-31T23:33:07.644Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 6
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 6
                },
                "line": 7
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 8
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 8
                },
                "line": 9
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:33:07.690Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-31T23:33:07.690Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.690Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:33:07.690Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.690Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:33:07.690Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.690Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.690Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:33:07.690Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:33:07.691Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "line": 4
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 5
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 6
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 7
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 7
            },
            "line": 8
          },
          "line": 7
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.692Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:33:07.692Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:33:07.692Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.692Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:33:07.692Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.692Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:33:07.692Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-31T23:33:07.693Z",
      "description": "Printed y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 7
      },
      "line": 7
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 8
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:33:07.694Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-31T23:33:07.695Z",
      "description": "Printed sum."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:33:07.698Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:33:07.700Z",
      "description": "End of loop from_to loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:33:07.701Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:33:07.703Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:33:07.704Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:33:07.705Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ],
      "line": 8
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ],
      "line": 9
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 10
      },
      "line": 10
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.708Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.708Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:33:07.708Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.708Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-31T23:33:07.708Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-31T23:33:07.708Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-31T23:33:07.708Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.709Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.712Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.712Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-31T23:33:07.712Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.712Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:33:07.714Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-31T23:33:07.715Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-31T23:33:07.715Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-31T23:33:07.715Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-31T23:33:07.715Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-31T23:33:07.716Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-31T23:33:07.716Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-31T23:33:07.716Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        "line": 4
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": null,
          "line": 5
        }
      ],
      "alternate": null,
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.718Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.718Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.718Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.718Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-31T23:33:07.718Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.718Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-31T23:33:07.718Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.719Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-31T23:33:07.719Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.721Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.721Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:33:07.721Z",
      "description": "Set variable c to a + b."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-31T23:33:07.722Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-31T23:33:07.722Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-31T23:33:07.722Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 4
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-31T23:33:07.723Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-31T23:33:07.723Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-31T23:33:07.723Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.724Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-31T23:33:07.724Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-31T23:33:07.726Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.726Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-31T23:33:07.726Z",
      "description": "Set variable z to x * y."
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-31T23:33:07.728Z",
      "description": "End of while loop"
    }
  ]
}
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 4
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 4
          },
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-31T23:33:07.732Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T23:33:07.732Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-31T23:33:07.732Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
