Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "c",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 1
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 1
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "c",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-14T09:53:19.670Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.671Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-14T09:53:19.671Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "getGreeting",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "name",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, ",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "name",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "getGreeting",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 5
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 5
  },
  {
    "type": "Number",
    "value": "5",
    "line": 5
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "getGreeting",
      "params": [
        "name"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "StringLiteral",
              "value": "Hello, ",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "name",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "getGreeting",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 5
          }
        ],
        "line": 5
      },
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "Identifier",
        "value": "result",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "getGreeting",
      "params": [
        "name"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "Hello, ",
            "operator": "+",
            "right": "name"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 5,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "getGreeting",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 5
          }
        ],
        "line": 5
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 6,
      "name": "total",
      "value": {
        "type": "Identifier",
        "value": "result",
        "line": 6
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "getGreeting",
      "params": [
        "name"
      ],
      "timestamp": "2024-09-14T09:53:19.676Z",
      "description": "Defined function getGreeting with parameters name."
    },
    {
      "line": 5,
      "operation": "function_call",
      "varName": "getGreeting",
      "arguments": [
        5
      ],
      "timestamp": "2024-09-14T09:53:19.677Z",
      "description": "Called function getGreeting with arguments 5."
    },
    {
      "line": 2,
      "operation": "return",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T09:53:19.677Z",
      "description": "Returned Hello, 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T09:53:19.678Z",
      "description": "Set variable result to function return value Hello, 5."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "total",
      "type": "string",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T09:53:19.678Z",
      "description": "Set variable total to Hello, 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Number",
    "value": "20",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 4
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "result",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": "5",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "total",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": "result",
        "operator": "+",
        "right": "20"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 2,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.681Z",
      "description": "Set variable result to 5 + 10."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 35,
      "timestamp": "2024-09-14T09:53:19.682Z",
      "description": "Set variable total to result + 20."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 3
  },
  {
    "type": "Number",
    "value": "0",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 3
  },
  {
    "type": "Number",
    "value": "1",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 5
  },
  {
    "type": "Number",
    "value": "0",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 5
  },
  {
    "type": "Number",
    "value": "2",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "current",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 6
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 6
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "next",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 7
  },
  {
    "type": "Number",
    "value": "1",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "current",
    "line": 8
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "next",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 9
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 9
  },
  {
    "type": "Number",
    "value": "1",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 13
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 14
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 14
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 14
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 14
  },
  {
    "type": "Number",
    "value": "1",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 17
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 17
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "swapped",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 4
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "swapped",
          "varType": null,
          "value": {
            "type": "BooleanLiteral",
            "value": false,
            "line": 4
          },
          "line": 4
        },
        {
          "type": "LoopFromTo",
          "loopVariable": "j",
          "range": {
            "start": {
              "type": "NumberLiteral",
              "value": "0",
              "line": 5
            },
            "end": {
              "type": "Expression",
              "left": {
                "type": "Expression",
                "left": {
                  "type": "LengthExpression",
                  "source": {
                    "type": "Identifier",
                    "value": "myArray",
                    "line": 5
                  },
                  "line": 5
                },
                "operator": "-",
                "right": {
                  "type": "Identifier",
                  "value": "i",
                  "line": 5
                },
                "line": 5
              },
              "operator": "-",
              "right": {
                "type": "NumberLiteral",
                "value": "2",
                "line": 5
              },
              "line": 6
            }
          },
          "body": [
            {
              "type": "VariableDeclaration",
              "varName": "current",
              "varType": null,
              "value": {
                "type": "IndexExpression",
                "source": {
                  "type": "Identifier",
                  "value": "myArray",
                  "line": 6
                },
                "index": {
                  "type": "Identifier",
                  "value": "j",
                  "line": 6
                },
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "next",
              "varType": null,
              "value": {
                "type": "IndexExpression",
                "source": {
                  "type": "Identifier",
                  "value": "myArray",
                  "line": 7
                },
                "index": {
                  "type": "Expression",
                  "left": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 7
                  },
                  "operator": "+",
                  "right": {
                    "type": "NumberLiteral",
                    "value": "1",
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "line": 7
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "current",
                "operator": ">",
                "right": {
                  "type": "Identifier",
                  "value": "next",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "SwapOperation",
                  "varName": "myArray",
                  "firstPosition": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 9
                  },
                  "secondPosition": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "j",
                      "line": 9
                    },
                    "operator": "+",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "1",
                      "line": 9
                    },
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "swapped",
                  "varType": null,
                  "value": {
                    "type": "BooleanLiteral",
                    "value": true,
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": null,
              "line": 8
            }
          ],
          "line": 5
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "swapped",
              "line": 13
            },
            "line": 13
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "i",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "LengthExpression",
                  "source": {
                    "type": "Identifier",
                    "value": "myArray",
                    "line": 14
                  },
                  "line": 14
                },
                "operator": "-",
                "right": {
                  "type": "NumberLiteral",
                  "value": "1",
                  "line": 14
                },
                "line": 15
              },
              "line": 14
            }
          ],
          "alternate": null,
          "line": 13
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 17
      },
      "line": 17
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "swapped",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "line": 3,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "Expression",
          "line": 4,
          "left": {
            "type": "LengthExpression",
            "line": 3,
            "source": "myArray"
          },
          "operator": "-",
          "right": "1"
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "swapped",
          "value": {
            "type": "BooleanLiteral",
            "value": false,
            "line": 4
          }
        },
        {
          "type": "LoopFromTo",
          "line": 5,
          "loopVariable": "j",
          "range": {
            "start": {
              "type": "NumberLiteral",
              "value": "0",
              "line": 5
            },
            "end": {
              "type": "Expression",
              "line": 6,
              "left": {
                "type": "Expression",
                "line": 5,
                "left": {
                  "type": "LengthExpression",
                  "line": 5,
                  "source": "myArray"
                },
                "operator": "-",
                "right": "i"
              },
              "operator": "-",
              "right": "2"
            }
          },
          "body": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "current",
              "value": {
                "type": "IndexExpression",
                "line": 6,
                "source": "myArray",
                "index": "j"
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "next",
              "value": {
                "type": "IndexExpression",
                "line": 7,
                "source": "myArray",
                "index": {
                  "type": "Expression",
                  "line": 7,
                  "left": "j",
                  "operator": "+",
                  "right": "1"
                }
              }
            },
            {
              "type": "IfStatement",
              "line": 8,
              "endLine": 8,
              "condition": {
                "left": "current",
                "operator": ">",
                "right": "next",
                "line": 8
              },
              "consequent": [
                {
                  "type": "SwapOperation",
                  "line": 9,
                  "varName": "myArray",
                  "firstPosition": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 9
                  },
                  "secondPosition": {
                    "type": "Expression",
                    "line": 9,
                    "left": "j",
                    "operator": "+",
                    "right": "1"
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 10,
                  "name": "swapped",
                  "value": {
                    "type": "BooleanLiteral",
                    "value": true,
                    "line": 10
                  }
                }
              ],
              "alternate": null
            }
          ]
        },
        {
          "type": "IfStatement",
          "line": 13,
          "endLine": 13,
          "condition": {
            "left": null,
            "operator": "not",
            "right": "swapped",
            "line": 13
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 14,
              "name": "i",
              "value": {
                "type": "Expression",
                "line": 15,
                "left": {
                  "type": "LengthExpression",
                  "line": 14,
                  "source": "myArray"
                },
                "operator": "-",
                "right": "1"
              }
            }
          ],
          "alternate": null
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 17
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        50,
        40,
        30,
        20,
        10
      ],
      "timestamp": "2024-09-14T09:53:19.685Z",
      "description": "Created array myArray with values [50,40,30,20,10]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.685Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.685Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 3,
      "operation": "loop_from_to",
      "condition": "i <= 4",
      "timestamp": "2024-09-14T09:53:19.685Z",
      "description": "loop from_to loop with condition i <= 4."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.686Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:53:19.686Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.686Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 3",
      "timestamp": "2024-09-14T09:53:19.686Z",
      "description": "loop from_to loop with condition j <= 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.686Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 50
      },
      "timestamp": "2024-09-14T09:53:19.686Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 40
      },
      "timestamp": "2024-09-14T09:53:19.687Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.687Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.688Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.688Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.688Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.688Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.688Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 50
      },
      "timestamp": "2024-09-14T09:53:19.689Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 30
      },
      "timestamp": "2024-09-14T09:53:19.691Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.691Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.692Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.692Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.692Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.693Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.693Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 50
      },
      "timestamp": "2024-09-14T09:53:19.693Z",
      "description": "Set variable current to myArray[2]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 20
      },
      "timestamp": "2024-09-14T09:53:19.694Z",
      "description": "Set variable next to myArray[3]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.694Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 2,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 2 and 3 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.694Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.694Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.694Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.694Z",
      "description": "Set variable j to 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.694Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 50
      },
      "timestamp": "2024-09-14T09:53:19.695Z",
      "description": "Set variable current to myArray[3]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 4,
        "result": 10
      },
      "timestamp": "2024-09-14T09:53:19.695Z",
      "description": "Set variable next to myArray[4]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.695Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 3,
      "secondPosition": 4,
      "varName": "myArray",
      "description": "Swapped values in position 3 and 4 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.695Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.695Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.695Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:53:19.695Z",
      "description": "Set variable j to 4."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.695Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.695Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.695Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.695Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.695Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.695Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:53:19.696Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.696Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 2",
      "timestamp": "2024-09-14T09:53:19.696Z",
      "description": "loop from_to loop with condition j <= 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.696Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 40
      },
      "timestamp": "2024-09-14T09:53:19.696Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 30
      },
      "timestamp": "2024-09-14T09:53:19.696Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.696Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.697Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.697Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.697Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.697Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.697Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 40
      },
      "timestamp": "2024-09-14T09:53:19.698Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 20
      },
      "timestamp": "2024-09-14T09:53:19.699Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.699Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.700Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.702Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.702Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.702Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.702Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 40
      },
      "timestamp": "2024-09-14T09:53:19.703Z",
      "description": "Set variable current to myArray[2]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 10
      },
      "timestamp": "2024-09-14T09:53:19.703Z",
      "description": "Set variable next to myArray[3]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.704Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 2,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 2 and 3 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.704Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.705Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.705Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.705Z",
      "description": "Set variable j to 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.705Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.705Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.705Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.705Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.705Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.705Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:53:19.706Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.706Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 1",
      "timestamp": "2024-09-14T09:53:19.706Z",
      "description": "loop from_to loop with condition j <= 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.706Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 30
      },
      "timestamp": "2024-09-14T09:53:19.708Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 20
      },
      "timestamp": "2024-09-14T09:53:19.709Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.709Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.709Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.709Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.709Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.709Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.709Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 30
      },
      "timestamp": "2024-09-14T09:53:19.709Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 10
      },
      "timestamp": "2024-09-14T09:53:19.710Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.710Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.711Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 0",
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "loop from_to loop with condition j <= 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "Checked if j <= 0."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 20
      },
      "timestamp": "2024-09-14T09:53:19.711Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 10
      },
      "timestamp": "2024-09-14T09:53:19.712Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.712Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.712Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.712Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 0",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "Checked if j <= 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= -1",
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "loop from_to loop with condition j <= -1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= -1",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "Checked if j <= -1."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 17,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:53:19.713Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": "x",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "if",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 2
          },
          "line": 2
        }
      ],
      "alternate": null,
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "IfStatement",
      "line": 1,
      "endLine": 1,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "5",
        "line": 1
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 2
        }
      ],
      "alternate": null
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        "line": 1
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopUntil",
      "line": 1,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "10",
        "line": 1
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 2,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "x",
            "operator": "+",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 1,
        "source": "myArray"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "e",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "e",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 1
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "e",
      "value": {
        "type": "IndexExpression",
        "line": 1,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myFunction",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "myFunction",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          }
        ],
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "myFunction",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          }
        ],
        "line": 1
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "firstChar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstChar",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 1
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "firstChar",
      "value": {
        "type": "IndexExpression",
        "line": 1,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "4",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "3",
            "line": 1
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 1
          },
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "4",
          "operator": "+",
          "right": "2"
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "line": 1,
          "left": "3",
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:53:19.739Z",
      "description": "Set variable result to (4 + 2) * (3 - 1)."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        "operator": "+",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "operator": "*",
          "right": {
            "type": "Expression",
            "left": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 1
            },
            "operator": "+",
            "right": {
              "type": "NumberLiteral",
              "value": "4",
              "line": 1
            },
            "line": 1
          },
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": "1",
        "operator": "+",
        "right": {
          "type": "Expression",
          "line": 1,
          "left": "2",
          "operator": "*",
          "right": {
            "type": "Expression",
            "line": 1,
            "left": "3",
            "operator": "+",
            "right": "4"
          }
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.740Z",
      "description": "Set variable result to 1 + (2 * (3 + 4))."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "Expression",
            "left": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 1
            },
            "operator": "*",
            "right": {
              "type": "NumberLiteral",
              "value": "2",
              "line": 1
            },
            "line": 1
          },
          "line": 1
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "2",
          "operator": "+",
          "right": {
            "type": "Expression",
            "line": 1,
            "left": "3",
            "operator": "*",
            "right": "2"
          }
        },
        "operator": "-",
        "right": "5"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.742Z",
      "description": "Set variable result to (2 + (3 * 2)) - 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "3",
            "line": 1
          },
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "5",
          "operator": "+",
          "right": "3"
        },
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 16,
      "timestamp": "2024-09-14T09:53:19.743Z",
      "description": "Set variable result to (5 + 3) * 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "logMessage",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "message",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "message",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "logMessage",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "String",
    "value": "Test message",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "logMessage",
      "params": [
        "message"
      ],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "message",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "logMessage",
        "args": [
          {
            "type": "StringLiteral",
            "value": "Test message",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "logMessage",
      "params": [
        "message"
      ],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": "message",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "logMessage",
        "args": [
          {
            "type": "StringLiteral",
            "value": "Test message",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "addNumbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "addNumbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "addNumbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "sum",
      "value": {
        "type": "FunctionCall",
        "name": "addNumbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T09:53:19.745Z",
      "description": "Defined function addNumbers with parameters a, b."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "addNumbers",
      "arguments": [
        5,
        10
      ],
      "timestamp": "2024-09-14T09:53:19.746Z",
      "description": "Called function addNumbers with arguments 5,10."
    },
    {
      "line": 2,
      "operation": "return",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.746Z",
      "description": "Returned 15."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.746Z",
      "description": "Set variable sum to function return value 15."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "multiplyNumbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num1",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "multiplyNumbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "6",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "num1",
              "line": 2
            },
            "operator": "*",
            "right": {
              "type": "Identifier",
              "value": "num2",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "multiplyNumbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "num1",
            "operator": "*",
            "right": "num2"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "FunctionCall",
      "line": 4,
      "name": "multiplyNumbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        }
      ],
      "callLine": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "timestamp": "2024-09-14T09:53:19.747Z",
      "description": "Defined function multiplyNumbers with parameters num1, num2."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "multiplyNumbers",
      "arguments": [
        5,
        6
      ],
      "timestamp": "2024-09-14T09:53:19.747Z",
      "description": "Called function multiplyNumbers with arguments 5,6."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": 30,
      "timestamp": "2024-09-14T09:53:19.747Z",
      "description": "Printed 30."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "greetUser",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, user!",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "greetUser",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "greetUser",
      "params": [],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Hello, user!",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "greetUser",
      "args": [],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "greetUser",
      "params": [],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": "Hello, user!",
          "line": 2
        }
      ]
    },
    {
      "type": "FunctionCall",
      "line": 4,
      "name": "greetUser",
      "args": [],
      "callLine": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "greetUser",
      "params": [],
      "timestamp": "2024-09-14T09:53:19.749Z",
      "description": "Defined function greetUser with no parameters."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "greetUser",
      "arguments": [],
      "timestamp": "2024-09-14T09:53:19.749Z",
      "description": "Called function greetUser with no arguments."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Hello, user!",
      "timestamp": "2024-09-14T09:53:19.749Z",
      "description": "Printed Hello, user!."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myArray",
            "line": 2
          },
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myArray"
        },
        "operator": "-",
        "right": "1"
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40
      ],
      "timestamp": "2024-09-14T09:53:19.750Z",
      "description": "Created array myArray with values [10,20,30,40]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 3,
      "secondPosition": 0,
      "varName": "myArray",
      "description": "Swapped values in position 3 and 0 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.750Z"
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        40,
        20,
        30,
        10
      ],
      "timestamp": "2024-09-14T09:53:19.750Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "35",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "each",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "35",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "myArray",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "35",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "myArray",
      "line": 3,
      "endLine": 4,
      "body": [
        {
          "type": "PrintStatement",
          "value": "num",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        15,
        25,
        35
      ],
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Created array myArray with values [5,15,25,35]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 3 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.752Z"
    },
    {
      "line": 3,
      "operation": "for_each",
      "condition": "num in myArray",
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "for each loop with condition num in myArray."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 35
      },
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Set variable num to myArray[0]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 35,
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 15
      },
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Set variable num to myArray[1]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 15,
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 25
      },
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Set variable num to myArray[2]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 25,
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 5
      },
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Set variable num to myArray[3]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 5,
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "Checked if num in myArray."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.752Z",
      "description": "End of for each loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:53:19.753Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.753Z"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "4",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:53:19.754Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 4,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 4 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.754Z"
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        50,
        20,
        30,
        40,
        10
      ],
      "timestamp": "2024-09-14T09:53:19.754Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:53:19.756Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:53:19.756Z"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "each",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "total",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "total",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "num",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "total",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "total",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2,
      "unInitialised": false
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "line": 3,
      "endLine": 4,
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "total",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "total",
            "operator": "+",
            "right": "num"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "total",
      "line": 6
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "Set variable total to 0."
    },
    {
      "line": 2,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "Created array nums with values [1,2,3]."
    },
    {
      "line": 3,
      "operation": "for_each",
      "condition": "num in nums",
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "for each loop with condition num in nums."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 0,
        "result": 1
      },
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "Set variable num to nums[0]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 1,
        "result": 2
      },
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "Set variable num to nums[1]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 2,
        "result": 3
      },
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "Set variable num to nums[2]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "Checked if num in nums."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "End of for each loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "total",
      "literal": 6,
      "timestamp": "2024-09-14T09:53:19.758Z",
      "description": "Printed total."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 2
            },
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 3
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "temp",
          "varType": null,
          "value": {
            "type": "IndexExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 3
            },
            "index": {
              "type": "Identifier",
              "value": "i",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "temp",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "Expression",
          "line": 3,
          "left": {
            "type": "LengthExpression",
            "line": 2,
            "source": "myArray"
          },
          "operator": "-",
          "right": "1"
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "temp",
          "value": {
            "type": "IndexExpression",
            "line": 3,
            "source": "myArray",
            "index": "i"
          }
        },
        {
          "type": "PrintStatement",
          "value": "temp",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 4",
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "loop from_to loop with condition i <= 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Set variable temp to myArray[0]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 10,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 20
      },
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Set variable temp to myArray[1]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 20,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 30
      },
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Set variable temp to myArray[2]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 30,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 40
      },
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Set variable temp to myArray[3]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 40,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 4,
        "result": 50
      },
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Set variable temp to myArray[4]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 50,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.761Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "/",
    "line": 2
  },
  {
    "type": "Number",
    "value": "4",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "r",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Number",
    "value": "3",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 2
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 3
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 3
          },
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "q",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "r",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": {
          "type": "Expression",
          "line": 3,
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T09:53:19.763Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T09:53:19.763Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-14T09:53:19.763Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "x",
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T09:53:19.767Z",
      "description": "Defined function add_numbers with parameters a, b."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "add_numbers",
      "arguments": [
        5,
        10
      ],
      "timestamp": "2024-09-14T09:53:19.767Z",
      "description": "Called function add_numbers with arguments 5,10."
    },
    {
      "line": 2,
      "operation": "return",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.767Z",
      "description": "Returned 15."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.767Z",
      "description": "Set variable x to function return value 15."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T09:53:19.769Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "size",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "hello",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 3
  },
  {
    "type": "Number",
    "value": "1",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "String",
    "value": "world",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 4
  },
  {
    "type": "String",
    "value": "!",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 4
  },
  {
    "type": "Number",
    "value": "2",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 5
  },
  {
    "type": "Number",
    "value": "0",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Number",
    "value": "0",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "line": 1,
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "line": 3,
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "line": 4,
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "line": 5,
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings",
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "line": 7,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 7,
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-14T09:53:19.770Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-14T09:53:19.770Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-14T09:53:19.770Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-14T09:53:19.771Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-14T09:53:19.771Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-14T09:53:19.771Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-14T09:53:19.771Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 2
  },
  {
    "type": "Number",
    "value": "30",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 3
  },
  {
    "type": "Number",
    "value": "4",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 4
  },
  {
    "type": "Number",
    "value": "2",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Number",
    "value": "50",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "totalLength",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 2
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 6
        },
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 2,
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 2
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "line": 3,
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "line": 4,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "line": 6,
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "line": 6,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-14T09:53:19.772Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-14T09:53:19.772Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-14T09:53:19.772Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-14T09:53:19.772Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-14T09:53:19.772Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.772Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "String",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "c",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "d",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "e",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "z",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-14T09:53:19.775Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-14T09:53:19.775Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "stringValue",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "stringValue"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      }
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 1
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "line": 1,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 1
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:53:19.780Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-14T09:53:19.780Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "200",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "300",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-14T09:53:19.782Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-14T09:53:19.782Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:53:19.783Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-14T09:53:19.783Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-14T09:53:19.784Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-14T09:53:19.784Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "String",
    "value": "hi",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "hello",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-14T09:53:19.785Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.785Z",
      "description": "Set variable len to 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-14T09:53:19.786Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T09:53:19.786Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-14T09:53:19.788Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T09:53:19.789Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-14T09:53:19.790Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.790Z",
      "description": "Set variable len to 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "size",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "line": 1,
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-14T09:53:19.791Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.792Z",
      "description": "Set variable len to 10."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "65",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Senior",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "20% on all items",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Gold",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 6
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 6
  },
  {
    "type": "Number",
    "value": "40",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Adult",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 8
  },
  {
    "type": "String",
    "value": "10% on select items",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "Silver",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 10
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 10
  },
  {
    "type": "Number",
    "value": "18",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 11
  },
  {
    "type": "String",
    "value": "Young Adult",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 12
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 12
  },
  {
    "type": "String",
    "value": "5% on books",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 13
  },
  {
    "type": "String",
    "value": "Bronze",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 15
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 15
  },
  {
    "type": "String",
    "value": "Child",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 16
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 16
  },
  {
    "type": "String",
    "value": "No discount",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 17
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 17
  },
  {
    "type": "String",
    "value": "None",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 18
  },
  {
    "type": "Identifier",
    "value": "note",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 18
  },
  {
    "type": "String",
    "value": "Parental supervision required",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 19
  },
  {
    "type": "Identifier",
    "value": "activity",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 19
  },
  {
    "type": "String",
    "value": "Eligible for children's events",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 20
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 20
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40",
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 8,
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 9,
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18",
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 11,
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 12,
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 13,
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 15,
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 16,
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 17,
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 18,
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 19,
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.795Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.795Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.795Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.795Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-14T09:53:19.795Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-14T09:53:19.795Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-14T09:53:19.796Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-14T09:53:19.796Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-14T09:53:19.796Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.796Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "30",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Hot",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "Turn on AC",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 5
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 5
  },
  {
    "type": "Number",
    "value": "20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 6
  },
  {
    "type": "String",
    "value": "Warm",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Open windows",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 8
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 8
  },
  {
    "type": "Number",
    "value": "10",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "Cool",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 10
  },
  {
    "type": "String",
    "value": "Do nothing",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 12
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 12
  },
  {
    "type": "String",
    "value": "Cold",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 13
  },
  {
    "type": "String",
    "value": "Turn on heater",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 14
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20",
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10",
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 9,
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 10,
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 12,
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 13,
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.798Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.798Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.798Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.798Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-14T09:53:19.798Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-14T09:53:19.798Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.798Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "65",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "90",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "grade",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "A",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "80",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "grade",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "B",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-14T09:53:19.800Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.800Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.800Z",
      "description": "Checked if score > 80."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.800Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "50",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 50",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "High range",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 5
  },
  {
    "type": "Number",
    "value": "30",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 6
  },
  {
    "type": "String",
    "value": "Greater than 30 but less than or equal to 50",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Mid range",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "30 or less",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 10
  },
  {
    "type": "String",
    "value": "Low range",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "note",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 11
  },
  {
    "type": "String",
    "value": "Consideration needed",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 12
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30",
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 9,
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 10,
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 11,
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T09:53:19.801Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.801Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.801Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-14T09:53:19.801Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-14T09:53:19.801Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-14T09:53:19.801Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.801Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Less than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.803Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.803Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-14T09:53:19.803Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.803Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 3
  },
  {
    "type": "Number",
    "value": "20",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "range",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "Between 10 and 20",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 3,
          "endLine": 3,
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20",
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 4,
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.805Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.805Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.805Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-14T09:53:19.805Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.805Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.805Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "value",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "value",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "10 or less",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.806Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.806Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-14T09:53:19.806Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.806Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "20",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 20",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "15",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Greater than 15 but less than or equal to 20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 6
  },
  {
    "type": "Number",
    "value": "10",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Greater than 10 but less than or equal to 15",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "10 or less",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10",
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 7,
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 9,
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.808Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.808Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.808Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.808Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-14T09:53:19.808Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.808Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "15",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 15",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Greater than 5 but less than or equal to 15",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "5 or less",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.809Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.809Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.809Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-14T09:53:19.809Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.809Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.811Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T09:53:19.811Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "index",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "characterAtIndex",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "index",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "line": 3,
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.812Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.812Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T09:53:19.812Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lastCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 2
            },
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": {
          "type": "Expression",
          "line": 2,
          "left": {
            "type": "LengthExpression",
            "line": 2,
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.813Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-14T09:53:19.813Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "emptyString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "emptyIndex",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "emptyString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-14T09:53:19.814Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-14T09:53:19.815Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.816Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T09:53:19.816Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Test String",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "String is long enough",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "String is too short",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 2
          },
          "line": 2
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myString"
        },
        "operator": ">",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-14T09:53:19.818Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.818Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-14T09:53:19.818Z",
      "description": "Printed String is long enough."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.818Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "lengthOfUndefined",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "undefinedVariable",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "line": 1,
        "source": "undefinedVariable"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "halfLength",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "/",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 2
          },
          "line": 2
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.820Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-14T09:53:19.820Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.822Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-14T09:53:19.822Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "abc",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-14T09:53:19.824Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.824Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-14T09:53:19.824Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "13",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.825Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-14T09:53:19.825Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.825Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.827Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-14T09:53:19.827Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-14T09:53:19.827Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "ten",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "String",
    "value": "five",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": {
          "type": "Expression",
          "line": 2,
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-14T09:53:19.838Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-14T09:53:19.838Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-14T09:53:19.838Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.840Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-14T09:53:19.840Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-14T09:53:19.840Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "startIndex",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "7",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "endIndex",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 3
  },
  {
    "type": "Number",
    "value": "12",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "startIndex",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "endIndex",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 4
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 4,
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 5
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.842Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T09:53:19.842Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:53:19.842Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-14T09:53:19.843Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-14T09:53:19.843Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "100",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 3
  },
  {
    "type": "Number",
    "value": "42",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 4
  },
  {
    "type": "Number",
    "value": "0",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 13
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 5
        },
        "line": 5
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 6
          },
          "line": 6
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 8
          },
          "line": 8
        }
      ],
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 13
      },
      "line": 13
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 4
      }
    },
    {
      "type": "IfStatement",
      "line": 5,
      "endLine": 5,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y",
        "line": 5
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 6,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 6
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "line": 8,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 8
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "line": 10,
      "endLine": 10,
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max",
        "line": 10
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 11,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 11
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max",
      "line": 13
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.848Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T09:53:19.849Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-14T09:53:19.849Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.849Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.849Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T09:53:19.849Z",
      "description": "Set variable max to 100."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.849Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.849Z",
      "description": "Checked if z > max."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.849Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-14T09:53:19.849Z",
      "description": "Printed max."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "7",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "12",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.851Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-14T09:53:19.851Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-14T09:53:19.851Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "PrintStatement",
      "value": "x",
      "line": 2
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.852Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-14T09:53:19.852Z",
      "description": "Printed x."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Both are false",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "At least one is true",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "line": 3,
            "operator": "not",
            "argument": "q"
          }
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.855Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:53:19.855Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.855Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-14T09:53:19.855Z",
      "description": "Printed At least one is true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.855Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "20",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "x is between y and 20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 8
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "equal",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Number",
    "value": "25",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "z is 25",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 8
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 9
        },
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 10
          },
          "line": 10
        }
      ],
      "alternate": null,
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "line": 8,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 9,
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "line": 9,
      "endLine": 9,
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25",
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25",
          "line": 10
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.857Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.857Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.857Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.857Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-14T09:53:19.857Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.857Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.857Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T09:53:19.858Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.858Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-14T09:53:19.858Z",
      "description": "Printed z is 25."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.858Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "20",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "25",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is less than 25",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "String",
    "value": "This is a normal statement",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "equal",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Number",
    "value": "20",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "y is equal to 20",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 8
      },
      "line": 8
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 9
        },
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 10
          },
          "line": 10
        }
      ],
      "alternate": null,
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement",
      "line": 8
    },
    {
      "type": "IfStatement",
      "line": 9,
      "endLine": 9,
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20",
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20",
          "line": 10
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.860Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:53:19.860Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.860Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.860Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-14T09:53:19.860Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.860Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.860Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-14T09:53:19.860Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.860Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-14T09:53:19.860Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.860Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is greater than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 7
  },
  {
    "type": "String",
    "value": "y is 10 or less",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "x is 10 or less",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 10
          },
          "line": 10
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10",
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less",
              "line": 7
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less",
          "line": 10
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:53:19.862Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.862Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.862Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.862Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-14T09:53:19.862Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.862Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.862Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 5
  },
  {
    "type": "Number",
    "value": "3",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "x is greater than 3 but not greater than 10",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "String",
    "value": "x is 3 or less",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "line": 5,
          "endLine": 5,
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3",
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10",
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less",
              "line": 8
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.864Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.864Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.864Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-14T09:53:19.864Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.864Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.864Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "15",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "b is greater than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 6
  },
  {
    "type": "Number",
    "value": "20",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 7
  },
  {
    "type": "String",
    "value": "b is less than 20",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 9
  },
  {
    "type": "String",
    "value": "b is 20 or more",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 12
  },
  {
    "type": "String",
    "value": "b is 10 or less",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 14
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 5
              },
              "line": 5
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 12
              },
              "line": 12
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10",
              "line": 5
            },
            {
              "type": "IfStatement",
              "line": 6,
              "endLine": 6,
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20",
                "line": 6
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20",
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more",
                  "line": 9
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less",
              "line": 12
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.866Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.867Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.867Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.867Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-14T09:53:19.867Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.867Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-14T09:53:19.867Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.867Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.867Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.867Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "30",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "x is between 10 and 30",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "x is 30 or more",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 6
              },
              "line": 6
            }
          ],
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 3,
          "endLine": 3,
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30",
            "line": 3
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30",
              "line": 4
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more",
              "line": 6
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:53:19.870Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.870Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.870Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-14T09:53:19.870Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.870Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.870Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "firstName",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "John",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lastName",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "Doe",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "fullName",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "firstName",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "String",
    "value": " ",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "lastName",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "fullName",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 3
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 3
          },
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "fullName",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": {
          "type": "Expression",
          "line": 3,
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName",
      "line": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-14T09:53:19.872Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-14T09:53:19.872Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-14T09:53:19.872Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-14T09:53:19.872Z",
      "description": "Printed fullName."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "isTrue is false",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false",
          "line": 3
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.873Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.874Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.874Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "boolean",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "Boolean is true",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "Boolean is false",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": "boolean",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.875Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.875Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-14T09:53:19.875Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.875Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "or",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Complex Condition Met",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "Complex Condition Not Met",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "line": 3,
            "operator": "not",
            "argument": "isTrue"
          }
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.877Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:53:19.877Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.877Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-14T09:53:19.877Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.877Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Correct",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "Incorrect",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "line": 3,
          "operator": "not",
          "argument": "isFalse"
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.879Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:53:19.879Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.879Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-14T09:53:19.879Z",
      "description": "Printed Correct."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.879Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.880Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:53:19.881Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Both are booleans",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans",
          "line": 4
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:53:19.884Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:53:19.884Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.884Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.884Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar",
      "line": 2
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.886Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-14T09:53:19.886Z",
      "description": "Printed myVar."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">=",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 5
  },
  {
    "type": "Number",
    "value": "2",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 7
  },
  {
    "type": "Number",
    "value": "3",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 9
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 5
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 5
                },
                "line": 6
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 7
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 7
                },
                "line": 8
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "LoopUntil",
      "line": 2,
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10",
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "x",
              "value": {
                "type": "Expression",
                "line": 6,
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "x",
              "value": {
                "type": "Expression",
                "line": 8,
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "Checked if x < 10."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.890Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 3
  },
  {
    "type": "Number",
    "value": "0",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 6
  },
  {
    "type": "Number",
    "value": "1",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 8
      },
      "line": 8
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 3
      },
      "line": 3,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "y",
          "value": {
            "type": "Expression",
            "line": 6,
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 6,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 7,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y",
      "line": 8
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-14T09:53:19.896Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.897Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.897Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:53:19.897Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.897Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.897Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.897Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.897Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-14T09:53:19.897Z",
      "description": "Printed y."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 7
  },
  {
    "type": "Number",
    "value": "2",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 7
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        "line": 8
      },
      "line": 7
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 8
      },
      "line": 8
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "sum",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum",
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "line": 7,
      "name": "sum",
      "value": {
        "type": "Expression",
        "line": 8,
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum",
      "line": 8
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.902Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.902Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-14T09:53:19.902Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.902Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:53:19.902Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-14T09:53:19.903Z",
      "description": "Printed sum."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "sum",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.907Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "line": 1,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.909Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": "==",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "LoopUntil",
      "line": 2,
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0",
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:53:19.911Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "Checked if x != 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.912Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 2
      },
      "line": 2,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:53:19.913Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.915Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.915Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.915Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "line": 1,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.917Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "x is 5 or less",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Number",
    "value": "1",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "2",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "3",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "4",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "5",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "6",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "7",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "8",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "9",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "letters",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 8
  },
  {
    "type": "String",
    "value": "a",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "b",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "c",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "d",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "e",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "f",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "g",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 9
  },
  {
    "type": "Number",
    "value": "5",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Number",
    "value": "4",
    "line": 9
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 7
        }
      ],
      "unInitialised": false,
      "line": 7
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 9
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less",
          "line": 5
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 7
        }
      ],
      "line": 7,
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 8
        }
      ],
      "line": 8,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 9,
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 9
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.919Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.919Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-14T09:53:19.919Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.919Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-14T09:53:19.919Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-14T09:53:19.919Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-14T09:53:19.919Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.920Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 3
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.921Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.921Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-14T09:53:19.921Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.921Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-14T09:53:19.923Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 4
  },
  {
    "type": "Number",
    "value": "3",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 4
  },
  {
    "type": "Number",
    "value": "3",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 2,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "line": 3,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "line": 4,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-14T09:53:19.924Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-14T09:53:19.924Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-14T09:53:19.924Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-14T09:53:19.924Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is less than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.925Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.925Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.925Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.925Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-14T09:53:19.925Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.925Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:53:19.925Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "Expression",
        "line": 2,
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.928Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:53:19.928Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "c",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "c",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.930Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.930Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.930Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:53:19.931Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:53:19.931Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-14T09:53:19.931Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:53:19.934Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.935Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-14T09:53:19.935Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 2
      },
      "line": 2,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:53:19.947Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "c",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 1
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "getGreeting",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "name",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, ",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "name",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "getGreeting",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 5
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 5
  },
  {
    "type": "Number",
    "value": "5",
    "line": 5
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "getGreeting",
      "params": [
        "name"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "StringLiteral",
              "value": "Hello, ",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "name",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "getGreeting",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 5
          }
        ],
        "line": 5
      },
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "Identifier",
        "value": "result",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "getGreeting",
      "params": [
        "name"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "Hello, ",
            "operator": "+",
            "right": "name"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 5,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "getGreeting",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 5
          }
        ],
        "line": 5
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 6,
      "name": "total",
      "value": {
        "type": "Identifier",
        "value": "result",
        "line": 6
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "getGreeting",
      "params": [
        "name"
      ],
      "timestamp": "2024-09-14T09:54:07.308Z",
      "description": "Defined function getGreeting with parameters name."
    },
    {
      "line": 5,
      "operation": "function_call",
      "varName": "getGreeting",
      "arguments": [
        5
      ],
      "timestamp": "2024-09-14T09:54:07.309Z",
      "description": "Called function getGreeting with arguments 5."
    },
    {
      "line": 2,
      "operation": "return",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T09:54:07.309Z",
      "description": "Returned Hello, 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T09:54:07.309Z",
      "description": "Set variable result to function return value Hello, 5."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "total",
      "type": "string",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T09:54:07.309Z",
      "description": "Set variable total to Hello, 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Number",
    "value": "20",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 4
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "result",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": "5",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "total",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": "result",
        "operator": "+",
        "right": "20"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 2,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.311Z",
      "description": "Set variable result to 5 + 10."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 35,
      "timestamp": "2024-09-14T09:54:07.311Z",
      "description": "Set variable total to result + 20."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 3
  },
  {
    "type": "Number",
    "value": "0",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 3
  },
  {
    "type": "Number",
    "value": "1",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 5
  },
  {
    "type": "Number",
    "value": "0",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 5
  },
  {
    "type": "Number",
    "value": "2",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "current",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 6
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 6
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "next",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 7
  },
  {
    "type": "Number",
    "value": "1",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "current",
    "line": 8
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "next",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 9
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 9
  },
  {
    "type": "Number",
    "value": "1",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 13
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 14
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 14
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 14
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 14
  },
  {
    "type": "Number",
    "value": "1",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 17
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 17
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "swapped",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 4
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "swapped",
          "varType": null,
          "value": {
            "type": "BooleanLiteral",
            "value": false,
            "line": 4
          },
          "line": 4
        },
        {
          "type": "LoopFromTo",
          "loopVariable": "j",
          "range": {
            "start": {
              "type": "NumberLiteral",
              "value": "0",
              "line": 5
            },
            "end": {
              "type": "Expression",
              "left": {
                "type": "Expression",
                "left": {
                  "type": "LengthExpression",
                  "source": {
                    "type": "Identifier",
                    "value": "myArray",
                    "line": 5
                  },
                  "line": 5
                },
                "operator": "-",
                "right": {
                  "type": "Identifier",
                  "value": "i",
                  "line": 5
                },
                "line": 5
              },
              "operator": "-",
              "right": {
                "type": "NumberLiteral",
                "value": "2",
                "line": 5
              },
              "line": 6
            }
          },
          "body": [
            {
              "type": "VariableDeclaration",
              "varName": "current",
              "varType": null,
              "value": {
                "type": "IndexExpression",
                "source": {
                  "type": "Identifier",
                  "value": "myArray",
                  "line": 6
                },
                "index": {
                  "type": "Identifier",
                  "value": "j",
                  "line": 6
                },
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "next",
              "varType": null,
              "value": {
                "type": "IndexExpression",
                "source": {
                  "type": "Identifier",
                  "value": "myArray",
                  "line": 7
                },
                "index": {
                  "type": "Expression",
                  "left": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 7
                  },
                  "operator": "+",
                  "right": {
                    "type": "NumberLiteral",
                    "value": "1",
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "line": 7
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "current",
                "operator": ">",
                "right": {
                  "type": "Identifier",
                  "value": "next",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "SwapOperation",
                  "varName": "myArray",
                  "firstPosition": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 9
                  },
                  "secondPosition": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "j",
                      "line": 9
                    },
                    "operator": "+",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "1",
                      "line": 9
                    },
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "swapped",
                  "varType": null,
                  "value": {
                    "type": "BooleanLiteral",
                    "value": true,
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": null,
              "line": 8
            }
          ],
          "line": 5
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "swapped",
              "line": 13
            },
            "line": 13
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "i",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "LengthExpression",
                  "source": {
                    "type": "Identifier",
                    "value": "myArray",
                    "line": 14
                  },
                  "line": 14
                },
                "operator": "-",
                "right": {
                  "type": "NumberLiteral",
                  "value": "1",
                  "line": 14
                },
                "line": 15
              },
              "line": 14
            }
          ],
          "alternate": null,
          "line": 13
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 17
      },
      "line": 17
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "swapped",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "line": 3,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "Expression",
          "line": 4,
          "left": {
            "type": "LengthExpression",
            "line": 3,
            "source": "myArray"
          },
          "operator": "-",
          "right": "1"
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "swapped",
          "value": {
            "type": "BooleanLiteral",
            "value": false,
            "line": 4
          }
        },
        {
          "type": "LoopFromTo",
          "line": 5,
          "loopVariable": "j",
          "range": {
            "start": {
              "type": "NumberLiteral",
              "value": "0",
              "line": 5
            },
            "end": {
              "type": "Expression",
              "line": 6,
              "left": {
                "type": "Expression",
                "line": 5,
                "left": {
                  "type": "LengthExpression",
                  "line": 5,
                  "source": "myArray"
                },
                "operator": "-",
                "right": "i"
              },
              "operator": "-",
              "right": "2"
            }
          },
          "body": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "current",
              "value": {
                "type": "IndexExpression",
                "line": 6,
                "source": "myArray",
                "index": "j"
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "next",
              "value": {
                "type": "IndexExpression",
                "line": 7,
                "source": "myArray",
                "index": {
                  "type": "Expression",
                  "line": 7,
                  "left": "j",
                  "operator": "+",
                  "right": "1"
                }
              }
            },
            {
              "type": "IfStatement",
              "line": 8,
              "endLine": 8,
              "condition": {
                "left": "current",
                "operator": ">",
                "right": "next",
                "line": 8
              },
              "consequent": [
                {
                  "type": "SwapOperation",
                  "line": 9,
                  "varName": "myArray",
                  "firstPosition": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 9
                  },
                  "secondPosition": {
                    "type": "Expression",
                    "line": 9,
                    "left": "j",
                    "operator": "+",
                    "right": "1"
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 10,
                  "name": "swapped",
                  "value": {
                    "type": "BooleanLiteral",
                    "value": true,
                    "line": 10
                  }
                }
              ],
              "alternate": null
            }
          ]
        },
        {
          "type": "IfStatement",
          "line": 13,
          "endLine": 13,
          "condition": {
            "left": null,
            "operator": "not",
            "right": "swapped",
            "line": 13
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 14,
              "name": "i",
              "value": {
                "type": "Expression",
                "line": 15,
                "left": {
                  "type": "LengthExpression",
                  "line": 14,
                  "source": "myArray"
                },
                "operator": "-",
                "right": "1"
              }
            }
          ],
          "alternate": null
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 17
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        50,
        40,
        30,
        20,
        10
      ],
      "timestamp": "2024-09-14T09:54:07.314Z",
      "description": "Created array myArray with values [50,40,30,20,10]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.314Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.314Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 3,
      "operation": "loop_from_to",
      "condition": "i <= 4",
      "timestamp": "2024-09-14T09:54:07.314Z",
      "description": "loop from_to loop with condition i <= 4."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.314Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:54:07.315Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.315Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 3",
      "timestamp": "2024-09-14T09:54:07.315Z",
      "description": "loop from_to loop with condition j <= 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.315Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 50
      },
      "timestamp": "2024-09-14T09:54:07.315Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 40
      },
      "timestamp": "2024-09-14T09:54:07.315Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.315Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.315Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.315Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.315Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.315Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.315Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 50
      },
      "timestamp": "2024-09-14T09:54:07.315Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 30
      },
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.316Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 50
      },
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "Set variable current to myArray[2]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 20
      },
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "Set variable next to myArray[3]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 2,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 2 and 3 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.316Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "Set variable j to 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 50
      },
      "timestamp": "2024-09-14T09:54:07.316Z",
      "description": "Set variable current to myArray[3]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 4,
        "result": 10
      },
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Set variable next to myArray[4]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 3,
      "secondPosition": 4,
      "varName": "myArray",
      "description": "Swapped values in position 3 and 4 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.317Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Set variable j to 4."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 2",
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "loop from_to loop with condition j <= 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 40
      },
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 30
      },
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.317Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 40
      },
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 20
      },
      "timestamp": "2024-09-14T09:54:07.317Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.318Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 40
      },
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "Set variable current to myArray[2]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 10
      },
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "Set variable next to myArray[3]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 2,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 2 and 3 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.318Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "Set variable j to 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.318Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 1",
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "loop from_to loop with condition j <= 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 30
      },
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 20
      },
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.319Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 30
      },
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 10
      },
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.319Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.319Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 0",
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "loop from_to loop with condition j <= 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Checked if j <= 0."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 20
      },
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 10
      },
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.320Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 0",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Checked if j <= 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= -1",
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "loop from_to loop with condition j <= -1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= -1",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Checked if j <= -1."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 17,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:54:07.320Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": "x",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "if",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 2
          },
          "line": 2
        }
      ],
      "alternate": null,
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "IfStatement",
      "line": 1,
      "endLine": 1,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "5",
        "line": 1
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 2
        }
      ],
      "alternate": null
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        "line": 1
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopUntil",
      "line": 1,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "10",
        "line": 1
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 2,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "x",
            "operator": "+",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 1,
        "source": "myArray"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "e",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "e",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 1
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "e",
      "value": {
        "type": "IndexExpression",
        "line": 1,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myFunction",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "myFunction",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          }
        ],
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "myFunction",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          }
        ],
        "line": 1
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "firstChar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstChar",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 1
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "firstChar",
      "value": {
        "type": "IndexExpression",
        "line": 1,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "4",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "3",
            "line": 1
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 1
          },
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "4",
          "operator": "+",
          "right": "2"
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "line": 1,
          "left": "3",
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:54:07.351Z",
      "description": "Set variable result to (4 + 2) * (3 - 1)."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        "operator": "+",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "operator": "*",
          "right": {
            "type": "Expression",
            "left": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 1
            },
            "operator": "+",
            "right": {
              "type": "NumberLiteral",
              "value": "4",
              "line": 1
            },
            "line": 1
          },
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": "1",
        "operator": "+",
        "right": {
          "type": "Expression",
          "line": 1,
          "left": "2",
          "operator": "*",
          "right": {
            "type": "Expression",
            "line": 1,
            "left": "3",
            "operator": "+",
            "right": "4"
          }
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.353Z",
      "description": "Set variable result to 1 + (2 * (3 + 4))."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "Expression",
            "left": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 1
            },
            "operator": "*",
            "right": {
              "type": "NumberLiteral",
              "value": "2",
              "line": 1
            },
            "line": 1
          },
          "line": 1
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "2",
          "operator": "+",
          "right": {
            "type": "Expression",
            "line": 1,
            "left": "3",
            "operator": "*",
            "right": "2"
          }
        },
        "operator": "-",
        "right": "5"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.355Z",
      "description": "Set variable result to (2 + (3 * 2)) - 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "3",
            "line": 1
          },
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "5",
          "operator": "+",
          "right": "3"
        },
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 16,
      "timestamp": "2024-09-14T09:54:07.358Z",
      "description": "Set variable result to (5 + 3) * 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "logMessage",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "message",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "message",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "logMessage",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "String",
    "value": "Test message",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "logMessage",
      "params": [
        "message"
      ],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "message",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "logMessage",
        "args": [
          {
            "type": "StringLiteral",
            "value": "Test message",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "logMessage",
      "params": [
        "message"
      ],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": "message",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "logMessage",
        "args": [
          {
            "type": "StringLiteral",
            "value": "Test message",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "addNumbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "addNumbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "addNumbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "sum",
      "value": {
        "type": "FunctionCall",
        "name": "addNumbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T09:54:07.362Z",
      "description": "Defined function addNumbers with parameters a, b."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "addNumbers",
      "arguments": [
        5,
        10
      ],
      "timestamp": "2024-09-14T09:54:07.362Z",
      "description": "Called function addNumbers with arguments 5,10."
    },
    {
      "line": 2,
      "operation": "return",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.362Z",
      "description": "Returned 15."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.362Z",
      "description": "Set variable sum to function return value 15."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "multiplyNumbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num1",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "multiplyNumbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "6",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "num1",
              "line": 2
            },
            "operator": "*",
            "right": {
              "type": "Identifier",
              "value": "num2",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "multiplyNumbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "num1",
            "operator": "*",
            "right": "num2"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "FunctionCall",
      "line": 4,
      "name": "multiplyNumbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        }
      ],
      "callLine": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "timestamp": "2024-09-14T09:54:07.364Z",
      "description": "Defined function multiplyNumbers with parameters num1, num2."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "multiplyNumbers",
      "arguments": [
        5,
        6
      ],
      "timestamp": "2024-09-14T09:54:07.364Z",
      "description": "Called function multiplyNumbers with arguments 5,6."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": 30,
      "timestamp": "2024-09-14T09:54:07.364Z",
      "description": "Printed 30."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "greetUser",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, user!",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "greetUser",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "greetUser",
      "params": [],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Hello, user!",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "greetUser",
      "args": [],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "greetUser",
      "params": [],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": "Hello, user!",
          "line": 2
        }
      ]
    },
    {
      "type": "FunctionCall",
      "line": 4,
      "name": "greetUser",
      "args": [],
      "callLine": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "greetUser",
      "params": [],
      "timestamp": "2024-09-14T09:54:07.366Z",
      "description": "Defined function greetUser with no parameters."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "greetUser",
      "arguments": [],
      "timestamp": "2024-09-14T09:54:07.366Z",
      "description": "Called function greetUser with no arguments."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Hello, user!",
      "timestamp": "2024-09-14T09:54:07.366Z",
      "description": "Printed Hello, user!."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myArray",
            "line": 2
          },
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myArray"
        },
        "operator": "-",
        "right": "1"
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40
      ],
      "timestamp": "2024-09-14T09:54:07.367Z",
      "description": "Created array myArray with values [10,20,30,40]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 3,
      "secondPosition": 0,
      "varName": "myArray",
      "description": "Swapped values in position 3 and 0 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.367Z"
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        40,
        20,
        30,
        10
      ],
      "timestamp": "2024-09-14T09:54:07.367Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "35",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "each",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "35",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "myArray",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "35",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "myArray",
      "line": 3,
      "endLine": 4,
      "body": [
        {
          "type": "PrintStatement",
          "value": "num",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        15,
        25,
        35
      ],
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Created array myArray with values [5,15,25,35]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 3 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.370Z"
    },
    {
      "line": 3,
      "operation": "for_each",
      "condition": "num in myArray",
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "for each loop with condition num in myArray."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 35
      },
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Set variable num to myArray[0]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 35,
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 15
      },
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Set variable num to myArray[1]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 15,
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 25
      },
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Set variable num to myArray[2]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 25,
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 5
      },
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Set variable num to myArray[3]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 5,
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "Checked if num in myArray."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.370Z",
      "description": "End of for each loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:54:07.372Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.372Z"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "4",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:54:07.382Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 4,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 4 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.382Z"
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        50,
        20,
        30,
        40,
        10
      ],
      "timestamp": "2024-09-14T09:54:07.382Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:54:07.420Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:54:07.420Z"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "each",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "total",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "total",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "num",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "total",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "total",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2,
      "unInitialised": false
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "line": 3,
      "endLine": 4,
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "total",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "total",
            "operator": "+",
            "right": "num"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "total",
      "line": 6
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.432Z",
      "description": "Set variable total to 0."
    },
    {
      "line": 2,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-14T09:54:07.432Z",
      "description": "Created array nums with values [1,2,3]."
    },
    {
      "line": 3,
      "operation": "for_each",
      "condition": "num in nums",
      "timestamp": "2024-09-14T09:54:07.432Z",
      "description": "for each loop with condition num in nums."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.432Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 0,
        "result": 1
      },
      "timestamp": "2024-09-14T09:54:07.432Z",
      "description": "Set variable num to nums[0]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.432Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.432Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 1,
        "result": 2
      },
      "timestamp": "2024-09-14T09:54:07.432Z",
      "description": "Set variable num to nums[1]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.432Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.432Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 2,
        "result": 3
      },
      "timestamp": "2024-09-14T09:54:07.432Z",
      "description": "Set variable num to nums[2]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:54:07.433Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.433Z",
      "description": "Checked if num in nums."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.433Z",
      "description": "End of for each loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "total",
      "literal": 6,
      "timestamp": "2024-09-14T09:54:07.433Z",
      "description": "Printed total."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 2
            },
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 3
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "temp",
          "varType": null,
          "value": {
            "type": "IndexExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 3
            },
            "index": {
              "type": "Identifier",
              "value": "i",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "temp",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "Expression",
          "line": 3,
          "left": {
            "type": "LengthExpression",
            "line": 2,
            "source": "myArray"
          },
          "operator": "-",
          "right": "1"
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "temp",
          "value": {
            "type": "IndexExpression",
            "line": 3,
            "source": "myArray",
            "index": "i"
          }
        },
        {
          "type": "PrintStatement",
          "value": "temp",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 4",
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "loop from_to loop with condition i <= 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Set variable temp to myArray[0]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 10,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 20
      },
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Set variable temp to myArray[1]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 20,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 30
      },
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Set variable temp to myArray[2]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 30,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 40
      },
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Set variable temp to myArray[3]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 40,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 4,
        "result": 50
      },
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Set variable temp to myArray[4]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 50,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.436Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "/",
    "line": 2
  },
  {
    "type": "Number",
    "value": "4",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "r",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Number",
    "value": "3",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 2
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 3
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 3
          },
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "q",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "r",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": {
          "type": "Expression",
          "line": 3,
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T09:54:07.438Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T09:54:07.438Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-14T09:54:07.438Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "x",
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T09:54:07.442Z",
      "description": "Defined function add_numbers with parameters a, b."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "add_numbers",
      "arguments": [
        5,
        10
      ],
      "timestamp": "2024-09-14T09:54:07.442Z",
      "description": "Called function add_numbers with arguments 5,10."
    },
    {
      "line": 2,
      "operation": "return",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.442Z",
      "description": "Returned 15."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.442Z",
      "description": "Set variable x to function return value 15."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T09:54:07.443Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "size",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "hello",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 3
  },
  {
    "type": "Number",
    "value": "1",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "String",
    "value": "world",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 4
  },
  {
    "type": "String",
    "value": "!",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 4
  },
  {
    "type": "Number",
    "value": "2",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 5
  },
  {
    "type": "Number",
    "value": "0",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Number",
    "value": "0",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "line": 1,
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "line": 3,
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "line": 4,
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "line": 5,
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings",
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "line": 7,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 7,
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-14T09:54:07.445Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-14T09:54:07.445Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-14T09:54:07.445Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-14T09:54:07.445Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-14T09:54:07.445Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-14T09:54:07.445Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-14T09:54:07.445Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 2
  },
  {
    "type": "Number",
    "value": "30",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 3
  },
  {
    "type": "Number",
    "value": "4",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 4
  },
  {
    "type": "Number",
    "value": "2",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Number",
    "value": "50",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "totalLength",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 2
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 6
        },
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 2,
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 2
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "line": 3,
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "line": 4,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "line": 6,
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "line": 6,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-14T09:54:07.447Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-14T09:54:07.447Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-14T09:54:07.447Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-14T09:54:07.447Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-14T09:54:07.447Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.447Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "String",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "c",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "d",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "e",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "z",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-14T09:54:07.452Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-14T09:54:07.452Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "stringValue",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "stringValue"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      }
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 1
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "line": 1,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 1
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:54:07.456Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-14T09:54:07.456Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "200",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "300",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-14T09:54:07.458Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-14T09:54:07.458Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:54:07.459Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-14T09:54:07.459Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-14T09:54:07.460Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-14T09:54:07.460Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "String",
    "value": "hi",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "hello",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-14T09:54:07.461Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.461Z",
      "description": "Set variable len to 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-14T09:54:07.462Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T09:54:07.463Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-14T09:54:07.464Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T09:54:07.464Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-14T09:54:07.465Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.465Z",
      "description": "Set variable len to 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "size",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "line": 1,
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-14T09:54:07.466Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.467Z",
      "description": "Set variable len to 10."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "65",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Senior",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "20% on all items",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Gold",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 6
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 6
  },
  {
    "type": "Number",
    "value": "40",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Adult",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 8
  },
  {
    "type": "String",
    "value": "10% on select items",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "Silver",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 10
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 10
  },
  {
    "type": "Number",
    "value": "18",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 11
  },
  {
    "type": "String",
    "value": "Young Adult",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 12
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 12
  },
  {
    "type": "String",
    "value": "5% on books",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 13
  },
  {
    "type": "String",
    "value": "Bronze",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 15
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 15
  },
  {
    "type": "String",
    "value": "Child",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 16
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 16
  },
  {
    "type": "String",
    "value": "No discount",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 17
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 17
  },
  {
    "type": "String",
    "value": "None",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 18
  },
  {
    "type": "Identifier",
    "value": "note",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 18
  },
  {
    "type": "String",
    "value": "Parental supervision required",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 19
  },
  {
    "type": "Identifier",
    "value": "activity",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 19
  },
  {
    "type": "String",
    "value": "Eligible for children's events",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 20
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 20
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40",
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 8,
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 9,
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18",
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 11,
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 12,
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 13,
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 15,
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 16,
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 17,
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 18,
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 19,
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.469Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.469Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.469Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.469Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-14T09:54:07.469Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-14T09:54:07.469Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-14T09:54:07.469Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-14T09:54:07.469Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-14T09:54:07.469Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.469Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "30",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Hot",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "Turn on AC",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 5
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 5
  },
  {
    "type": "Number",
    "value": "20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 6
  },
  {
    "type": "String",
    "value": "Warm",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Open windows",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 8
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 8
  },
  {
    "type": "Number",
    "value": "10",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "Cool",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 10
  },
  {
    "type": "String",
    "value": "Do nothing",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 12
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 12
  },
  {
    "type": "String",
    "value": "Cold",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 13
  },
  {
    "type": "String",
    "value": "Turn on heater",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 14
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20",
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10",
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 9,
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 10,
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 12,
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 13,
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.470Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.470Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.470Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.470Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-14T09:54:07.471Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-14T09:54:07.471Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.471Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "65",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "90",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "grade",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "A",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "80",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "grade",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "B",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-14T09:54:07.472Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.472Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.472Z",
      "description": "Checked if score > 80."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.472Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "50",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 50",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "High range",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 5
  },
  {
    "type": "Number",
    "value": "30",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 6
  },
  {
    "type": "String",
    "value": "Greater than 30 but less than or equal to 50",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Mid range",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "30 or less",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 10
  },
  {
    "type": "String",
    "value": "Low range",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "note",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 11
  },
  {
    "type": "String",
    "value": "Consideration needed",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 12
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30",
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 9,
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 10,
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 11,
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T09:54:07.473Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.473Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.473Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-14T09:54:07.473Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-14T09:54:07.473Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-14T09:54:07.474Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.474Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Less than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.476Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.476Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-14T09:54:07.476Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.476Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 3
  },
  {
    "type": "Number",
    "value": "20",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "range",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "Between 10 and 20",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 3,
          "endLine": 3,
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20",
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 4,
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.477Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.477Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.477Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-14T09:54:07.477Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.477Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.477Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "value",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "value",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "10 or less",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.478Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.478Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-14T09:54:07.478Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.478Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "20",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 20",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "15",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Greater than 15 but less than or equal to 20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 6
  },
  {
    "type": "Number",
    "value": "10",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Greater than 10 but less than or equal to 15",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "10 or less",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10",
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 7,
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 9,
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.480Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.480Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.480Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.480Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-14T09:54:07.480Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.480Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "15",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 15",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Greater than 5 but less than or equal to 15",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "5 or less",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.481Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.481Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.481Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-14T09:54:07.481Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.481Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.485Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T09:54:07.485Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "index",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "characterAtIndex",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "index",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "line": 3,
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.486Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.486Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T09:54:07.487Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lastCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 2
            },
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": {
          "type": "Expression",
          "line": 2,
          "left": {
            "type": "LengthExpression",
            "line": 2,
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.490Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-14T09:54:07.490Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "emptyString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "emptyIndex",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "emptyString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-14T09:54:07.491Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-14T09:54:07.491Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.493Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T09:54:07.493Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Test String",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "String is long enough",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "String is too short",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 2
          },
          "line": 2
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myString"
        },
        "operator": ">",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-14T09:54:07.494Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.494Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-14T09:54:07.494Z",
      "description": "Printed String is long enough."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.494Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "lengthOfUndefined",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "undefinedVariable",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "line": 1,
        "source": "undefinedVariable"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "halfLength",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "/",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 2
          },
          "line": 2
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.497Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-14T09:54:07.497Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.498Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-14T09:54:07.498Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "abc",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-14T09:54:07.500Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.500Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-14T09:54:07.500Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "13",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.502Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-14T09:54:07.502Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.502Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.503Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-14T09:54:07.503Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-14T09:54:07.503Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "ten",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "String",
    "value": "five",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": {
          "type": "Expression",
          "line": 2,
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-14T09:54:07.513Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-14T09:54:07.513Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-14T09:54:07.513Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.516Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-14T09:54:07.516Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-14T09:54:07.516Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "startIndex",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "7",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "endIndex",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 3
  },
  {
    "type": "Number",
    "value": "12",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "startIndex",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "endIndex",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 4
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 4,
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 5
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.525Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T09:54:07.525Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:54:07.525Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-14T09:54:07.525Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-14T09:54:07.525Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "100",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 3
  },
  {
    "type": "Number",
    "value": "42",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 4
  },
  {
    "type": "Number",
    "value": "0",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 13
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 5
        },
        "line": 5
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 6
          },
          "line": 6
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 8
          },
          "line": 8
        }
      ],
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 13
      },
      "line": 13
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 4
      }
    },
    {
      "type": "IfStatement",
      "line": 5,
      "endLine": 5,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y",
        "line": 5
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 6,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 6
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "line": 8,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 8
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "line": 10,
      "endLine": 10,
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max",
        "line": 10
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 11,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 11
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max",
      "line": 13
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.535Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T09:54:07.536Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-14T09:54:07.536Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.536Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.536Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T09:54:07.536Z",
      "description": "Set variable max to 100."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.536Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.536Z",
      "description": "Checked if z > max."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.536Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-14T09:54:07.536Z",
      "description": "Printed max."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "7",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "12",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.544Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-14T09:54:07.544Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-14T09:54:07.544Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "PrintStatement",
      "value": "x",
      "line": 2
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.548Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-14T09:54:07.548Z",
      "description": "Printed x."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Both are false",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "At least one is true",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "line": 3,
            "operator": "not",
            "argument": "q"
          }
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.549Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:54:07.549Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.549Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-14T09:54:07.549Z",
      "description": "Printed At least one is true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.549Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "20",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "x is between y and 20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 8
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "equal",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Number",
    "value": "25",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "z is 25",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 8
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 9
        },
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 10
          },
          "line": 10
        }
      ],
      "alternate": null,
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "line": 8,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 9,
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "line": 9,
      "endLine": 9,
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25",
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25",
          "line": 10
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.560Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.560Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.560Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.560Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-14T09:54:07.560Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.560Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.560Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T09:54:07.560Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.560Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-14T09:54:07.560Z",
      "description": "Printed z is 25."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.560Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "20",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "25",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is less than 25",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "String",
    "value": "This is a normal statement",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "equal",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Number",
    "value": "20",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "y is equal to 20",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 8
      },
      "line": 8
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 9
        },
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 10
          },
          "line": 10
        }
      ],
      "alternate": null,
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement",
      "line": 8
    },
    {
      "type": "IfStatement",
      "line": 9,
      "endLine": 9,
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20",
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20",
          "line": 10
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.568Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:54:07.569Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.569Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.569Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-14T09:54:07.569Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.569Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.569Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-14T09:54:07.569Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.569Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-14T09:54:07.569Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.569Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is greater than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 7
  },
  {
    "type": "String",
    "value": "y is 10 or less",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "x is 10 or less",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 10
          },
          "line": 10
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10",
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less",
              "line": 7
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less",
          "line": 10
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:54:07.574Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.574Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.574Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.574Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-14T09:54:07.574Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.574Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.574Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 5
  },
  {
    "type": "Number",
    "value": "3",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "x is greater than 3 but not greater than 10",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "String",
    "value": "x is 3 or less",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "line": 5,
          "endLine": 5,
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3",
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10",
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less",
              "line": 8
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.579Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.579Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.579Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-14T09:54:07.579Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.579Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.579Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "15",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "b is greater than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 6
  },
  {
    "type": "Number",
    "value": "20",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 7
  },
  {
    "type": "String",
    "value": "b is less than 20",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 9
  },
  {
    "type": "String",
    "value": "b is 20 or more",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 12
  },
  {
    "type": "String",
    "value": "b is 10 or less",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 14
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 5
              },
              "line": 5
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 12
              },
              "line": 12
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10",
              "line": 5
            },
            {
              "type": "IfStatement",
              "line": 6,
              "endLine": 6,
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20",
                "line": 6
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20",
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more",
                  "line": 9
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less",
              "line": 12
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.582Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.583Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.583Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.583Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-14T09:54:07.583Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.583Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-14T09:54:07.583Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.583Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.583Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.583Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "30",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "x is between 10 and 30",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "x is 30 or more",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 6
              },
              "line": 6
            }
          ],
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 3,
          "endLine": 3,
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30",
            "line": 3
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30",
              "line": 4
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more",
              "line": 6
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:54:07.585Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.585Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.585Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-14T09:54:07.585Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.585Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.585Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "firstName",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "John",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lastName",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "Doe",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "fullName",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "firstName",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "String",
    "value": " ",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "lastName",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "fullName",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 3
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 3
          },
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "fullName",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": {
          "type": "Expression",
          "line": 3,
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName",
      "line": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-14T09:54:07.586Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-14T09:54:07.586Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-14T09:54:07.587Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-14T09:54:07.587Z",
      "description": "Printed fullName."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "isTrue is false",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false",
          "line": 3
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.588Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.588Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.588Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "boolean",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "Boolean is true",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "Boolean is false",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": "boolean",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.591Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.591Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-14T09:54:07.591Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.591Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "or",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Complex Condition Met",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "Complex Condition Not Met",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "line": 3,
            "operator": "not",
            "argument": "isTrue"
          }
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.595Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:54:07.595Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.595Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-14T09:54:07.595Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.595Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Correct",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "Incorrect",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "line": 3,
          "operator": "not",
          "argument": "isFalse"
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.597Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:54:07.597Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.597Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-14T09:54:07.597Z",
      "description": "Printed Correct."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.597Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.598Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:54:07.598Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Both are booleans",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans",
          "line": 4
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:54:07.602Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:54:07.602Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.602Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.602Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar",
      "line": 2
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.604Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-14T09:54:07.604Z",
      "description": "Printed myVar."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">=",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 5
  },
  {
    "type": "Number",
    "value": "2",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 7
  },
  {
    "type": "Number",
    "value": "3",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 9
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 5
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 5
                },
                "line": 6
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 7
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 7
                },
                "line": 8
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "LoopUntil",
      "line": 2,
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10",
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "x",
              "value": {
                "type": "Expression",
                "line": 6,
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "x",
              "value": {
                "type": "Expression",
                "line": 8,
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.605Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-14T09:54:07.605Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.605Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:54:07.605Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.605Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.605Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.605Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.605Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:54:07.605Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.605Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "Checked if x < 10."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.606Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 3
  },
  {
    "type": "Number",
    "value": "0",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 6
  },
  {
    "type": "Number",
    "value": "1",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 8
      },
      "line": 8
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 3
      },
      "line": 3,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "y",
          "value": {
            "type": "Expression",
            "line": 6,
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 6,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 7,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y",
      "line": 8
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:54:07.608Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.609Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.609Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.609Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.609Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-14T09:54:07.609Z",
      "description": "Printed y."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 7
  },
  {
    "type": "Number",
    "value": "2",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 7
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        "line": 8
      },
      "line": 7
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 8
      },
      "line": 8
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "sum",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum",
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "line": 7,
      "name": "sum",
      "value": {
        "type": "Expression",
        "line": 8,
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum",
      "line": 8
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.615Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.615Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-14T09:54:07.615Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.615Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:54:07.615Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-14T09:54:07.616Z",
      "description": "Printed sum."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "sum",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.621Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.621Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-14T09:54:07.621Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.621Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:54:07.621Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.621Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.621Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.621Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:54:07.621Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.621Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.621Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.621Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:54:07.621Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:54:07.622Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:54:07.622Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.622Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T09:54:07.622Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.622Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.622Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.622Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T09:54:07.622Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.622Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:54:07.622Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.622Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.622Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "line": 1,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.626Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": "==",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "LoopUntil",
      "line": 2,
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0",
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "Checked if x != 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.630Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 2
      },
      "line": 2,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.633Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "line": 1,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.641Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "x is 5 or less",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Number",
    "value": "1",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "2",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "3",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "4",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "5",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "6",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "7",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "8",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "9",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "letters",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 8
  },
  {
    "type": "String",
    "value": "a",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "b",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "c",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "d",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "e",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "f",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "g",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 9
  },
  {
    "type": "Number",
    "value": "5",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Number",
    "value": "4",
    "line": 9
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 7
        }
      ],
      "unInitialised": false,
      "line": 7
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 9
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less",
          "line": 5
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 7
        }
      ],
      "line": 7,
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 8
        }
      ],
      "line": 8,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 9,
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 9
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.643Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.643Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-14T09:54:07.643Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.643Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-14T09:54:07.643Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-14T09:54:07.643Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-14T09:54:07.643Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.646Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 3
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.649Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.649Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-14T09:54:07.649Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.649Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-14T09:54:07.650Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 4
  },
  {
    "type": "Number",
    "value": "3",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 4
  },
  {
    "type": "Number",
    "value": "3",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 2,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "line": 3,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "line": 4,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-14T09:54:07.653Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-14T09:54:07.653Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-14T09:54:07.653Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-14T09:54:07.653Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is less than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.656Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.656Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.656Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.656Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-14T09:54:07.656Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.656Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:54:07.656Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "Expression",
        "line": 2,
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.659Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:54:07.659Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "c",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "c",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.661Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.661Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.661Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:54:07.663Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:54:07.663Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-14T09:54:07.663Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:54:07.666Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.666Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-14T09:54:07.666Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 2
      },
      "line": 2,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:54:07.668Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "c",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 1
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 1
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "c",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-14T09:56:16.968Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:16.968Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-14T09:56:16.968Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "getGreeting",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "name",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, ",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "name",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "getGreeting",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 5
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 5
  },
  {
    "type": "Number",
    "value": "5",
    "line": 5
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "getGreeting",
      "params": [
        "name"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "StringLiteral",
              "value": "Hello, ",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "name",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "getGreeting",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 5
          }
        ],
        "line": 5
      },
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "Identifier",
        "value": "result",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "getGreeting",
      "params": [
        "name"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "Hello, ",
            "operator": "+",
            "right": "name"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 5,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "getGreeting",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 5
          }
        ],
        "line": 5
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 6,
      "name": "total",
      "value": {
        "type": "Identifier",
        "value": "result",
        "line": 6
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "getGreeting",
      "params": [
        "name"
      ],
      "timestamp": "2024-09-14T09:56:16.970Z",
      "description": "Defined function getGreeting with parameters name."
    },
    {
      "line": 5,
      "operation": "function_call",
      "varName": "getGreeting",
      "arguments": [
        5
      ],
      "timestamp": "2024-09-14T09:56:16.970Z",
      "description": "Called function getGreeting with arguments 5."
    },
    {
      "line": 2,
      "operation": "return",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T09:56:16.971Z",
      "description": "Returned Hello, 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T09:56:16.971Z",
      "description": "Set variable result to function return value Hello, 5."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "total",
      "type": "string",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T09:56:16.971Z",
      "description": "Set variable total to Hello, 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Number",
    "value": "20",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 4
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "result",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": "5",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "total",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": "result",
        "operator": "+",
        "right": "20"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 2,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:16.972Z",
      "description": "Set variable result to 5 + 10."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 35,
      "timestamp": "2024-09-14T09:56:16.972Z",
      "description": "Set variable total to result + 20."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 3
  },
  {
    "type": "Number",
    "value": "0",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 3
  },
  {
    "type": "Number",
    "value": "1",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 5
  },
  {
    "type": "Number",
    "value": "0",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 5
  },
  {
    "type": "Number",
    "value": "2",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "current",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 6
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 6
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "next",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 7
  },
  {
    "type": "Number",
    "value": "1",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "current",
    "line": 8
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "next",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 9
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 9
  },
  {
    "type": "Number",
    "value": "1",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 13
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 14
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 14
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 14
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 14
  },
  {
    "type": "Number",
    "value": "1",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 17
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 17
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "swapped",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 4
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "swapped",
          "varType": null,
          "value": {
            "type": "BooleanLiteral",
            "value": false,
            "line": 4
          },
          "line": 4
        },
        {
          "type": "LoopFromTo",
          "loopVariable": "j",
          "range": {
            "start": {
              "type": "NumberLiteral",
              "value": "0",
              "line": 5
            },
            "end": {
              "type": "Expression",
              "left": {
                "type": "Expression",
                "left": {
                  "type": "LengthExpression",
                  "source": {
                    "type": "Identifier",
                    "value": "myArray",
                    "line": 5
                  },
                  "line": 5
                },
                "operator": "-",
                "right": {
                  "type": "Identifier",
                  "value": "i",
                  "line": 5
                },
                "line": 5
              },
              "operator": "-",
              "right": {
                "type": "NumberLiteral",
                "value": "2",
                "line": 5
              },
              "line": 6
            }
          },
          "body": [
            {
              "type": "VariableDeclaration",
              "varName": "current",
              "varType": null,
              "value": {
                "type": "IndexExpression",
                "source": {
                  "type": "Identifier",
                  "value": "myArray",
                  "line": 6
                },
                "index": {
                  "type": "Identifier",
                  "value": "j",
                  "line": 6
                },
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "next",
              "varType": null,
              "value": {
                "type": "IndexExpression",
                "source": {
                  "type": "Identifier",
                  "value": "myArray",
                  "line": 7
                },
                "index": {
                  "type": "Expression",
                  "left": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 7
                  },
                  "operator": "+",
                  "right": {
                    "type": "NumberLiteral",
                    "value": "1",
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "line": 7
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "current",
                "operator": ">",
                "right": {
                  "type": "Identifier",
                  "value": "next",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "SwapOperation",
                  "varName": "myArray",
                  "firstPosition": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 9
                  },
                  "secondPosition": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "j",
                      "line": 9
                    },
                    "operator": "+",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "1",
                      "line": 9
                    },
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "swapped",
                  "varType": null,
                  "value": {
                    "type": "BooleanLiteral",
                    "value": true,
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": null,
              "line": 8
            }
          ],
          "line": 5
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "swapped",
              "line": 13
            },
            "line": 13
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "i",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "LengthExpression",
                  "source": {
                    "type": "Identifier",
                    "value": "myArray",
                    "line": 14
                  },
                  "line": 14
                },
                "operator": "-",
                "right": {
                  "type": "NumberLiteral",
                  "value": "1",
                  "line": 14
                },
                "line": 15
              },
              "line": 14
            }
          ],
          "alternate": null,
          "line": 13
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 17
      },
      "line": 17
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "swapped",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "line": 3,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "Expression",
          "line": 4,
          "left": {
            "type": "LengthExpression",
            "line": 3,
            "source": "myArray"
          },
          "operator": "-",
          "right": "1"
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "swapped",
          "value": {
            "type": "BooleanLiteral",
            "value": false,
            "line": 4
          }
        },
        {
          "type": "LoopFromTo",
          "line": 5,
          "loopVariable": "j",
          "range": {
            "start": {
              "type": "NumberLiteral",
              "value": "0",
              "line": 5
            },
            "end": {
              "type": "Expression",
              "line": 6,
              "left": {
                "type": "Expression",
                "line": 5,
                "left": {
                  "type": "LengthExpression",
                  "line": 5,
                  "source": "myArray"
                },
                "operator": "-",
                "right": "i"
              },
              "operator": "-",
              "right": "2"
            }
          },
          "body": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "current",
              "value": {
                "type": "IndexExpression",
                "line": 6,
                "source": "myArray",
                "index": "j"
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "next",
              "value": {
                "type": "IndexExpression",
                "line": 7,
                "source": "myArray",
                "index": {
                  "type": "Expression",
                  "line": 7,
                  "left": "j",
                  "operator": "+",
                  "right": "1"
                }
              }
            },
            {
              "type": "IfStatement",
              "line": 8,
              "endLine": 8,
              "condition": {
                "left": "current",
                "operator": ">",
                "right": "next",
                "line": 8
              },
              "consequent": [
                {
                  "type": "SwapOperation",
                  "line": 9,
                  "varName": "myArray",
                  "firstPosition": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 9
                  },
                  "secondPosition": {
                    "type": "Expression",
                    "line": 9,
                    "left": "j",
                    "operator": "+",
                    "right": "1"
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 10,
                  "name": "swapped",
                  "value": {
                    "type": "BooleanLiteral",
                    "value": true,
                    "line": 10
                  }
                }
              ],
              "alternate": null
            }
          ]
        },
        {
          "type": "IfStatement",
          "line": 13,
          "endLine": 13,
          "condition": {
            "left": null,
            "operator": "not",
            "right": "swapped",
            "line": 13
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 14,
              "name": "i",
              "value": {
                "type": "Expression",
                "line": 15,
                "left": {
                  "type": "LengthExpression",
                  "line": 14,
                  "source": "myArray"
                },
                "operator": "-",
                "right": "1"
              }
            }
          ],
          "alternate": null
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 17
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        50,
        40,
        30,
        20,
        10
      ],
      "timestamp": "2024-09-14T09:56:16.975Z",
      "description": "Created array myArray with values [50,40,30,20,10]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:16.976Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:16.976Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 3,
      "operation": "loop_from_to",
      "condition": "i <= 4",
      "timestamp": "2024-09-14T09:56:16.976Z",
      "description": "loop from_to loop with condition i <= 4."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.976Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:16.976Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:16.976Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 3",
      "timestamp": "2024-09-14T09:56:16.976Z",
      "description": "loop from_to loop with condition j <= 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.976Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 50
      },
      "timestamp": "2024-09-14T09:56:16.976Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 40
      },
      "timestamp": "2024-09-14T09:56:16.976Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.976Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:56:16.977Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:16.977Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:16.977Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:16.977Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.977Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 50
      },
      "timestamp": "2024-09-14T09:56:16.977Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 30
      },
      "timestamp": "2024-09-14T09:56:16.977Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.977Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:56:16.977Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:16.977Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:16.977Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:16.977Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.977Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 50
      },
      "timestamp": "2024-09-14T09:56:16.978Z",
      "description": "Set variable current to myArray[2]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 20
      },
      "timestamp": "2024-09-14T09:56:16.978Z",
      "description": "Set variable next to myArray[3]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.978Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 2,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 2 and 3 in array myArray.",
      "timestamp": "2024-09-14T09:56:16.978Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:16.978Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:16.978Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:16.978Z",
      "description": "Set variable j to 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.978Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 50
      },
      "timestamp": "2024-09-14T09:56:16.979Z",
      "description": "Set variable current to myArray[3]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 4,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:16.979Z",
      "description": "Set variable next to myArray[4]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.979Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 3,
      "secondPosition": 4,
      "varName": "myArray",
      "description": "Swapped values in position 3 and 4 in array myArray.",
      "timestamp": "2024-09-14T09:56:16.979Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:16.979Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:16.979Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:16.979Z",
      "description": "Set variable j to 4."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": false,
      "timestamp": "2024-09-14T09:56:16.979Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:16.979Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:56:16.979Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:16.979Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:16.980Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.980Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:16.981Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:16.981Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 2",
      "timestamp": "2024-09-14T09:56:16.981Z",
      "description": "loop from_to loop with condition j <= 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.981Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 40
      },
      "timestamp": "2024-09-14T09:56:16.981Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 30
      },
      "timestamp": "2024-09-14T09:56:16.981Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.981Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:56:16.981Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:16.981Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:16.981Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:16.981Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.981Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 40
      },
      "timestamp": "2024-09-14T09:56:16.982Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 20
      },
      "timestamp": "2024-09-14T09:56:16.982Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.984Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:56:16.984Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:16.984Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:16.984Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:16.984Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.984Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 40
      },
      "timestamp": "2024-09-14T09:56:16.985Z",
      "description": "Set variable current to myArray[2]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "Set variable next to myArray[3]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 2,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 2 and 3 in array myArray.",
      "timestamp": "2024-09-14T09:56:16.986Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "Set variable j to 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": false,
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 1",
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "loop from_to loop with condition j <= 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": true,
      "timestamp": "2024-09-14T09:56:16.986Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 30
      },
      "timestamp": "2024-09-14T09:56:16.987Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 20
      },
      "timestamp": "2024-09-14T09:56:17.022Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.022Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:56:17.029Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:17.029Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.029Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.029Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.029Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 30
      },
      "timestamp": "2024-09-14T09:56:17.029Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:17.030Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.030Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:56:17.030Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:17.030Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 0",
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "loop from_to loop with condition j <= 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Checked if j <= 0."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 20
      },
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:56:17.031Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 0",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Checked if j <= 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= -1",
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "loop from_to loop with condition j <= -1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= -1",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Checked if j <= -1."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 17,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:17.031Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": "x",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "if",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 2
          },
          "line": 2
        }
      ],
      "alternate": null,
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "IfStatement",
      "line": 1,
      "endLine": 1,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "5",
        "line": 1
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 2
        }
      ],
      "alternate": null
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        "line": 1
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopUntil",
      "line": 1,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "10",
        "line": 1
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 2,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "x",
            "operator": "+",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 1,
        "source": "myArray"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "e",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "e",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 1
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "e",
      "value": {
        "type": "IndexExpression",
        "line": 1,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myFunction",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "myFunction",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          }
        ],
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "myFunction",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          }
        ],
        "line": 1
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "firstChar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstChar",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 1
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "firstChar",
      "value": {
        "type": "IndexExpression",
        "line": 1,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "4",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "3",
            "line": 1
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 1
          },
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "4",
          "operator": "+",
          "right": "2"
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "line": 1,
          "left": "3",
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:56:17.059Z",
      "description": "Set variable result to (4 + 2) * (3 - 1)."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        "operator": "+",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "operator": "*",
          "right": {
            "type": "Expression",
            "left": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 1
            },
            "operator": "+",
            "right": {
              "type": "NumberLiteral",
              "value": "4",
              "line": 1
            },
            "line": 1
          },
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": "1",
        "operator": "+",
        "right": {
          "type": "Expression",
          "line": 1,
          "left": "2",
          "operator": "*",
          "right": {
            "type": "Expression",
            "line": 1,
            "left": "3",
            "operator": "+",
            "right": "4"
          }
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:17.060Z",
      "description": "Set variable result to 1 + (2 * (3 + 4))."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "Expression",
            "left": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 1
            },
            "operator": "*",
            "right": {
              "type": "NumberLiteral",
              "value": "2",
              "line": 1
            },
            "line": 1
          },
          "line": 1
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "2",
          "operator": "+",
          "right": {
            "type": "Expression",
            "line": 1,
            "left": "3",
            "operator": "*",
            "right": "2"
          }
        },
        "operator": "-",
        "right": "5"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.062Z",
      "description": "Set variable result to (2 + (3 * 2)) - 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "3",
            "line": 1
          },
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "5",
          "operator": "+",
          "right": "3"
        },
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 16,
      "timestamp": "2024-09-14T09:56:17.064Z",
      "description": "Set variable result to (5 + 3) * 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "logMessage",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "message",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "message",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "logMessage",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "String",
    "value": "Test message",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "logMessage",
      "params": [
        "message"
      ],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "message",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "logMessage",
        "args": [
          {
            "type": "StringLiteral",
            "value": "Test message",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "logMessage",
      "params": [
        "message"
      ],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": "message",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "logMessage",
        "args": [
          {
            "type": "StringLiteral",
            "value": "Test message",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "addNumbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "addNumbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "addNumbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "sum",
      "value": {
        "type": "FunctionCall",
        "name": "addNumbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T09:56:17.067Z",
      "description": "Defined function addNumbers with parameters a, b."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "addNumbers",
      "arguments": [
        5,
        10
      ],
      "timestamp": "2024-09-14T09:56:17.068Z",
      "description": "Called function addNumbers with arguments 5,10."
    },
    {
      "line": 2,
      "operation": "return",
      "value": 15,
      "timestamp": "2024-09-14T09:56:17.068Z",
      "description": "Returned 15."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:17.068Z",
      "description": "Set variable sum to function return value 15."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "multiplyNumbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num1",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "multiplyNumbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "6",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "num1",
              "line": 2
            },
            "operator": "*",
            "right": {
              "type": "Identifier",
              "value": "num2",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "multiplyNumbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "num1",
            "operator": "*",
            "right": "num2"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "FunctionCall",
      "line": 4,
      "name": "multiplyNumbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        }
      ],
      "callLine": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "timestamp": "2024-09-14T09:56:17.070Z",
      "description": "Defined function multiplyNumbers with parameters num1, num2."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "multiplyNumbers",
      "arguments": [
        5,
        6
      ],
      "timestamp": "2024-09-14T09:56:17.070Z",
      "description": "Called function multiplyNumbers with arguments 5,6."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": 30,
      "timestamp": "2024-09-14T09:56:17.070Z",
      "description": "Printed 30."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "greetUser",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, user!",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "greetUser",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "greetUser",
      "params": [],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Hello, user!",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "greetUser",
      "args": [],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "greetUser",
      "params": [],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": "Hello, user!",
          "line": 2
        }
      ]
    },
    {
      "type": "FunctionCall",
      "line": 4,
      "name": "greetUser",
      "args": [],
      "callLine": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "greetUser",
      "params": [],
      "timestamp": "2024-09-14T09:56:17.071Z",
      "description": "Defined function greetUser with no parameters."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "greetUser",
      "arguments": [],
      "timestamp": "2024-09-14T09:56:17.071Z",
      "description": "Called function greetUser with no arguments."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Hello, user!",
      "timestamp": "2024-09-14T09:56:17.071Z",
      "description": "Printed Hello, user!."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myArray",
            "line": 2
          },
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myArray"
        },
        "operator": "-",
        "right": "1"
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40
      ],
      "timestamp": "2024-09-14T09:56:17.073Z",
      "description": "Created array myArray with values [10,20,30,40]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 3,
      "secondPosition": 0,
      "varName": "myArray",
      "description": "Swapped values in position 3 and 0 in array myArray.",
      "timestamp": "2024-09-14T09:56:17.073Z"
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        40,
        20,
        30,
        10
      ],
      "timestamp": "2024-09-14T09:56:17.073Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "35",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "each",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "35",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "myArray",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "35",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "myArray",
      "line": 3,
      "endLine": 4,
      "body": [
        {
          "type": "PrintStatement",
          "value": "num",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        15,
        25,
        35
      ],
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Created array myArray with values [5,15,25,35]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 3 in array myArray.",
      "timestamp": "2024-09-14T09:56:17.075Z"
    },
    {
      "line": 3,
      "operation": "for_each",
      "condition": "num in myArray",
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "for each loop with condition num in myArray."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 35
      },
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Set variable num to myArray[0]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 35,
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 15
      },
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Set variable num to myArray[1]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 15,
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 25
      },
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Set variable num to myArray[2]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 25,
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 5
      },
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Set variable num to myArray[3]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "Checked if num in myArray."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.075Z",
      "description": "End of for each loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:17.077Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:56:17.077Z"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "4",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:17.079Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 4,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 4 in array myArray.",
      "timestamp": "2024-09-14T09:56:17.079Z"
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        50,
        20,
        30,
        40,
        10
      ],
      "timestamp": "2024-09-14T09:56:17.079Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:17.081Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:56:17.081Z"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "each",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "total",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "total",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "num",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "total",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "total",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2,
      "unInitialised": false
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "line": 3,
      "endLine": 4,
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "total",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "total",
            "operator": "+",
            "right": "num"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "total",
      "line": 6
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "Set variable total to 0."
    },
    {
      "line": 2,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "Created array nums with values [1,2,3]."
    },
    {
      "line": 3,
      "operation": "for_each",
      "condition": "num in nums",
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "for each loop with condition num in nums."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 0,
        "result": 1
      },
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "Set variable num to nums[0]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 1,
        "result": 2
      },
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "Set variable num to nums[1]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 2,
        "result": 3
      },
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "Set variable num to nums[2]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "Checked if num in nums."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "End of for each loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "total",
      "literal": 6,
      "timestamp": "2024-09-14T09:56:17.083Z",
      "description": "Printed total."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 2
            },
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 3
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "temp",
          "varType": null,
          "value": {
            "type": "IndexExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 3
            },
            "index": {
              "type": "Identifier",
              "value": "i",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "temp",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "Expression",
          "line": 3,
          "left": {
            "type": "LengthExpression",
            "line": 2,
            "source": "myArray"
          },
          "operator": "-",
          "right": "1"
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "temp",
          "value": {
            "type": "IndexExpression",
            "line": 3,
            "source": "myArray",
            "index": "i"
          }
        },
        {
          "type": "PrintStatement",
          "value": "temp",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 4",
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "loop from_to loop with condition i <= 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Set variable temp to myArray[0]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 10,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 20
      },
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Set variable temp to myArray[1]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 20,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 30
      },
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Set variable temp to myArray[2]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 30,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 40
      },
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Set variable temp to myArray[3]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 40,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 4,
        "result": 50
      },
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Set variable temp to myArray[4]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 50,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.085Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "/",
    "line": 2
  },
  {
    "type": "Number",
    "value": "4",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "r",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Number",
    "value": "3",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 2
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 3
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 3
          },
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "q",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "r",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": {
          "type": "Expression",
          "line": 3,
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T09:56:17.087Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T09:56:17.087Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-14T09:56:17.088Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "x",
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T09:56:17.092Z",
      "description": "Defined function add_numbers with parameters a, b."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "add_numbers",
      "arguments": [
        5,
        10
      ],
      "timestamp": "2024-09-14T09:56:17.092Z",
      "description": "Called function add_numbers with arguments 5,10."
    },
    {
      "line": 2,
      "operation": "return",
      "value": 15,
      "timestamp": "2024-09-14T09:56:17.092Z",
      "description": "Returned 15."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:17.092Z",
      "description": "Set variable x to function return value 15."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T09:56:17.093Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "size",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "hello",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 3
  },
  {
    "type": "Number",
    "value": "1",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "String",
    "value": "world",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 4
  },
  {
    "type": "String",
    "value": "!",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 4
  },
  {
    "type": "Number",
    "value": "2",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 5
  },
  {
    "type": "Number",
    "value": "0",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Number",
    "value": "0",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "line": 1,
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "line": 3,
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "line": 4,
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "line": 5,
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings",
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "line": 7,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 7,
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-14T09:56:17.095Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-14T09:56:17.095Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-14T09:56:17.095Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-14T09:56:17.095Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-14T09:56:17.095Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-14T09:56:17.095Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-14T09:56:17.095Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 2
  },
  {
    "type": "Number",
    "value": "30",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 3
  },
  {
    "type": "Number",
    "value": "4",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 4
  },
  {
    "type": "Number",
    "value": "2",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Number",
    "value": "50",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "totalLength",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 2
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 6
        },
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 2,
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 2
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "line": 3,
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "line": 4,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "line": 6,
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "line": 6,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-14T09:56:17.097Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-14T09:56:17.097Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-14T09:56:17.097Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-14T09:56:17.097Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-14T09:56:17.097Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.097Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "String",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "c",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "d",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "e",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "z",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-14T09:56:17.100Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-14T09:56:17.100Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "stringValue",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "stringValue"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      }
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 1
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "line": 1,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 1
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:17.104Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-14T09:56:17.104Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "200",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "300",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-14T09:56:17.105Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-14T09:56:17.105Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:17.106Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-14T09:56:17.106Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-14T09:56:17.107Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-14T09:56:17.107Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "String",
    "value": "hi",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "hello",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-14T09:56:17.108Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:17.108Z",
      "description": "Set variable len to 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-14T09:56:17.109Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:17.110Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-14T09:56:17.111Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:17.111Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-14T09:56:17.112Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.112Z",
      "description": "Set variable len to 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "size",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "line": 1,
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-14T09:56:17.113Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.113Z",
      "description": "Set variable len to 10."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "65",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Senior",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "20% on all items",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Gold",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 6
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 6
  },
  {
    "type": "Number",
    "value": "40",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Adult",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 8
  },
  {
    "type": "String",
    "value": "10% on select items",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "Silver",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 10
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 10
  },
  {
    "type": "Number",
    "value": "18",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 11
  },
  {
    "type": "String",
    "value": "Young Adult",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 12
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 12
  },
  {
    "type": "String",
    "value": "5% on books",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 13
  },
  {
    "type": "String",
    "value": "Bronze",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 15
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 15
  },
  {
    "type": "String",
    "value": "Child",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 16
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 16
  },
  {
    "type": "String",
    "value": "No discount",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 17
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 17
  },
  {
    "type": "String",
    "value": "None",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 18
  },
  {
    "type": "Identifier",
    "value": "note",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 18
  },
  {
    "type": "String",
    "value": "Parental supervision required",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 19
  },
  {
    "type": "Identifier",
    "value": "activity",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 19
  },
  {
    "type": "String",
    "value": "Eligible for children's events",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 20
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 20
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40",
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 8,
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 9,
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18",
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 11,
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 12,
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 13,
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 15,
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 16,
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 17,
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 18,
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 19,
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.116Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.116Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.116Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.116Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-14T09:56:17.116Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-14T09:56:17.116Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-14T09:56:17.116Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-14T09:56:17.116Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-14T09:56:17.116Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.116Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "30",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Hot",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "Turn on AC",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 5
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 5
  },
  {
    "type": "Number",
    "value": "20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 6
  },
  {
    "type": "String",
    "value": "Warm",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Open windows",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 8
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 8
  },
  {
    "type": "Number",
    "value": "10",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "Cool",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 10
  },
  {
    "type": "String",
    "value": "Do nothing",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 12
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 12
  },
  {
    "type": "String",
    "value": "Cold",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 13
  },
  {
    "type": "String",
    "value": "Turn on heater",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 14
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20",
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10",
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 9,
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 10,
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 12,
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 13,
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:17.118Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.118Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.118Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.118Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-14T09:56:17.118Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-14T09:56:17.118Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.118Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "65",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "90",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "grade",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "A",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "80",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "grade",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "B",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-14T09:56:17.119Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.119Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.119Z",
      "description": "Checked if score > 80."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.119Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "50",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 50",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "High range",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 5
  },
  {
    "type": "Number",
    "value": "30",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 6
  },
  {
    "type": "String",
    "value": "Greater than 30 but less than or equal to 50",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Mid range",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "30 or less",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 10
  },
  {
    "type": "String",
    "value": "Low range",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "note",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 11
  },
  {
    "type": "String",
    "value": "Consideration needed",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 12
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30",
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 9,
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 10,
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 11,
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T09:56:17.121Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.121Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.121Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-14T09:56:17.121Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-14T09:56:17.121Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-14T09:56:17.121Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.121Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Less than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.122Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.122Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-14T09:56:17.122Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.122Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 3
  },
  {
    "type": "Number",
    "value": "20",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "range",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "Between 10 and 20",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 3,
          "endLine": 3,
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20",
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 4,
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:17.124Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.124Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.124Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-14T09:56:17.124Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.124Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.124Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "value",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "value",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "10 or less",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.125Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.125Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-14T09:56:17.125Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.125Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "20",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 20",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "15",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Greater than 15 but less than or equal to 20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 6
  },
  {
    "type": "Number",
    "value": "10",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Greater than 10 but less than or equal to 15",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "10 or less",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10",
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 7,
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 9,
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.126Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.126Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.127Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.127Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-14T09:56:17.127Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.127Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "15",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 15",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Greater than 5 but less than or equal to 15",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "5 or less",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.128Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.128Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.128Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-14T09:56:17.129Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.129Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.131Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T09:56:17.131Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "index",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "characterAtIndex",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "index",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "line": 3,
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.132Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.132Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T09:56:17.132Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lastCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 2
            },
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": {
          "type": "Expression",
          "line": 2,
          "left": {
            "type": "LengthExpression",
            "line": 2,
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.133Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-14T09:56:17.133Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "emptyString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "emptyIndex",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "emptyString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-14T09:56:17.134Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-14T09:56:17.134Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.136Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T09:56:17.136Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Test String",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "String is long enough",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "String is too short",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 2
          },
          "line": 2
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myString"
        },
        "operator": ">",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-14T09:56:17.139Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.139Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-14T09:56:17.139Z",
      "description": "Printed String is long enough."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.139Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "lengthOfUndefined",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "undefinedVariable",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "line": 1,
        "source": "undefinedVariable"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "halfLength",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "/",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 2
          },
          "line": 2
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.141Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-14T09:56:17.141Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.142Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-14T09:56:17.142Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "abc",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-14T09:56:17.144Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.144Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:17.144Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "13",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.147Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-14T09:56:17.147Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.147Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.149Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-14T09:56:17.149Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-14T09:56:17.149Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "ten",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "String",
    "value": "five",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": {
          "type": "Expression",
          "line": 2,
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-14T09:56:17.159Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-14T09:56:17.159Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-14T09:56:17.159Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.160Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-14T09:56:17.160Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-14T09:56:17.160Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "startIndex",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "7",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "endIndex",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 3
  },
  {
    "type": "Number",
    "value": "12",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "startIndex",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "endIndex",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 4
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 4,
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 5
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.163Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T09:56:17.163Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:56:17.163Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-14T09:56:17.163Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-14T09:56:17.163Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "100",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 3
  },
  {
    "type": "Number",
    "value": "42",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 4
  },
  {
    "type": "Number",
    "value": "0",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 13
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 5
        },
        "line": 5
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 6
          },
          "line": 6
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 8
          },
          "line": 8
        }
      ],
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 13
      },
      "line": 13
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 4
      }
    },
    {
      "type": "IfStatement",
      "line": 5,
      "endLine": 5,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y",
        "line": 5
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 6,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 6
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "line": 8,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 8
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "line": 10,
      "endLine": 10,
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max",
        "line": 10
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 11,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 11
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max",
      "line": 13
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.166Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T09:56:17.166Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-14T09:56:17.166Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.166Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.166Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T09:56:17.166Z",
      "description": "Set variable max to 100."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.166Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.166Z",
      "description": "Checked if z > max."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.166Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-14T09:56:17.166Z",
      "description": "Printed max."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "7",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "12",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.168Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-14T09:56:17.168Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-14T09:56:17.168Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "PrintStatement",
      "value": "x",
      "line": 2
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.169Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-14T09:56:17.169Z",
      "description": "Printed x."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Both are false",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "At least one is true",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "line": 3,
            "operator": "not",
            "argument": "q"
          }
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:17.170Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:17.170Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.170Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-14T09:56:17.170Z",
      "description": "Printed At least one is true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.170Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "20",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "x is between y and 20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 8
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "equal",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Number",
    "value": "25",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "z is 25",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 8
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 9
        },
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 10
          },
          "line": 10
        }
      ],
      "alternate": null,
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "line": 8,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 9,
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "line": 9,
      "endLine": 9,
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25",
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25",
          "line": 10
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:17.171Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.171Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.172Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.172Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-14T09:56:17.172Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.172Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.172Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T09:56:17.172Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.172Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-14T09:56:17.172Z",
      "description": "Printed z is 25."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.172Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "20",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "25",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is less than 25",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "String",
    "value": "This is a normal statement",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "equal",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Number",
    "value": "20",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "y is equal to 20",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 8
      },
      "line": 8
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 9
        },
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 10
          },
          "line": 10
        }
      ],
      "alternate": null,
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement",
      "line": 8
    },
    {
      "type": "IfStatement",
      "line": 9,
      "endLine": 9,
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20",
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20",
          "line": 10
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.174Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:56:17.174Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.174Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.174Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-14T09:56:17.174Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.174Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.174Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-14T09:56:17.174Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.174Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-14T09:56:17.174Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.174Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is greater than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 7
  },
  {
    "type": "String",
    "value": "y is 10 or less",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "x is 10 or less",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 10
          },
          "line": 10
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10",
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less",
              "line": 7
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less",
          "line": 10
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:56:17.175Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.175Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.175Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.175Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-14T09:56:17.175Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.175Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.175Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 5
  },
  {
    "type": "Number",
    "value": "3",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "x is greater than 3 but not greater than 10",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "String",
    "value": "x is 3 or less",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "line": 5,
          "endLine": 5,
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3",
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10",
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less",
              "line": 8
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.176Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.176Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.176Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-14T09:56:17.176Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.176Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.176Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "15",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "b is greater than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 6
  },
  {
    "type": "Number",
    "value": "20",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 7
  },
  {
    "type": "String",
    "value": "b is less than 20",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 9
  },
  {
    "type": "String",
    "value": "b is 20 or more",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 12
  },
  {
    "type": "String",
    "value": "b is 10 or less",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 14
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 5
              },
              "line": 5
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 12
              },
              "line": 12
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10",
              "line": 5
            },
            {
              "type": "IfStatement",
              "line": 6,
              "endLine": 6,
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20",
                "line": 6
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20",
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more",
                  "line": 9
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less",
              "line": 12
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.178Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:17.178Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.178Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.178Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-14T09:56:17.178Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.178Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-14T09:56:17.178Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.178Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.178Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.178Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "30",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "x is between 10 and 30",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "x is 30 or more",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 6
              },
              "line": 6
            }
          ],
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 3,
          "endLine": 3,
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30",
            "line": 3
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30",
              "line": 4
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more",
              "line": 6
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:56:17.179Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.179Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.179Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-14T09:56:17.179Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.179Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.179Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "firstName",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "John",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lastName",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "Doe",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "fullName",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "firstName",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "String",
    "value": " ",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "lastName",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "fullName",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 3
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 3
          },
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "fullName",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": {
          "type": "Expression",
          "line": 3,
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName",
      "line": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-14T09:56:17.181Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-14T09:56:17.181Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-14T09:56:17.181Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-14T09:56:17.181Z",
      "description": "Printed fullName."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "isTrue is false",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false",
          "line": 3
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:17.182Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.182Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.182Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "boolean",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "Boolean is true",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "Boolean is false",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": "boolean",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:17.184Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.184Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-14T09:56:17.184Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.184Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "or",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Complex Condition Met",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "Complex Condition Not Met",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "line": 3,
            "operator": "not",
            "argument": "isTrue"
          }
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:17.186Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:17.186Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.186Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-14T09:56:17.186Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.186Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Correct",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "Incorrect",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "line": 3,
          "operator": "not",
          "argument": "isFalse"
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:17.187Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:17.187Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.187Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-14T09:56:17.187Z",
      "description": "Printed Correct."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.187Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:17.188Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:17.188Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Both are booleans",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans",
          "line": 4
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:17.189Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:17.189Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.189Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.189Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar",
      "line": 2
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.191Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-14T09:56:17.191Z",
      "description": "Printed myVar."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">=",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 5
  },
  {
    "type": "Number",
    "value": "2",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 7
  },
  {
    "type": "Number",
    "value": "3",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 9
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 5
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 5
                },
                "line": 6
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 7
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 7
                },
                "line": 8
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "LoopUntil",
      "line": 2,
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10",
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "x",
              "value": {
                "type": "Expression",
                "line": 6,
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "x",
              "value": {
                "type": "Expression",
                "line": 8,
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "Checked if x < 10."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.192Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 3
  },
  {
    "type": "Number",
    "value": "0",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 6
  },
  {
    "type": "Number",
    "value": "1",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 8
      },
      "line": 8
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 3
      },
      "line": 3,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "y",
          "value": {
            "type": "Expression",
            "line": 6,
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 6,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 7,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y",
      "line": 8
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-14T09:56:17.194Z",
      "description": "Printed y."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 7
  },
  {
    "type": "Number",
    "value": "2",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 7
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        "line": 8
      },
      "line": 7
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 8
      },
      "line": 8
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "sum",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum",
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "line": 7,
      "name": "sum",
      "value": {
        "type": "Expression",
        "line": 8,
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum",
      "line": 8
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-14T09:56:17.196Z",
      "description": "Printed sum."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "sum",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:17.198Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.199Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.199Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.199Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:17.199Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:17.199Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:17.199Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.199Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.199Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "line": 1,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.200Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": "==",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "LoopUntil",
      "line": 2,
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0",
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.201Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "Checked if x != 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.202Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 2
      },
      "line": 2,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.203Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T09:56:17.203Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.203Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:17.203Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:17.203Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.203Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:17.203Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.203Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.203Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:17.203Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:17.204Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.204Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:17.204Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.204Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.204Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:17.204Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.204Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.204Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.204Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "line": 1,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.205Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "x is 5 or less",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Number",
    "value": "1",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "2",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "3",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "4",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "5",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "6",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "7",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "8",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "9",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "letters",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 8
  },
  {
    "type": "String",
    "value": "a",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "b",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "c",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "d",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "e",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "f",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "g",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 9
  },
  {
    "type": "Number",
    "value": "5",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Number",
    "value": "4",
    "line": 9
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 7
        }
      ],
      "unInitialised": false,
      "line": 7
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 9
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less",
          "line": 5
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 7
        }
      ],
      "line": 7,
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 8
        }
      ],
      "line": 8,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 9,
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 9
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.207Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.207Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-14T09:56:17.207Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.207Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-14T09:56:17.207Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-14T09:56:17.207Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-14T09:56:17.207Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.208Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 3
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.210Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.210Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-14T09:56:17.210Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.210Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-14T09:56:17.211Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 4
  },
  {
    "type": "Number",
    "value": "3",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 4
  },
  {
    "type": "Number",
    "value": "3",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 2,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "line": 3,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "line": 4,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-14T09:56:17.212Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-14T09:56:17.212Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-14T09:56:17.212Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-14T09:56:17.212Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is less than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.213Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.213Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.213Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.213Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-14T09:56:17.213Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.213Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:17.213Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "Expression",
        "line": 2,
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.214Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:56:17.214Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "c",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "c",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.216Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.216Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:17.216Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:56:17.219Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:17.219Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-14T09:56:17.219Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:17.221Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.221Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-14T09:56:17.221Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 2
      },
      "line": 2,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:17.222Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T09:56:17.222Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.222Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:17.222Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:17.222Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.222Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:17.222Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:17.222Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.222Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:17.222Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:17.222Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.222Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:17.222Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:17.223Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:17.223Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:17.223Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:17.223Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T09:56:17.223Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:17.223Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "c",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "string",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 1
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 1
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "c",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-14T09:56:24.199Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.199Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-14T09:56:24.199Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "getGreeting",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "name",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, ",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "name",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "getGreeting",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 5
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 5
  },
  {
    "type": "Number",
    "value": "5",
    "line": 5
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "getGreeting",
      "params": [
        "name"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "StringLiteral",
              "value": "Hello, ",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "name",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "getGreeting",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 5
          }
        ],
        "line": 5
      },
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "Identifier",
        "value": "result",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "getGreeting",
      "params": [
        "name"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "Hello, ",
            "operator": "+",
            "right": "name"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 5,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "getGreeting",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 5
          }
        ],
        "line": 5
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 6,
      "name": "total",
      "value": {
        "type": "Identifier",
        "value": "result",
        "line": 6
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "getGreeting",
      "params": [
        "name"
      ],
      "timestamp": "2024-09-14T09:56:24.201Z",
      "description": "Defined function getGreeting with parameters name."
    },
    {
      "line": 5,
      "operation": "function_call",
      "varName": "getGreeting",
      "arguments": [
        5
      ],
      "timestamp": "2024-09-14T09:56:24.201Z",
      "description": "Called function getGreeting with arguments 5."
    },
    {
      "line": 2,
      "operation": "return",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T09:56:24.201Z",
      "description": "Returned Hello, 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T09:56:24.201Z",
      "description": "Set variable result to function return value Hello, 5."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "total",
      "type": "string",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T09:56:24.201Z",
      "description": "Set variable total to Hello, 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Number",
    "value": "20",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 4
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "result",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": "5",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "total",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": "result",
        "operator": "+",
        "right": "20"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 2,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.203Z",
      "description": "Set variable result to 5 + 10."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 35,
      "timestamp": "2024-09-14T09:56:24.203Z",
      "description": "Set variable total to result + 20."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 3
  },
  {
    "type": "Number",
    "value": "0",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 3
  },
  {
    "type": "Number",
    "value": "1",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 5
  },
  {
    "type": "Number",
    "value": "0",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 5
  },
  {
    "type": "Number",
    "value": "2",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "current",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 6
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 6
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "next",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 7
  },
  {
    "type": "Number",
    "value": "1",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "current",
    "line": 8
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "next",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 9
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 9
  },
  {
    "type": "Number",
    "value": "1",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 13
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 14
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 14
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 14
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 14
  },
  {
    "type": "Number",
    "value": "1",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 17
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 17
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "swapped",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 4
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "swapped",
          "varType": null,
          "value": {
            "type": "BooleanLiteral",
            "value": false,
            "line": 4
          },
          "line": 4
        },
        {
          "type": "LoopFromTo",
          "loopVariable": "j",
          "range": {
            "start": {
              "type": "NumberLiteral",
              "value": "0",
              "line": 5
            },
            "end": {
              "type": "Expression",
              "left": {
                "type": "Expression",
                "left": {
                  "type": "LengthExpression",
                  "source": {
                    "type": "Identifier",
                    "value": "myArray",
                    "line": 5
                  },
                  "line": 5
                },
                "operator": "-",
                "right": {
                  "type": "Identifier",
                  "value": "i",
                  "line": 5
                },
                "line": 5
              },
              "operator": "-",
              "right": {
                "type": "NumberLiteral",
                "value": "2",
                "line": 5
              },
              "line": 6
            }
          },
          "body": [
            {
              "type": "VariableDeclaration",
              "varName": "current",
              "varType": null,
              "value": {
                "type": "IndexExpression",
                "source": {
                  "type": "Identifier",
                  "value": "myArray",
                  "line": 6
                },
                "index": {
                  "type": "Identifier",
                  "value": "j",
                  "line": 6
                },
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "next",
              "varType": null,
              "value": {
                "type": "IndexExpression",
                "source": {
                  "type": "Identifier",
                  "value": "myArray",
                  "line": 7
                },
                "index": {
                  "type": "Expression",
                  "left": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 7
                  },
                  "operator": "+",
                  "right": {
                    "type": "NumberLiteral",
                    "value": "1",
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "line": 7
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "current",
                "operator": ">",
                "right": {
                  "type": "Identifier",
                  "value": "next",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "SwapOperation",
                  "varName": "myArray",
                  "firstPosition": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 9
                  },
                  "secondPosition": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "j",
                      "line": 9
                    },
                    "operator": "+",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "1",
                      "line": 9
                    },
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "swapped",
                  "varType": null,
                  "value": {
                    "type": "BooleanLiteral",
                    "value": true,
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": null,
              "line": 8
            }
          ],
          "line": 5
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "swapped",
              "line": 13
            },
            "line": 13
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "i",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "LengthExpression",
                  "source": {
                    "type": "Identifier",
                    "value": "myArray",
                    "line": 14
                  },
                  "line": 14
                },
                "operator": "-",
                "right": {
                  "type": "NumberLiteral",
                  "value": "1",
                  "line": 14
                },
                "line": 15
              },
              "line": 14
            }
          ],
          "alternate": null,
          "line": 13
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 17
      },
      "line": 17
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "swapped",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "line": 3,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "Expression",
          "line": 4,
          "left": {
            "type": "LengthExpression",
            "line": 3,
            "source": "myArray"
          },
          "operator": "-",
          "right": "1"
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "swapped",
          "value": {
            "type": "BooleanLiteral",
            "value": false,
            "line": 4
          }
        },
        {
          "type": "LoopFromTo",
          "line": 5,
          "loopVariable": "j",
          "range": {
            "start": {
              "type": "NumberLiteral",
              "value": "0",
              "line": 5
            },
            "end": {
              "type": "Expression",
              "line": 6,
              "left": {
                "type": "Expression",
                "line": 5,
                "left": {
                  "type": "LengthExpression",
                  "line": 5,
                  "source": "myArray"
                },
                "operator": "-",
                "right": "i"
              },
              "operator": "-",
              "right": "2"
            }
          },
          "body": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "current",
              "value": {
                "type": "IndexExpression",
                "line": 6,
                "source": "myArray",
                "index": "j"
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "next",
              "value": {
                "type": "IndexExpression",
                "line": 7,
                "source": "myArray",
                "index": {
                  "type": "Expression",
                  "line": 7,
                  "left": "j",
                  "operator": "+",
                  "right": "1"
                }
              }
            },
            {
              "type": "IfStatement",
              "line": 8,
              "endLine": 8,
              "condition": {
                "left": "current",
                "operator": ">",
                "right": "next",
                "line": 8
              },
              "consequent": [
                {
                  "type": "SwapOperation",
                  "line": 9,
                  "varName": "myArray",
                  "firstPosition": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 9
                  },
                  "secondPosition": {
                    "type": "Expression",
                    "line": 9,
                    "left": "j",
                    "operator": "+",
                    "right": "1"
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 10,
                  "name": "swapped",
                  "value": {
                    "type": "BooleanLiteral",
                    "value": true,
                    "line": 10
                  }
                }
              ],
              "alternate": null
            }
          ]
        },
        {
          "type": "IfStatement",
          "line": 13,
          "endLine": 13,
          "condition": {
            "left": null,
            "operator": "not",
            "right": "swapped",
            "line": 13
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 14,
              "name": "i",
              "value": {
                "type": "Expression",
                "line": 15,
                "left": {
                  "type": "LengthExpression",
                  "line": 14,
                  "source": "myArray"
                },
                "operator": "-",
                "right": "1"
              }
            }
          ],
          "alternate": null
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 17
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        50,
        40,
        30,
        20,
        10
      ],
      "timestamp": "2024-09-14T09:56:24.207Z",
      "description": "Created array myArray with values [50,40,30,20,10]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.208Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.208Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 3,
      "operation": "loop_from_to",
      "condition": "i <= 4",
      "timestamp": "2024-09-14T09:56:24.208Z",
      "description": "loop from_to loop with condition i <= 4."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.208Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:24.208Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.208Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 3",
      "timestamp": "2024-09-14T09:56:24.208Z",
      "description": "loop from_to loop with condition j <= 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.208Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 50
      },
      "timestamp": "2024-09-14T09:56:24.209Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 40
      },
      "timestamp": "2024-09-14T09:56:24.209Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.210Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.210Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.210Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.210Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.210Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.210Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 50
      },
      "timestamp": "2024-09-14T09:56:24.210Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 30
      },
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.211Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 50
      },
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Set variable current to myArray[2]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 20
      },
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Set variable next to myArray[3]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 2,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 2 and 3 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.211Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Set variable j to 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 50
      },
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Set variable current to myArray[3]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 4,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Set variable next to myArray[4]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 3,
      "secondPosition": 4,
      "varName": "myArray",
      "description": "Swapped values in position 3 and 4 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.211Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Set variable j to 4."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.211Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 2",
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "loop from_to loop with condition j <= 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 40
      },
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 30
      },
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.212Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 40
      },
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 20
      },
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.212Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 40
      },
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Set variable current to myArray[2]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Set variable next to myArray[3]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.212Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 2,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 2 and 3 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.213Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable j to 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 1",
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "loop from_to loop with condition j <= 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 30
      },
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 20
      },
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.213Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 30
      },
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.213Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.213Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 0",
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "loop from_to loop with condition j <= 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Checked if j <= 0."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 20
      },
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.214Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 0",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Checked if j <= 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= -1",
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "loop from_to loop with condition j <= -1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= -1",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Checked if j <= -1."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 17,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:24.214Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": "x",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "if",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 2
          },
          "line": 2
        }
      ],
      "alternate": null,
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "IfStatement",
      "line": 1,
      "endLine": 1,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "5",
        "line": 1
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 2
        }
      ],
      "alternate": null
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        "line": 1
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopUntil",
      "line": 1,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "10",
        "line": 1
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 2,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "x",
            "operator": "+",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 1,
        "source": "myArray"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "e",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "e",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 1
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "e",
      "value": {
        "type": "IndexExpression",
        "line": 1,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myFunction",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "myFunction",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          }
        ],
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "myFunction",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          }
        ],
        "line": 1
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "firstChar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstChar",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 1
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "firstChar",
      "value": {
        "type": "IndexExpression",
        "line": 1,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "4",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "3",
            "line": 1
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 1
          },
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "4",
          "operator": "+",
          "right": "2"
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "line": 1,
          "left": "3",
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:56:24.233Z",
      "description": "Set variable result to (4 + 2) * (3 - 1)."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        "operator": "+",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "operator": "*",
          "right": {
            "type": "Expression",
            "left": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 1
            },
            "operator": "+",
            "right": {
              "type": "NumberLiteral",
              "value": "4",
              "line": 1
            },
            "line": 1
          },
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": "1",
        "operator": "+",
        "right": {
          "type": "Expression",
          "line": 1,
          "left": "2",
          "operator": "*",
          "right": {
            "type": "Expression",
            "line": 1,
            "left": "3",
            "operator": "+",
            "right": "4"
          }
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.235Z",
      "description": "Set variable result to 1 + (2 * (3 + 4))."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "Expression",
            "left": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 1
            },
            "operator": "*",
            "right": {
              "type": "NumberLiteral",
              "value": "2",
              "line": 1
            },
            "line": 1
          },
          "line": 1
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "2",
          "operator": "+",
          "right": {
            "type": "Expression",
            "line": 1,
            "left": "3",
            "operator": "*",
            "right": "2"
          }
        },
        "operator": "-",
        "right": "5"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.236Z",
      "description": "Set variable result to (2 + (3 * 2)) - 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "3",
            "line": 1
          },
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "5",
          "operator": "+",
          "right": "3"
        },
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 16,
      "timestamp": "2024-09-14T09:56:24.237Z",
      "description": "Set variable result to (5 + 3) * 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "logMessage",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "message",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "message",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "logMessage",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "String",
    "value": "Test message",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "logMessage",
      "params": [
        "message"
      ],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "message",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "logMessage",
        "args": [
          {
            "type": "StringLiteral",
            "value": "Test message",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "logMessage",
      "params": [
        "message"
      ],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": "message",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "logMessage",
        "args": [
          {
            "type": "StringLiteral",
            "value": "Test message",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "addNumbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "addNumbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "addNumbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "sum",
      "value": {
        "type": "FunctionCall",
        "name": "addNumbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T09:56:24.243Z",
      "description": "Defined function addNumbers with parameters a, b."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "addNumbers",
      "arguments": [
        5,
        10
      ],
      "timestamp": "2024-09-14T09:56:24.244Z",
      "description": "Called function addNumbers with arguments 5,10."
    },
    {
      "line": 2,
      "operation": "return",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.244Z",
      "description": "Returned 15."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.244Z",
      "description": "Set variable sum to function return value 15."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "multiplyNumbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num1",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "multiplyNumbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "6",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "num1",
              "line": 2
            },
            "operator": "*",
            "right": {
              "type": "Identifier",
              "value": "num2",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "multiplyNumbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "num1",
            "operator": "*",
            "right": "num2"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "FunctionCall",
      "line": 4,
      "name": "multiplyNumbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        }
      ],
      "callLine": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "timestamp": "2024-09-14T09:56:24.245Z",
      "description": "Defined function multiplyNumbers with parameters num1, num2."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "multiplyNumbers",
      "arguments": [
        5,
        6
      ],
      "timestamp": "2024-09-14T09:56:24.245Z",
      "description": "Called function multiplyNumbers with arguments 5,6."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": 30,
      "timestamp": "2024-09-14T09:56:24.245Z",
      "description": "Printed 30."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "greetUser",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, user!",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "greetUser",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "greetUser",
      "params": [],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Hello, user!",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "greetUser",
      "args": [],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "greetUser",
      "params": [],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": "Hello, user!",
          "line": 2
        }
      ]
    },
    {
      "type": "FunctionCall",
      "line": 4,
      "name": "greetUser",
      "args": [],
      "callLine": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "greetUser",
      "params": [],
      "timestamp": "2024-09-14T09:56:24.247Z",
      "description": "Defined function greetUser with no parameters."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "greetUser",
      "arguments": [],
      "timestamp": "2024-09-14T09:56:24.247Z",
      "description": "Called function greetUser with no arguments."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Hello, user!",
      "timestamp": "2024-09-14T09:56:24.247Z",
      "description": "Printed Hello, user!."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myArray",
            "line": 2
          },
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myArray"
        },
        "operator": "-",
        "right": "1"
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40
      ],
      "timestamp": "2024-09-14T09:56:24.248Z",
      "description": "Created array myArray with values [10,20,30,40]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 3,
      "secondPosition": 0,
      "varName": "myArray",
      "description": "Swapped values in position 3 and 0 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.248Z"
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        40,
        20,
        30,
        10
      ],
      "timestamp": "2024-09-14T09:56:24.248Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "35",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "each",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "35",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "myArray",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "35",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "myArray",
      "line": 3,
      "endLine": 4,
      "body": [
        {
          "type": "PrintStatement",
          "value": "num",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        15,
        25,
        35
      ],
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Created array myArray with values [5,15,25,35]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 3 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.250Z"
    },
    {
      "line": 3,
      "operation": "for_each",
      "condition": "num in myArray",
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "for each loop with condition num in myArray."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 35
      },
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Set variable num to myArray[0]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 35,
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 15
      },
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Set variable num to myArray[1]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 15,
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 25
      },
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Set variable num to myArray[2]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 25,
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 5
      },
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Set variable num to myArray[3]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "Checked if num in myArray."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.250Z",
      "description": "End of for each loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:24.251Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.251Z"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "4",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:24.252Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 4,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 4 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.252Z"
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        50,
        20,
        30,
        40,
        10
      ],
      "timestamp": "2024-09-14T09:56:24.252Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:24.254Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T09:56:24.254Z"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "each",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "total",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "total",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "num",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "total",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "total",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2,
      "unInitialised": false
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "line": 3,
      "endLine": 4,
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "total",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "total",
            "operator": "+",
            "right": "num"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "total",
      "line": 6
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "Set variable total to 0."
    },
    {
      "line": 2,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "Created array nums with values [1,2,3]."
    },
    {
      "line": 3,
      "operation": "for_each",
      "condition": "num in nums",
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "for each loop with condition num in nums."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 0,
        "result": 1
      },
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "Set variable num to nums[0]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 1,
        "result": 2
      },
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "Set variable num to nums[1]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 2,
        "result": 3
      },
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "Set variable num to nums[2]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "Checked if num in nums."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "End of for each loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "total",
      "literal": 6,
      "timestamp": "2024-09-14T09:56:24.256Z",
      "description": "Printed total."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 2
            },
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 3
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "temp",
          "varType": null,
          "value": {
            "type": "IndexExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 3
            },
            "index": {
              "type": "Identifier",
              "value": "i",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "temp",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "Expression",
          "line": 3,
          "left": {
            "type": "LengthExpression",
            "line": 2,
            "source": "myArray"
          },
          "operator": "-",
          "right": "1"
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "temp",
          "value": {
            "type": "IndexExpression",
            "line": 3,
            "source": "myArray",
            "index": "i"
          }
        },
        {
          "type": "PrintStatement",
          "value": "temp",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 4",
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "loop from_to loop with condition i <= 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Set variable temp to myArray[0]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 10,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 20
      },
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Set variable temp to myArray[1]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 20,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 30
      },
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Set variable temp to myArray[2]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 30,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 40
      },
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Set variable temp to myArray[3]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 40,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 4,
        "result": 50
      },
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Set variable temp to myArray[4]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 50,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.258Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "/",
    "line": 2
  },
  {
    "type": "Number",
    "value": "4",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "r",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Number",
    "value": "3",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 2
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 3
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 3
          },
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "q",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "r",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": {
          "type": "Expression",
          "line": 3,
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T09:56:24.260Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T09:56:24.260Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-14T09:56:24.260Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "x",
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T09:56:24.263Z",
      "description": "Defined function add_numbers with parameters a, b."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "add_numbers",
      "arguments": [
        5,
        10
      ],
      "timestamp": "2024-09-14T09:56:24.263Z",
      "description": "Called function add_numbers with arguments 5,10."
    },
    {
      "line": 2,
      "operation": "return",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.263Z",
      "description": "Returned 15."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.263Z",
      "description": "Set variable x to function return value 15."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T09:56:24.264Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "size",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "hello",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 3
  },
  {
    "type": "Number",
    "value": "1",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "String",
    "value": "world",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 4
  },
  {
    "type": "String",
    "value": "!",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 4
  },
  {
    "type": "Number",
    "value": "2",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 5
  },
  {
    "type": "Number",
    "value": "0",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Number",
    "value": "0",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "line": 1,
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "line": 3,
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "line": 4,
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "line": 5,
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings",
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "line": 7,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 7,
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-14T09:56:24.265Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-14T09:56:24.265Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-14T09:56:24.265Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-14T09:56:24.265Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-14T09:56:24.266Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-14T09:56:24.266Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-14T09:56:24.266Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 2
  },
  {
    "type": "Number",
    "value": "30",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 3
  },
  {
    "type": "Number",
    "value": "4",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 4
  },
  {
    "type": "Number",
    "value": "2",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Number",
    "value": "50",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "totalLength",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 2
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 6
        },
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 2,
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 2
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "line": 3,
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "line": 4,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "line": 6,
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "line": 6,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-14T09:56:24.268Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-14T09:56:24.268Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-14T09:56:24.268Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-14T09:56:24.268Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-14T09:56:24.268Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.268Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "String",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "c",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "d",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "e",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "z",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-14T09:56:24.270Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-14T09:56:24.270Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "stringValue",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "stringValue"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      }
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 1
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "line": 1,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 1
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:24.275Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-14T09:56:24.275Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "200",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "300",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-14T09:56:24.276Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-14T09:56:24.276Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T09:56:24.277Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-14T09:56:24.277Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-14T09:56:24.278Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-14T09:56:24.278Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "String",
    "value": "hi",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "hello",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-14T09:56:24.279Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.279Z",
      "description": "Set variable len to 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-14T09:56:24.280Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:24.280Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-14T09:56:24.281Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T09:56:24.281Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-14T09:56:24.282Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.283Z",
      "description": "Set variable len to 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "size",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "line": 1,
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-14T09:56:24.283Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.284Z",
      "description": "Set variable len to 10."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "65",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Senior",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "20% on all items",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Gold",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 6
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 6
  },
  {
    "type": "Number",
    "value": "40",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Adult",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 8
  },
  {
    "type": "String",
    "value": "10% on select items",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "Silver",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 10
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 10
  },
  {
    "type": "Number",
    "value": "18",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 11
  },
  {
    "type": "String",
    "value": "Young Adult",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 12
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 12
  },
  {
    "type": "String",
    "value": "5% on books",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 13
  },
  {
    "type": "String",
    "value": "Bronze",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 15
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 15
  },
  {
    "type": "String",
    "value": "Child",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 16
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 16
  },
  {
    "type": "String",
    "value": "No discount",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 17
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 17
  },
  {
    "type": "String",
    "value": "None",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 18
  },
  {
    "type": "Identifier",
    "value": "note",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 18
  },
  {
    "type": "String",
    "value": "Parental supervision required",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 19
  },
  {
    "type": "Identifier",
    "value": "activity",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 19
  },
  {
    "type": "String",
    "value": "Eligible for children's events",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 20
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 20
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40",
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 8,
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 9,
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18",
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 11,
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 12,
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 13,
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 15,
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 16,
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 17,
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 18,
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 19,
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.286Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.286Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.286Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.286Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-14T09:56:24.286Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-14T09:56:24.286Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-14T09:56:24.286Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-14T09:56:24.286Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-14T09:56:24.286Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.286Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "30",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Hot",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "Turn on AC",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 5
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 5
  },
  {
    "type": "Number",
    "value": "20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 6
  },
  {
    "type": "String",
    "value": "Warm",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Open windows",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 8
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 8
  },
  {
    "type": "Number",
    "value": "10",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "Cool",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 10
  },
  {
    "type": "String",
    "value": "Do nothing",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 12
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 12
  },
  {
    "type": "String",
    "value": "Cold",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 13
  },
  {
    "type": "String",
    "value": "Turn on heater",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 14
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20",
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10",
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 9,
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 10,
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 12,
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 13,
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.288Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.288Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.288Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.288Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-14T09:56:24.288Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-14T09:56:24.288Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.288Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "65",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "90",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "grade",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "A",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "80",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "grade",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "B",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-14T09:56:24.289Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.289Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.289Z",
      "description": "Checked if score > 80."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.289Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "50",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 50",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "High range",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 5
  },
  {
    "type": "Number",
    "value": "30",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 6
  },
  {
    "type": "String",
    "value": "Greater than 30 but less than or equal to 50",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Mid range",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "30 or less",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 10
  },
  {
    "type": "String",
    "value": "Low range",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "note",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 11
  },
  {
    "type": "String",
    "value": "Consideration needed",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 12
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30",
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 9,
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 10,
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 11,
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T09:56:24.291Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.291Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.291Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-14T09:56:24.291Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-14T09:56:24.291Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-14T09:56:24.291Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.291Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Less than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.292Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.292Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-14T09:56:24.292Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.292Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 3
  },
  {
    "type": "Number",
    "value": "20",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "range",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "Between 10 and 20",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 3,
          "endLine": 3,
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20",
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 4,
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.294Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.294Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.294Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-14T09:56:24.294Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.294Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.294Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "value",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "value",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "10 or less",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.295Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.295Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-14T09:56:24.295Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.295Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "20",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 20",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "15",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Greater than 15 but less than or equal to 20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 6
  },
  {
    "type": "Number",
    "value": "10",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Greater than 10 but less than or equal to 15",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "10 or less",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10",
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 7,
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 9,
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.296Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.296Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.296Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.296Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-14T09:56:24.296Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.296Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "15",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 15",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Greater than 5 but less than or equal to 15",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "5 or less",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.297Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.297Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.297Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-14T09:56:24.297Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.297Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.299Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T09:56:24.299Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "index",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "characterAtIndex",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "index",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "line": 3,
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.300Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.300Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T09:56:24.300Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lastCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 2
            },
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": {
          "type": "Expression",
          "line": 2,
          "left": {
            "type": "LengthExpression",
            "line": 2,
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.302Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-14T09:56:24.302Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "emptyString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "emptyIndex",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "emptyString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-14T09:56:24.306Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-14T09:56:24.307Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.308Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T09:56:24.308Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Test String",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "String is long enough",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "String is too short",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 2
          },
          "line": 2
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myString"
        },
        "operator": ">",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-14T09:56:24.309Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.309Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-14T09:56:24.309Z",
      "description": "Printed String is long enough."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.309Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "lengthOfUndefined",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "undefinedVariable",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "line": 1,
        "source": "undefinedVariable"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "halfLength",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "/",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 2
          },
          "line": 2
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.312Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-14T09:56:24.312Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.313Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-14T09:56:24.313Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "abc",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-14T09:56:24.314Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.314Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:24.314Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "13",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.315Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-14T09:56:24.315Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.315Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.316Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-14T09:56:24.316Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-14T09:56:24.316Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "ten",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "String",
    "value": "five",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": {
          "type": "Expression",
          "line": 2,
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-14T09:56:24.322Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-14T09:56:24.322Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-14T09:56:24.322Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.323Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-14T09:56:24.323Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-14T09:56:24.323Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "startIndex",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "7",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "endIndex",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 3
  },
  {
    "type": "Number",
    "value": "12",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "startIndex",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "endIndex",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 4
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 4,
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 5
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.324Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T09:56:24.324Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:56:24.324Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-14T09:56:24.325Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-14T09:56:24.325Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "100",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 3
  },
  {
    "type": "Number",
    "value": "42",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 4
  },
  {
    "type": "Number",
    "value": "0",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 13
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 5
        },
        "line": 5
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 6
          },
          "line": 6
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 8
          },
          "line": 8
        }
      ],
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 13
      },
      "line": 13
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 4
      }
    },
    {
      "type": "IfStatement",
      "line": 5,
      "endLine": 5,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y",
        "line": 5
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 6,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 6
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "line": 8,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 8
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "line": 10,
      "endLine": 10,
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max",
        "line": 10
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 11,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 11
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max",
      "line": 13
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.326Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T09:56:24.326Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-14T09:56:24.326Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.326Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.326Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T09:56:24.326Z",
      "description": "Set variable max to 100."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.326Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.326Z",
      "description": "Checked if z > max."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.326Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-14T09:56:24.326Z",
      "description": "Printed max."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "7",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "12",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.329Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-14T09:56:24.329Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-14T09:56:24.329Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "PrintStatement",
      "value": "x",
      "line": 2
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.330Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-14T09:56:24.330Z",
      "description": "Printed x."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Both are false",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "At least one is true",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "line": 3,
            "operator": "not",
            "argument": "q"
          }
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.332Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:24.332Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.332Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-14T09:56:24.332Z",
      "description": "Printed At least one is true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.332Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "20",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "x is between y and 20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 8
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "equal",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Number",
    "value": "25",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "z is 25",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 8
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 9
        },
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 10
          },
          "line": 10
        }
      ],
      "alternate": null,
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "line": 8,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 9,
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "line": 9,
      "endLine": 9,
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25",
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25",
          "line": 10
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.335Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.336Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.336Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.336Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-14T09:56:24.336Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.336Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.336Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T09:56:24.336Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.336Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-14T09:56:24.336Z",
      "description": "Printed z is 25."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.336Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "20",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "25",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is less than 25",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "String",
    "value": "This is a normal statement",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "equal",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Number",
    "value": "20",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "y is equal to 20",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 8
      },
      "line": 8
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 9
        },
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 10
          },
          "line": 10
        }
      ],
      "alternate": null,
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement",
      "line": 8
    },
    {
      "type": "IfStatement",
      "line": 9,
      "endLine": 9,
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20",
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20",
          "line": 10
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.339Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:56:24.339Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.339Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.339Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-14T09:56:24.339Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.339Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.339Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-14T09:56:24.339Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.339Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-14T09:56:24.339Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.339Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is greater than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 7
  },
  {
    "type": "String",
    "value": "y is 10 or less",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "x is 10 or less",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 10
          },
          "line": 10
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10",
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less",
              "line": 7
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less",
          "line": 10
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:56:24.340Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.340Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.340Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.340Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-14T09:56:24.340Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.340Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.340Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 5
  },
  {
    "type": "Number",
    "value": "3",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "x is greater than 3 but not greater than 10",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "String",
    "value": "x is 3 or less",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "line": 5,
          "endLine": 5,
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3",
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10",
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less",
              "line": 8
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.342Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.342Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.342Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-14T09:56:24.342Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.342Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.342Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "15",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "b is greater than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 6
  },
  {
    "type": "Number",
    "value": "20",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 7
  },
  {
    "type": "String",
    "value": "b is less than 20",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 9
  },
  {
    "type": "String",
    "value": "b is 20 or more",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 12
  },
  {
    "type": "String",
    "value": "b is 10 or less",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 14
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 5
              },
              "line": 5
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 12
              },
              "line": 12
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10",
              "line": 5
            },
            {
              "type": "IfStatement",
              "line": 6,
              "endLine": 6,
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20",
                "line": 6
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20",
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more",
                  "line": 9
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less",
              "line": 12
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.344Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.344Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.344Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.344Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-14T09:56:24.344Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.344Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-14T09:56:24.344Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.344Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.344Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.344Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "30",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "x is between 10 and 30",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "x is 30 or more",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 6
              },
              "line": 6
            }
          ],
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 3,
          "endLine": 3,
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30",
            "line": 3
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30",
              "line": 4
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more",
              "line": 6
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:56:24.346Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.346Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.346Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-14T09:56:24.346Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.346Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.346Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "firstName",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "John",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lastName",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "Doe",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "fullName",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "firstName",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "String",
    "value": " ",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "lastName",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "fullName",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 3
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 3
          },
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "fullName",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": {
          "type": "Expression",
          "line": 3,
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName",
      "line": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-14T09:56:24.347Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-14T09:56:24.347Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-14T09:56:24.347Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-14T09:56:24.347Z",
      "description": "Printed fullName."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "isTrue is false",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false",
          "line": 3
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.350Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.350Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.350Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "boolean",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "Boolean is true",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "Boolean is false",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": "boolean",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.351Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.351Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-14T09:56:24.351Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.351Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "or",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Complex Condition Met",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "Complex Condition Not Met",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "line": 3,
            "operator": "not",
            "argument": "isTrue"
          }
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.353Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:24.353Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.353Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-14T09:56:24.353Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.353Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Correct",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "Incorrect",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "line": 3,
          "operator": "not",
          "argument": "isFalse"
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.355Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:24.355Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.355Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-14T09:56:24.355Z",
      "description": "Printed Correct."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.355Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.356Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:24.356Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Both are booleans",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans",
          "line": 4
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T09:56:24.358Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T09:56:24.358Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.358Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.358Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar",
      "line": 2
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.360Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-14T09:56:24.360Z",
      "description": "Printed myVar."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">=",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 5
  },
  {
    "type": "Number",
    "value": "2",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 7
  },
  {
    "type": "Number",
    "value": "3",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 9
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 5
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 5
                },
                "line": 6
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 7
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 7
                },
                "line": 8
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "LoopUntil",
      "line": 2,
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10",
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "x",
              "value": {
                "type": "Expression",
                "line": 6,
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "x",
              "value": {
                "type": "Expression",
                "line": 8,
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "Checked if x < 10."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.362Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 3
  },
  {
    "type": "Number",
    "value": "0",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 6
  },
  {
    "type": "Number",
    "value": "1",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 8
      },
      "line": 8
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 3
      },
      "line": 3,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "y",
          "value": {
            "type": "Expression",
            "line": 6,
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 6,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 7,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y",
      "line": 8
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.364Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.365Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.365Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.365Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-14T09:56:24.365Z",
      "description": "Printed y."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 7
  },
  {
    "type": "Number",
    "value": "2",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 7
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        "line": 8
      },
      "line": 7
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 8
      },
      "line": 8
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "sum",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum",
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "line": 7,
      "name": "sum",
      "value": {
        "type": "Expression",
        "line": 8,
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum",
      "line": 8
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-14T09:56:24.366Z",
      "description": "Printed sum."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "sum",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:24.370Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.371Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:24.371Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.371Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.371Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "line": 1,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.372Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": "==",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "LoopUntil",
      "line": 2,
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0",
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-14T09:56:24.374Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "Checked if x != 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.376Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 2
      },
      "line": 2,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.378Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T09:56:24.378Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.378Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:24.378Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.379Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "line": 1,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.381Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "x is 5 or less",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Number",
    "value": "1",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "2",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "3",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "4",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "5",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "6",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "7",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "8",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "9",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "letters",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 8
  },
  {
    "type": "String",
    "value": "a",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "b",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "c",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "d",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "e",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "f",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "g",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 9
  },
  {
    "type": "Number",
    "value": "5",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Number",
    "value": "4",
    "line": 9
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 7
        }
      ],
      "unInitialised": false,
      "line": 7
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 9
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less",
          "line": 5
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 7
        }
      ],
      "line": 7,
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 8
        }
      ],
      "line": 8,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 9,
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 9
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.384Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.384Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-14T09:56:24.384Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.384Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-14T09:56:24.384Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-14T09:56:24.384Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-14T09:56:24.384Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.385Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 3
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.386Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.386Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-14T09:56:24.386Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.386Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-14T09:56:24.388Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 4
  },
  {
    "type": "Number",
    "value": "3",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 4
  },
  {
    "type": "Number",
    "value": "3",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 2,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "line": 3,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "line": 4,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-14T09:56:24.389Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-14T09:56:24.389Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-14T09:56:24.389Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-14T09:56:24.389Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is less than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.390Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.390Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.390Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.390Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-14T09:56:24.390Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.390Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T09:56:24.390Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "Expression",
        "line": 2,
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.392Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T09:56:24.392Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "c",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "c",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.394Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.394Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.394Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T09:56:24.396Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T09:56:24.396Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-14T09:56:24.396Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T09:56:24.397Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.397Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-14T09:56:24.397Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 2
      },
      "line": 2,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T09:56:24.398Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T09:56:24.399Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T09:56:24.399Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T09:56:24.399Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "String",
    "value": "hello",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 1
      },
      "line": 1
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "string",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "boolean",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "boolean",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "boolean",
    "line": 1
  },
  {
    "type": "String",
    "value": "5",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "boolean",
      "value": {
        "type": "StringLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "string",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "hello",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "string",
      "value": "hello",
      "timestamp": "2024-09-14T10:01:54.786Z",
      "description": "Set variable x to hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:01:54.789Z",
      "description": "Set variable x to 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "hello",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "string",
      "value": "hello",
      "timestamp": "2024-09-14T10:02:05.351Z",
      "description": "Set variable x to hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:02:05.351Z",
      "description": "Set variable x to 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "hello",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "5",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "x",
      "value": {
        "type": "StringLiteral",
        "value": "5",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "string",
      "value": "hello",
      "timestamp": "2024-09-14T10:02:16.345Z",
      "description": "Set variable x to hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "string",
      "value": "5",
      "timestamp": "2024-09-14T10:02:16.346Z",
      "description": "Set variable x to 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "hello",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Number",
    "value": "10",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "x",
      "value": {
        "type": "StringLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "x",
        "operator": "+",
        "right": "10"
      },
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "string",
      "value": "hello",
      "timestamp": "2024-09-14T10:02:33.966Z",
      "description": "Set variable x to hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "string",
      "value": "5",
      "timestamp": "2024-09-14T10:02:33.966Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "510",
      "timestamp": "2024-09-14T10:02:33.966Z",
      "description": "Printed 510."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "c",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 1
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "b",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 1
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "c",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-09-14T10:09:25.836Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:25.836Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-09-14T10:09:25.837Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "getGreeting",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "name",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, ",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "name",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "getGreeting",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 5
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 5
  },
  {
    "type": "Number",
    "value": "5",
    "line": 5
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "getGreeting",
      "params": [
        "name"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "StringLiteral",
              "value": "Hello, ",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "name",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "getGreeting",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 5
          }
        ],
        "line": 5
      },
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "Identifier",
        "value": "result",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "getGreeting",
      "params": [
        "name"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "Hello, ",
            "operator": "+",
            "right": "name"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 5,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "getGreeting",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 5
          }
        ],
        "line": 5
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 6,
      "name": "total",
      "value": {
        "type": "Identifier",
        "value": "result",
        "line": 6
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "getGreeting",
      "params": [
        "name"
      ],
      "timestamp": "2024-09-14T10:09:25.839Z",
      "description": "Defined function getGreeting with parameters name."
    },
    {
      "line": 5,
      "operation": "function_call",
      "varName": "getGreeting",
      "arguments": [
        5
      ],
      "timestamp": "2024-09-14T10:09:25.839Z",
      "description": "Called function getGreeting with arguments 5."
    },
    {
      "line": 2,
      "operation": "return",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T10:09:25.839Z",
      "description": "Returned Hello, 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T10:09:25.839Z",
      "description": "Set variable result to function return value Hello, 5."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "total",
      "type": "string",
      "value": "Hello, 5",
      "timestamp": "2024-09-14T10:09:25.839Z",
      "description": "Set variable total to Hello, 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Number",
    "value": "20",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 4
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "result",
          "line": 4
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": "5",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "total",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": "result",
        "operator": "+",
        "right": "20"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 2,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T10:09:25.841Z",
      "description": "Set variable result to 5 + 10."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 35,
      "timestamp": "2024-09-14T10:09:25.841Z",
      "description": "Set variable total to result + 20."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 3
  },
  {
    "type": "Number",
    "value": "0",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 3
  },
  {
    "type": "Number",
    "value": "1",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 5
  },
  {
    "type": "Number",
    "value": "0",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 5
  },
  {
    "type": "Number",
    "value": "2",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "current",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 6
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 6
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "next",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 7
  },
  {
    "type": "Number",
    "value": "1",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "current",
    "line": 8
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "next",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 9
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 9
  },
  {
    "type": "Number",
    "value": "1",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 13
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 14
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 14
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 14
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 14
  },
  {
    "type": "Number",
    "value": "1",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 17
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 17
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "swapped",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 3
            },
            "line": 3
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 3
          },
          "line": 4
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "swapped",
          "varType": null,
          "value": {
            "type": "BooleanLiteral",
            "value": false,
            "line": 4
          },
          "line": 4
        },
        {
          "type": "LoopFromTo",
          "loopVariable": "j",
          "range": {
            "start": {
              "type": "NumberLiteral",
              "value": "0",
              "line": 5
            },
            "end": {
              "type": "Expression",
              "left": {
                "type": "Expression",
                "left": {
                  "type": "LengthExpression",
                  "source": {
                    "type": "Identifier",
                    "value": "myArray",
                    "line": 5
                  },
                  "line": 5
                },
                "operator": "-",
                "right": {
                  "type": "Identifier",
                  "value": "i",
                  "line": 5
                },
                "line": 5
              },
              "operator": "-",
              "right": {
                "type": "NumberLiteral",
                "value": "2",
                "line": 5
              },
              "line": 6
            }
          },
          "body": [
            {
              "type": "VariableDeclaration",
              "varName": "current",
              "varType": null,
              "value": {
                "type": "IndexExpression",
                "source": {
                  "type": "Identifier",
                  "value": "myArray",
                  "line": 6
                },
                "index": {
                  "type": "Identifier",
                  "value": "j",
                  "line": 6
                },
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "next",
              "varType": null,
              "value": {
                "type": "IndexExpression",
                "source": {
                  "type": "Identifier",
                  "value": "myArray",
                  "line": 7
                },
                "index": {
                  "type": "Expression",
                  "left": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 7
                  },
                  "operator": "+",
                  "right": {
                    "type": "NumberLiteral",
                    "value": "1",
                    "line": 7
                  },
                  "line": 7
                },
                "line": 7
              },
              "line": 7
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "current",
                "operator": ">",
                "right": {
                  "type": "Identifier",
                  "value": "next",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "SwapOperation",
                  "varName": "myArray",
                  "firstPosition": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 9
                  },
                  "secondPosition": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "j",
                      "line": 9
                    },
                    "operator": "+",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "1",
                      "line": 9
                    },
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "swapped",
                  "varType": null,
                  "value": {
                    "type": "BooleanLiteral",
                    "value": true,
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": null,
              "line": 8
            }
          ],
          "line": 5
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "swapped",
              "line": 13
            },
            "line": 13
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "i",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "LengthExpression",
                  "source": {
                    "type": "Identifier",
                    "value": "myArray",
                    "line": 14
                  },
                  "line": 14
                },
                "operator": "-",
                "right": {
                  "type": "NumberLiteral",
                  "value": "1",
                  "line": 14
                },
                "line": 15
              },
              "line": 14
            }
          ],
          "alternate": null,
          "line": 13
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 17
      },
      "line": 17
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "swapped",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "line": 3,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "end": {
          "type": "Expression",
          "line": 4,
          "left": {
            "type": "LengthExpression",
            "line": 3,
            "source": "myArray"
          },
          "operator": "-",
          "right": "1"
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "swapped",
          "value": {
            "type": "BooleanLiteral",
            "value": false,
            "line": 4
          }
        },
        {
          "type": "LoopFromTo",
          "line": 5,
          "loopVariable": "j",
          "range": {
            "start": {
              "type": "NumberLiteral",
              "value": "0",
              "line": 5
            },
            "end": {
              "type": "Expression",
              "line": 6,
              "left": {
                "type": "Expression",
                "line": 5,
                "left": {
                  "type": "LengthExpression",
                  "line": 5,
                  "source": "myArray"
                },
                "operator": "-",
                "right": "i"
              },
              "operator": "-",
              "right": "2"
            }
          },
          "body": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "current",
              "value": {
                "type": "IndexExpression",
                "line": 6,
                "source": "myArray",
                "index": "j"
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "next",
              "value": {
                "type": "IndexExpression",
                "line": 7,
                "source": "myArray",
                "index": {
                  "type": "Expression",
                  "line": 7,
                  "left": "j",
                  "operator": "+",
                  "right": "1"
                }
              }
            },
            {
              "type": "IfStatement",
              "line": 8,
              "endLine": 8,
              "condition": {
                "left": "current",
                "operator": ">",
                "right": "next",
                "line": 8
              },
              "consequent": [
                {
                  "type": "SwapOperation",
                  "line": 9,
                  "varName": "myArray",
                  "firstPosition": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 9
                  },
                  "secondPosition": {
                    "type": "Expression",
                    "line": 9,
                    "left": "j",
                    "operator": "+",
                    "right": "1"
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 10,
                  "name": "swapped",
                  "value": {
                    "type": "BooleanLiteral",
                    "value": true,
                    "line": 10
                  }
                }
              ],
              "alternate": null
            }
          ]
        },
        {
          "type": "IfStatement",
          "line": 13,
          "endLine": 13,
          "condition": {
            "left": null,
            "operator": "not",
            "right": "swapped",
            "line": 13
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 14,
              "name": "i",
              "value": {
                "type": "Expression",
                "line": 15,
                "left": {
                  "type": "LengthExpression",
                  "line": 14,
                  "source": "myArray"
                },
                "operator": "-",
                "right": "1"
              }
            }
          ],
          "alternate": null
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 17
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        50,
        40,
        30,
        20,
        10
      ],
      "timestamp": "2024-09-14T10:09:25.845Z",
      "description": "Created array myArray with values [50,40,30,20,10]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:25.845Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:25.845Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 3,
      "operation": "loop_from_to",
      "condition": "i <= 4",
      "timestamp": "2024-09-14T10:09:25.845Z",
      "description": "loop from_to loop with condition i <= 4."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.845Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:09:25.845Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:25.845Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 3",
      "timestamp": "2024-09-14T10:09:25.845Z",
      "description": "loop from_to loop with condition j <= 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.845Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 50
      },
      "timestamp": "2024-09-14T10:09:25.846Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 40
      },
      "timestamp": "2024-09-14T10:09:25.846Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.846Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.846Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:25.846Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.846Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:25.846Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.846Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 50
      },
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 30
      },
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.847Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 50
      },
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Set variable current to myArray[2]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 20
      },
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Set variable next to myArray[3]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 2,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 2 and 3 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.847Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Set variable j to 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 50
      },
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Set variable current to myArray[3]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 4,
        "result": 10
      },
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Set variable next to myArray[4]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.847Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 3,
      "secondPosition": 4,
      "varName": "myArray",
      "description": "Swapped values in position 3 and 4 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.848Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable j to 4."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 3",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 2",
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "loop from_to loop with condition j <= 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 40
      },
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 30
      },
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.848Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 40
      },
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 20
      },
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.848Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 40
      },
      "timestamp": "2024-09-14T10:09:25.848Z",
      "description": "Set variable current to myArray[2]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 10
      },
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "Set variable next to myArray[3]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 2,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 2 and 3 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.849Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "Set variable j to 3."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 2",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 1",
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "loop from_to loop with condition j <= 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 30
      },
      "timestamp": "2024-09-14T10:09:25.849Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 20
      },
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.850Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 30
      },
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 10
      },
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.850Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 1",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.850Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:09:25.851Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:25.851Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= 0",
      "timestamp": "2024-09-14T10:09:25.851Z",
      "description": "loop from_to loop with condition j <= 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.851Z",
      "description": "Checked if j <= 0."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 20
      },
      "timestamp": "2024-09-14T10:09:25.851Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 10
      },
      "timestamp": "2024-09-14T10:09:25.851Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.851Z",
      "description": "Checked if current > next."
    },
    {
      "line": 9,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.851Z"
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:25.851Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.851Z",
      "description": "End of if statement."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= 0",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "Checked if j <= 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 5,
      "operation": "loop_from_to",
      "condition": "j <= -1",
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "loop from_to loop with condition j <= -1."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "j <= -1",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "Checked if j <= -1."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "End of if statement."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "i <= 4",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 17,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T10:09:25.852Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": "x",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "if",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 2
          },
          "line": 2
        }
      ],
      "alternate": null,
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "IfStatement",
      "line": 1,
      "endLine": 1,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "5",
        "line": 1
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 2
        }
      ],
      "alternate": null
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        "line": 1
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopUntil",
      "line": 1,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "10",
        "line": 1
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 2,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "x",
            "operator": "+",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 1,
        "source": "myArray"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "e",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "e",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 1
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "e",
      "value": {
        "type": "IndexExpression",
        "line": 1,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myFunction",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "myFunction",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          }
        ],
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "myFunction",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          }
        ],
        "line": 1
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "firstChar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstChar",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 1
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "firstChar",
      "value": {
        "type": "IndexExpression",
        "line": 1,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "4",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "3",
            "line": 1
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 1
          },
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "4",
          "operator": "+",
          "right": "2"
        },
        "operator": "*",
        "right": {
          "type": "Expression",
          "line": 1,
          "left": "3",
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T10:09:25.868Z",
      "description": "Set variable result to (4 + 2) * (3 - 1)."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        "operator": "+",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "operator": "*",
          "right": {
            "type": "Expression",
            "left": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 1
            },
            "operator": "+",
            "right": {
              "type": "NumberLiteral",
              "value": "4",
              "line": 1
            },
            "line": 1
          },
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": "1",
        "operator": "+",
        "right": {
          "type": "Expression",
          "line": 1,
          "left": "2",
          "operator": "*",
          "right": {
            "type": "Expression",
            "line": 1,
            "left": "3",
            "operator": "+",
            "right": "4"
          }
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T10:09:25.869Z",
      "description": "Set variable result to 1 + (2 * (3 + 4))."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "2",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "Expression",
            "left": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 1
            },
            "operator": "*",
            "right": {
              "type": "NumberLiteral",
              "value": "2",
              "line": 1
            },
            "line": 1
          },
          "line": 1
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "2",
          "operator": "+",
          "right": {
            "type": "Expression",
            "line": 1,
            "left": "3",
            "operator": "*",
            "right": "2"
          }
        },
        "operator": "-",
        "right": "5"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:25.870Z",
      "description": "Set variable result to (2 + (3 * 2)) - 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 1
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "3",
            "line": 1
          },
          "line": 1
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "result",
      "value": {
        "type": "Expression",
        "line": 1,
        "left": {
          "type": "Expression",
          "line": 1,
          "left": "5",
          "operator": "+",
          "right": "3"
        },
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "result",
      "type": "number",
      "value": 16,
      "timestamp": "2024-09-14T10:09:25.872Z",
      "description": "Set variable result to (5 + 3) * 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "logMessage",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "message",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "message",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "logMessage",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "String",
    "value": "Test message",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "logMessage",
      "params": [
        "message"
      ],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "message",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "result",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "logMessage",
        "args": [
          {
            "type": "StringLiteral",
            "value": "Test message",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "logMessage",
      "params": [
        "message"
      ],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": "message",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "result",
      "value": {
        "type": "FunctionCall",
        "name": "logMessage",
        "args": [
          {
            "type": "StringLiteral",
            "value": "Test message",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "addNumbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "addNumbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "addNumbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "sum",
      "value": {
        "type": "FunctionCall",
        "name": "addNumbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "addNumbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T10:09:25.875Z",
      "description": "Defined function addNumbers with parameters a, b."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "addNumbers",
      "arguments": [
        5,
        10
      ],
      "timestamp": "2024-09-14T10:09:25.875Z",
      "description": "Called function addNumbers with arguments 5,10."
    },
    {
      "line": 2,
      "operation": "return",
      "value": 15,
      "timestamp": "2024-09-14T10:09:25.875Z",
      "description": "Returned 15."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T10:09:25.875Z",
      "description": "Set variable sum to function return value 15."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "multiplyNumbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num1",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "multiplyNumbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "6",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "num1",
              "line": 2
            },
            "operator": "*",
            "right": {
              "type": "Identifier",
              "value": "num2",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "multiplyNumbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        }
      ],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "num1",
            "operator": "*",
            "right": "num2"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "FunctionCall",
      "line": 4,
      "name": "multiplyNumbers",
      "args": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        }
      ],
      "callLine": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "multiplyNumbers",
      "params": [
        "num1",
        "num2"
      ],
      "timestamp": "2024-09-14T10:09:25.876Z",
      "description": "Defined function multiplyNumbers with parameters num1, num2."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "multiplyNumbers",
      "arguments": [
        5,
        6
      ],
      "timestamp": "2024-09-14T10:09:25.876Z",
      "description": "Called function multiplyNumbers with arguments 5,6."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": 30,
      "timestamp": "2024-09-14T10:09:25.876Z",
      "description": "Printed 30."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "greetUser",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, user!",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "greetUser",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "greetUser",
      "params": [],
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Hello, user!",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "FunctionCall",
      "name": "greetUser",
      "args": [],
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "greetUser",
      "params": [],
      "line": 1,
      "body": [
        {
          "type": "PrintStatement",
          "value": "Hello, user!",
          "line": 2
        }
      ]
    },
    {
      "type": "FunctionCall",
      "line": 4,
      "name": "greetUser",
      "args": [],
      "callLine": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "greetUser",
      "params": [],
      "timestamp": "2024-09-14T10:09:25.877Z",
      "description": "Defined function greetUser with no parameters."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "greetUser",
      "arguments": [],
      "timestamp": "2024-09-14T10:09:25.877Z",
      "description": "Called function greetUser with no arguments."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Hello, user!",
      "timestamp": "2024-09-14T10:09:25.877Z",
      "description": "Printed Hello, user!."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myArray",
            "line": 2
          },
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myArray"
        },
        "operator": "-",
        "right": "1"
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40
      ],
      "timestamp": "2024-09-14T10:09:25.879Z",
      "description": "Created array myArray with values [10,20,30,40]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 3,
      "secondPosition": 0,
      "varName": "myArray",
      "description": "Swapped values in position 3 and 0 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.879Z"
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        40,
        20,
        30,
        10
      ],
      "timestamp": "2024-09-14T10:09:25.879Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "35",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "each",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "35",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "myArray",
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "num",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "35",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "myArray",
      "line": 3,
      "endLine": 4,
      "body": [
        {
          "type": "PrintStatement",
          "value": "num",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        15,
        25,
        35
      ],
      "timestamp": "2024-09-14T10:09:25.880Z",
      "description": "Created array myArray with values [5,15,25,35]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 3 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.880Z"
    },
    {
      "line": 3,
      "operation": "for_each",
      "condition": "num in myArray",
      "timestamp": "2024-09-14T10:09:25.880Z",
      "description": "for each loop with condition num in myArray."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.880Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 35
      },
      "timestamp": "2024-09-14T10:09:25.880Z",
      "description": "Set variable num to myArray[0]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 35,
      "timestamp": "2024-09-14T10:09:25.880Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.881Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 15
      },
      "timestamp": "2024-09-14T10:09:25.881Z",
      "description": "Set variable num to myArray[1]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 15,
      "timestamp": "2024-09-14T10:09:25.881Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.881Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 25
      },
      "timestamp": "2024-09-14T10:09:25.881Z",
      "description": "Set variable num to myArray[2]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 25,
      "timestamp": "2024-09-14T10:09:25.881Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.881Z",
      "description": "Checked if index < 4"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 5
      },
      "timestamp": "2024-09-14T10:09:25.881Z",
      "description": "Set variable num to myArray[3]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "num",
      "literal": 5,
      "timestamp": "2024-09-14T10:09:25.881Z",
      "description": "Printed num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 4",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.881Z",
      "description": "Checked if num in myArray."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:25.881Z",
      "description": "End of for each loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T10:09:25.882Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.882Z"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "4",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T10:09:25.883Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 4,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 4 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.883Z"
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        50,
        20,
        30,
        40,
        10
      ],
      "timestamp": "2024-09-14T10:09:25.883Z",
      "description": "Printed myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "SwapOperation",
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "SwapOperation",
      "line": 2,
      "varName": "myArray",
      "firstPosition": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "secondPosition": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T10:09:25.886Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T10:09:25.886Z"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "each",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "for",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "total",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "total",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "unInitialised": false,
      "line": 2
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "total",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "total",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "num",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "total",
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "total",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ],
      "line": 2,
      "unInitialised": false
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "line": 3,
      "endLine": 4,
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "total",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "total",
            "operator": "+",
            "right": "num"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "total",
      "line": 6
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:25.887Z",
      "description": "Set variable total to 0."
    },
    {
      "line": 2,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-14T10:09:25.887Z",
      "description": "Created array nums with values [1,2,3]."
    },
    {
      "line": 3,
      "operation": "for_each",
      "condition": "num in nums",
      "timestamp": "2024-09-14T10:09:25.887Z",
      "description": "for each loop with condition num in nums."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.887Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 0,
        "result": 1
      },
      "timestamp": "2024-09-14T10:09:25.887Z",
      "description": "Set variable num to nums[0]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:25.888Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.888Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 1,
        "result": 2
      },
      "timestamp": "2024-09-14T10:09:25.888Z",
      "description": "Set variable num to nums[1]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:25.888Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.888Z",
      "description": "Checked if index < 3"
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "nums",
        "index": 2,
        "result": 3
      },
      "timestamp": "2024-09-14T10:09:25.888Z",
      "description": "Set variable num to nums[2]."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "total",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T10:09:25.888Z",
      "description": "Set variable total to total + num."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "index < 3",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.888Z",
      "description": "Checked if num in nums."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:25.888Z",
      "description": "End of for each loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "total",
      "literal": 6,
      "timestamp": "2024-09-14T10:09:25.888Z",
      "description": "Printed total."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 2
            },
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 3
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "temp",
          "varType": null,
          "value": {
            "type": "IndexExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 3
            },
            "index": {
              "type": "Identifier",
              "value": "i",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "temp",
            "line": 4
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "Expression",
          "line": 3,
          "left": {
            "type": "LengthExpression",
            "line": 2,
            "source": "myArray"
          },
          "operator": "-",
          "right": "1"
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "temp",
          "value": {
            "type": "IndexExpression",
            "line": 3,
            "source": "myArray",
            "index": "i"
          }
        },
        {
          "type": "PrintStatement",
          "value": "temp",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T10:09:25.889Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:25.889Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 4",
      "timestamp": "2024-09-14T10:09:25.889Z",
      "description": "loop from_to loop with condition i <= 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.889Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T10:09:25.889Z",
      "description": "Set variable temp to myArray[0]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 10,
      "timestamp": "2024-09-14T10:09:25.889Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:25.889Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.889Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 20
      },
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Set variable temp to myArray[1]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 20,
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 30
      },
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Set variable temp to myArray[2]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 30,
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 40
      },
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Set variable temp to myArray[3]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 40,
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 4,
        "result": 50
      },
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Set variable temp to myArray[4]."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "temp",
      "literal": 50,
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Printed temp."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 4",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:25.890Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "/",
    "line": 2
  },
  {
    "type": "Number",
    "value": "4",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "r",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Number",
    "value": "3",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "p",
          "line": 2
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "r",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "q",
            "line": 3
          },
          "operator": "+",
          "right": {
            "type": "NumberLiteral",
            "value": "5",
            "line": 3
          },
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "q",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "r",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": {
          "type": "Expression",
          "line": 3,
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T10:09:25.892Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T10:09:25.892Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-09-14T10:09:25.892Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "call",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "x",
      "value": {
        "type": "FunctionCall",
        "name": "add_numbers",
        "args": [
          {
            "type": "NumberLiteral",
            "value": "5",
            "line": 4
          },
          {
            "type": "NumberLiteral",
            "value": "10",
            "line": 4
          }
        ],
        "line": 4
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T10:09:25.896Z",
      "description": "Defined function add_numbers with parameters a, b."
    },
    {
      "line": 4,
      "operation": "function_call",
      "varName": "add_numbers",
      "arguments": [
        5,
        10
      ],
      "timestamp": "2024-09-14T10:09:25.896Z",
      "description": "Called function add_numbers with arguments 5,10."
    },
    {
      "line": 2,
      "operation": "return",
      "value": 15,
      "timestamp": "2024-09-14T10:09:25.896Z",
      "description": "Returned 15."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T10:09:25.896Z",
      "description": "Set variable x to function return value 15."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "define",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "add_numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "parameters",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "return",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "function",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "a",
              "line": 2
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "b",
              "line": 2
            },
            "line": 3
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "line": 1,
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "line": 3,
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "timestamp": "2024-09-14T10:09:25.897Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "size",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "hello",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 3
  },
  {
    "type": "Number",
    "value": "1",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "String",
    "value": "world",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 4
  },
  {
    "type": "String",
    "value": "!",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 4
  },
  {
    "type": "Number",
    "value": "2",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 5
  },
  {
    "type": "Number",
    "value": "0",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "myStrings",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Number",
    "value": "0",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "arrType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "hello",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArraySetValue",
      "varName": "myStrings",
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "world",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "RemoveOperation",
      "varName": "myStrings",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myStrings",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myStrings",
          "line": 7
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 7
        },
        "line": 7
      },
      "line": 7
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myStrings",
      "dsType": "string",
      "values": [
        "",
        "",
        ""
      ],
      "line": 1,
      "unInitialised": true
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "setValue": "hello"
    },
    {
      "type": "ArraySetValue",
      "line": 3,
      "varName": "myStrings",
      "index": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "setValue": "world"
    },
    {
      "type": "ArrayInsertion",
      "line": 4,
      "varName": "myStrings",
      "value": {
        "type": "StringLiteral",
        "value": "!",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "RemoveOperation",
      "line": 5,
      "varName": "myStrings",
      "positionToRemove": "0"
    },
    {
      "type": "PrintStatement",
      "value": "myStrings",
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "line": 7,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 7,
        "source": "myStrings",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myStrings",
      "value": [
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-14T10:09:25.901Z",
      "description": "Created array myStrings with size 3."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 0,
      "setValue": "hello",
      "timestamp": "2024-09-14T10:09:25.901Z",
      "description": "Set myStrings[0] to hello."
    },
    {
      "line": 3,
      "operation": "set_array",
      "varName": "myStrings",
      "index": 1,
      "setValue": "world",
      "timestamp": "2024-09-14T10:09:25.901Z",
      "description": "Set myStrings[1] to world."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "myStrings",
      "value": "!",
      "position": 2,
      "timestamp": "2024-09-14T10:09:25.901Z",
      "description": "Added ! to array myStrings at position 2."
    },
    {
      "line": 5,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myStrings",
      "positionToRemove": 0,
      "timestamp": "2024-09-14T10:09:25.901Z",
      "description": "Removed value at position 0 in array myStrings."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "myStrings",
      "literal": [
        "hello",
        "world",
        "!"
      ],
      "timestamp": "2024-09-14T10:09:25.901Z",
      "description": "Printed myStrings."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "firstElement",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myStrings",
        "index": 0,
        "result": "hello"
      },
      "timestamp": "2024-09-14T10:09:25.902Z",
      "description": "Set variable firstElement to myStrings[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 2
  },
  {
    "type": "Number",
    "value": "30",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 3
  },
  {
    "type": "Number",
    "value": "4",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 4
  },
  {
    "type": "Number",
    "value": "2",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Number",
    "value": "50",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "totalLength",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArrayInsertion",
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 2
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "50",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 5
      },
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "varName": "totalLength",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 6
        },
        "line": 6
      },
      "line": 6
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "15",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "25",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 2,
      "varName": "myArray",
      "value": {
        "type": "NumberLiteral",
        "value": "30",
        "line": 2
      },
      "position": "3"
    },
    {
      "type": "RemoveOperation",
      "line": 3,
      "varName": "myArray",
      "positionToRemove": "4"
    },
    {
      "type": "ArraySetValue",
      "line": 4,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "setValue": "50"
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 5
    },
    {
      "type": "VariableDeclaration",
      "line": 6,
      "name": "totalLength",
      "value": {
        "type": "LengthExpression",
        "line": 6,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        5,
        10,
        15,
        20,
        25
      ],
      "timestamp": "2024-09-14T10:09:25.903Z",
      "description": "Created array myArray with values [5,10,15,20,25]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "myArray",
      "value": 30,
      "position": 3,
      "timestamp": "2024-09-14T10:09:25.903Z",
      "description": "Added 30 to array myArray at position 3."
    },
    {
      "line": 3,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 4,
      "timestamp": "2024-09-14T10:09:25.903Z",
      "description": "Removed value at position 4 in array myArray."
    },
    {
      "line": 4,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 50,
      "timestamp": "2024-09-14T10:09:25.903Z",
      "description": "Set myArray[2] to 50."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        5,
        10,
        50,
        30,
        25
      ],
      "timestamp": "2024-09-14T10:09:25.903Z",
      "description": "Printed myArray."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "totalLength",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:25.903Z",
      "description": "Set variable totalLength to 5."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "1"
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "String",
    "value": "a",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "b",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "c",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "d",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "e",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "z",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "z",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "z"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e"
      ],
      "timestamp": "2024-09-14T10:09:25.906Z",
      "description": "Created array myArray with values [a,b,c,d,e]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": "z",
      "timestamp": "2024-09-14T10:09:25.906Z",
      "description": "Set myArray[2] to z."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "stringValue",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "StringLiteral",
        "value": "stringValue",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "stringValue"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myVar",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myVar",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 1
      }
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myVar",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 1
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArraySetValue",
      "line": 1,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 1
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "set_array",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "25",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArraySetValue",
      "varName": "myArray",
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "newValue": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArraySetValue",
      "line": 2,
      "varName": "myArray",
      "index": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "setValue": "25"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T10:09:25.911Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "set_array",
      "varName": "myArray",
      "index": 2,
      "setValue": 25,
      "timestamp": "2024-09-14T10:09:25.911Z",
      "description": "Set myArray[2] to 25."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "100",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "200",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "300",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "100",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "200",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "300",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        100,
        200,
        300
      ],
      "timestamp": "2024-09-14T10:09:25.912Z",
      "description": "Created array myArray with values [100,200,300]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-14T10:09:25.912Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "0"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T10:09:25.913Z",
      "description": "Created array myArray with values [10,20,30,40,50]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 0,
      "timestamp": "2024-09-14T10:09:25.913Z",
      "description": "Removed value at position 0 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "4",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "remove",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "element",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "RemoveOperation",
      "varName": "myArray",
      "positionToRemove": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "RemoveOperation",
      "line": 2,
      "varName": "myArray",
      "positionToRemove": "2"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-09-14T10:09:25.915Z",
      "description": "Created array myArray with values [1,2,3,4,5]."
    },
    {
      "line": 2,
      "operation": "remove",
      "dataStructure": "array",
      "varName": "myArray",
      "positionToRemove": 2,
      "timestamp": "2024-09-14T10:09:25.915Z",
      "description": "Removed value at position 2 in array myArray."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "String",
    "value": "hi",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "String",
    "value": "hello",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hi",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "hello",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "hi",
        "hello"
      ],
      "timestamp": "2024-09-14T10:09:25.916Z",
      "description": "Created array myArray with values [hi,hello]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:25.916Z",
      "description": "Set variable len to 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-14T10:09:25.917Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T10:09:25.918Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstElement",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstElement",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstElement",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myArray",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        10,
        20,
        30
      ],
      "timestamp": "2024-09-14T10:09:25.919Z",
      "description": "Created array myArray with values [10,20,30]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstElement",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 10
      },
      "timestamp": "2024-09-14T10:09:25.919Z",
      "description": "Set variable firstElement to myArray[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "2",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-09-14T10:09:25.920Z",
      "description": "Created array myArray with values [1,2,3]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:25.920Z",
      "description": "Set variable len to 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "size",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "len",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "unInitialised": true,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "len",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myArray",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "string",
      "values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "line": 1,
      "unInitialised": true
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "len",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myArray"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "myArray",
      "value": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "timestamp": "2024-09-14T10:09:25.921Z",
      "description": "Created array myArray with size 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "len",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:25.922Z",
      "description": "Set variable len to 10."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "65",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Senior",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "20% on all items",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Gold",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 6
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 6
  },
  {
    "type": "Number",
    "value": "40",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Adult",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 8
  },
  {
    "type": "String",
    "value": "10% on select items",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "Silver",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "age",
    "line": 10
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 10
  },
  {
    "type": "Number",
    "value": "18",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 11
  },
  {
    "type": "String",
    "value": "Young Adult",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 12
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 12
  },
  {
    "type": "String",
    "value": "5% on books",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 13
  },
  {
    "type": "String",
    "value": "Bronze",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 15
  },
  {
    "type": "Identifier",
    "value": "status",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 15
  },
  {
    "type": "String",
    "value": "Child",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 16
  },
  {
    "type": "Identifier",
    "value": "discount",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 16
  },
  {
    "type": "String",
    "value": "No discount",
    "line": 16
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 17
  },
  {
    "type": "Identifier",
    "value": "membership",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 17
  },
  {
    "type": "String",
    "value": "None",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 18
  },
  {
    "type": "Identifier",
    "value": "note",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 18
  },
  {
    "type": "String",
    "value": "Parental supervision required",
    "line": 18
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 19
  },
  {
    "type": "Identifier",
    "value": "activity",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 19
  },
  {
    "type": "String",
    "value": "Eligible for children's events",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 20
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 20
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "age",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "age",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "65",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "status",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "discount",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "membership",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          },
          "line": 5
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "age",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "40",
              "line": 6
            },
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "status",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              },
              "line": 7
            },
            {
              "type": "VariableDeclaration",
              "varName": "discount",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              },
              "line": 8
            },
            {
              "type": "VariableDeclaration",
              "varName": "membership",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              },
              "line": 9
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "age",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "18",
                  "line": 10
                },
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  },
                  "line": 11
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "status",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  },
                  "line": 15
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "discount",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  },
                  "line": 16
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "membership",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  },
                  "line": 17
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "note",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  },
                  "line": 18
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "activity",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  },
                  "line": 19
                }
              ],
              "line": 20
            }
          ],
          "line": 20
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "age",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "age",
        "operator": ">",
        "right": "65",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "status",
          "value": {
            "type": "StringLiteral",
            "value": "Senior",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "discount",
          "value": {
            "type": "StringLiteral",
            "value": "20% on all items",
            "line": 4
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "membership",
          "value": {
            "type": "StringLiteral",
            "value": "Gold",
            "line": 5
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 6,
          "endLine": 20,
          "otherwiseLine": 20,
          "condition": {
            "left": "age",
            "operator": ">",
            "right": "40",
            "line": 6
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "status",
              "value": {
                "type": "StringLiteral",
                "value": "Adult",
                "line": 7
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 8,
              "name": "discount",
              "value": {
                "type": "StringLiteral",
                "value": "10% on select items",
                "line": 8
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 9,
              "name": "membership",
              "value": {
                "type": "StringLiteral",
                "value": "Silver",
                "line": 9
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 10,
              "endLine": 20,
              "otherwiseLine": 15,
              "condition": {
                "left": "age",
                "operator": ">",
                "right": "18",
                "line": 10
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 11,
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Young Adult",
                    "line": 11
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 12,
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "5% on books",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 13,
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Bronze",
                    "line": 13
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 15,
                  "name": "status",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Child",
                    "line": 15
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 16,
                  "name": "discount",
                  "value": {
                    "type": "StringLiteral",
                    "value": "No discount",
                    "line": 16
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 17,
                  "name": "membership",
                  "value": {
                    "type": "StringLiteral",
                    "value": "None",
                    "line": 17
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 18,
                  "name": "note",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Parental supervision required",
                    "line": 18
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 19,
                  "name": "activity",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Eligible for children's events",
                    "line": 19
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "age",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:25.923Z",
      "description": "Set variable age to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "age > 65",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.924Z",
      "description": "Checked if age > 65."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "age > 40",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.924Z",
      "description": "Checked if age > 40."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "age > 18",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.924Z",
      "description": "Checked if age > 18."
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "status",
      "type": "string",
      "value": "Child",
      "timestamp": "2024-09-14T10:09:25.924Z",
      "description": "Set variable status to Child."
    },
    {
      "line": 16,
      "operation": "set",
      "varName": "discount",
      "type": "string",
      "value": "No discount",
      "timestamp": "2024-09-14T10:09:25.924Z",
      "description": "Set variable discount to No discount."
    },
    {
      "line": 17,
      "operation": "set",
      "varName": "membership",
      "type": "string",
      "value": "None",
      "timestamp": "2024-09-14T10:09:25.924Z",
      "description": "Set variable membership to None."
    },
    {
      "line": 18,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Parental supervision required",
      "timestamp": "2024-09-14T10:09:25.924Z",
      "description": "Set variable note to Parental supervision required."
    },
    {
      "line": 19,
      "operation": "set",
      "varName": "activity",
      "type": "string",
      "value": "Eligible for children's events",
      "timestamp": "2024-09-14T10:09:25.924Z",
      "description": "Set variable activity to Eligible for children's events."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.924Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "30",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Hot",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "Turn on AC",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 5
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 5
  },
  {
    "type": "Number",
    "value": "20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 6
  },
  {
    "type": "String",
    "value": "Warm",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Open windows",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "temp",
    "line": 8
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 8
  },
  {
    "type": "Number",
    "value": "10",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "Cool",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 10
  },
  {
    "type": "String",
    "value": "Do nothing",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 12
  },
  {
    "type": "Identifier",
    "value": "state",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 12
  },
  {
    "type": "String",
    "value": "Cold",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "action",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 13
  },
  {
    "type": "String",
    "value": "Turn on heater",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 14
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "temp",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "temp",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "30",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "state",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "action",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "temp",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "state",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "action",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "temp",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 8
                },
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  },
                  "line": 9
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  },
                  "line": 10
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "state",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  },
                  "line": 12
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "action",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  },
                  "line": 13
                }
              ],
              "line": 14
            }
          ],
          "line": 14
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "temp",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "temp",
        "operator": ">",
        "right": "30",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "state",
          "value": {
            "type": "StringLiteral",
            "value": "Hot",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "action",
          "value": {
            "type": "StringLiteral",
            "value": "Turn on AC",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 14,
          "otherwiseLine": 14,
          "condition": {
            "left": "temp",
            "operator": ">",
            "right": "20",
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "state",
              "value": {
                "type": "StringLiteral",
                "value": "Warm",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "action",
              "value": {
                "type": "StringLiteral",
                "value": "Open windows",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 8,
              "endLine": 14,
              "otherwiseLine": 12,
              "condition": {
                "left": "temp",
                "operator": ">",
                "right": "10",
                "line": 8
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 9,
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cool",
                    "line": 9
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 10,
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Do nothing",
                    "line": 10
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 12,
                  "name": "state",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Cold",
                    "line": 12
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 13,
                  "name": "action",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Turn on heater",
                    "line": 13
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "temp",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T10:09:25.925Z",
      "description": "Set variable temp to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "temp > 30",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.925Z",
      "description": "Checked if temp > 30."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "temp > 20",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.925Z",
      "description": "Checked if temp > 20."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "temp > 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.925Z",
      "description": "Checked if temp > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "state",
      "type": "string",
      "value": "Cool",
      "timestamp": "2024-09-14T10:09:25.925Z",
      "description": "Set variable state to Cool."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "action",
      "type": "string",
      "value": "Do nothing",
      "timestamp": "2024-09-14T10:09:25.926Z",
      "description": "Set variable action to Do nothing."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.926Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "65",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "90",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "grade",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "A",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "score",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "80",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "grade",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "B",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "score",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "score",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "90",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "grade",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "score",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "80",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "grade",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 6
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "score",
      "value": {
        "type": "NumberLiteral",
        "value": "65",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "score",
        "operator": ">",
        "right": "90",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "grade",
          "value": {
            "type": "StringLiteral",
            "value": "A",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 6,
          "otherwiseLine": null,
          "condition": {
            "left": "score",
            "operator": ">",
            "right": "80",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "grade",
              "value": {
                "type": "StringLiteral",
                "value": "B",
                "line": 5
              }
            }
          ],
          "alternate": null
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "score",
      "type": "number",
      "value": 65,
      "timestamp": "2024-09-14T10:09:25.927Z",
      "description": "Set variable score to 65."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "score > 90",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.927Z",
      "description": "Checked if score > 90."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "score > 80",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.927Z",
      "description": "Checked if score > 80."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.927Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "25",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "50",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 50",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "High range",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 5
  },
  {
    "type": "Number",
    "value": "30",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 6
  },
  {
    "type": "String",
    "value": "Greater than 30 but less than or equal to 50",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Mid range",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "30 or less",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "detail",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 10
  },
  {
    "type": "String",
    "value": "Low range",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "note",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 11
  },
  {
    "type": "String",
    "value": "Consideration needed",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 12
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "50",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "detail",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              },
              "line": 6
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              },
              "line": 7
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "response",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              },
              "line": 9
            },
            {
              "type": "VariableDeclaration",
              "varName": "detail",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "note",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              },
              "line": 11
            }
          ],
          "line": 12
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "25",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "50",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 50",
            "line": 3
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "detail",
          "value": {
            "type": "StringLiteral",
            "value": "High range",
            "line": 4
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 5,
          "endLine": 12,
          "otherwiseLine": 9,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "30",
            "line": 5
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 6,
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 30 but less than or equal to 50",
                "line": 6
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Mid range",
                "line": 7
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 9,
              "name": "response",
              "value": {
                "type": "StringLiteral",
                "value": "30 or less",
                "line": 9
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 10,
              "name": "detail",
              "value": {
                "type": "StringLiteral",
                "value": "Low range",
                "line": 10
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 11,
              "name": "note",
              "value": {
                "type": "StringLiteral",
                "value": "Consideration needed",
                "line": 11
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T10:09:25.928Z",
      "description": "Set variable x to 25."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 50",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.928Z",
      "description": "Checked if x > 50."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 30",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.928Z",
      "description": "Checked if x > 30."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "30 or less",
      "timestamp": "2024-09-14T10:09:25.928Z",
      "description": "Set variable response to 30 or less."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "detail",
      "type": "string",
      "value": "Low range",
      "timestamp": "2024-09-14T10:09:25.928Z",
      "description": "Set variable detail to Low range."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "note",
      "type": "string",
      "value": "Consideration needed",
      "timestamp": "2024-09-14T10:09:25.928Z",
      "description": "Set variable note to Consideration needed."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.928Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "result",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Less than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "<",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "result",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "<",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "result",
          "value": {
            "type": "StringLiteral",
            "value": "Less than 10",
            "line": 3
          }
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:25.929Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.929Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "result",
      "type": "string",
      "value": "Less than 10",
      "timestamp": "2024-09-14T10:09:25.929Z",
      "description": "Set variable result to Less than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.929Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "num",
    "line": 3
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 3
  },
  {
    "type": "Number",
    "value": "20",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "range",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 4
  },
  {
    "type": "String",
    "value": "Between 10 and 20",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "num",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "num",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "num",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "range",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": null,
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "num",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "num",
        "operator": ">",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 3,
          "endLine": 3,
          "condition": {
            "left": "num",
            "operator": "<",
            "right": "20",
            "line": 3
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 4,
              "name": "range",
              "value": {
                "type": "StringLiteral",
                "value": "Between 10 and 20",
                "line": 4
              }
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "num",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T10:09:25.931Z",
      "description": "Set variable num to 15."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "num > 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.931Z",
      "description": "Checked if num > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "num < 20",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.931Z",
      "description": "Checked if num < 20."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "range",
      "type": "string",
      "value": "Between 10 and 20",
      "timestamp": "2024-09-14T10:09:25.931Z",
      "description": "Set variable range to Between 10 and 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.931Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.931Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "value",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "value",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "response",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "10 or less",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "value",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "value",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "response",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "value",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "value",
        "operator": ">",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 10",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "response",
          "value": {
            "type": "StringLiteral",
            "value": "10 or less",
            "line": 5
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "value",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:25.932Z",
      "description": "Set variable value to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "value > 10",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.932Z",
      "description": "Checked if value > 10."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "response",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-14T10:09:25.932Z",
      "description": "Set variable response to 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.932Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "20",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 20",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "15",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Greater than 15 but less than or equal to 20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 6
  },
  {
    "type": "Number",
    "value": "10",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "Greater than 10 but less than or equal to 15",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 9
  },
  {
    "type": "String",
    "value": "10 or less",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "15",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "condition": {
                "type": "Expression",
                "left": "x",
                "operator": ">",
                "right": {
                  "type": "NumberLiteral",
                  "value": "10",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "varName": "y",
                  "varType": "string",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 10
            }
          ],
          "line": 10
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "20",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 20",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 10,
          "otherwiseLine": 10,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "15",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 15 but less than or equal to 20",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "OtherwiseIfStatement",
              "line": 6,
              "endLine": 10,
              "otherwiseLine": 9,
              "condition": {
                "left": "x",
                "operator": ">",
                "right": "10",
                "line": 6
              },
              "consequent": [
                {
                  "type": "VariableDeclaration",
                  "line": 7,
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "Greater than 10 but less than or equal to 15",
                    "line": 7
                  }
                }
              ],
              "alternate": [
                {
                  "type": "VariableDeclaration",
                  "line": 9,
                  "name": "y",
                  "value": {
                    "type": "StringLiteral",
                    "value": "10 or less",
                    "line": 9
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:25.934Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 20",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.934Z",
      "description": "Checked if x > 20."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.934Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.934Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "10 or less",
      "timestamp": "2024-09-14T10:09:25.934Z",
      "description": "Set variable y to 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.934Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "15",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 3
  },
  {
    "type": "String",
    "value": "Greater than 15",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwiseif",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 5
  },
  {
    "type": "String",
    "value": "Greater than 5 but less than or equal to 15",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 7
  },
  {
    "type": "String",
    "value": "5 or less",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "15",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": "string",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": ">",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "y",
              "varType": "string",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 8
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "15",
        "line": 2
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 3,
          "name": "y",
          "value": {
            "type": "StringLiteral",
            "value": "Greater than 15",
            "line": 3
          }
        }
      ],
      "alternate": [
        {
          "type": "OtherwiseIfStatement",
          "line": 4,
          "endLine": 8,
          "otherwiseLine": 7,
          "condition": {
            "left": "x",
            "operator": ">",
            "right": "5",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "Greater than 5 but less than or equal to 15",
                "line": 5
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "y",
              "value": {
                "type": "StringLiteral",
                "value": "5 or less",
                "line": 7
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:25.935Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 15",
      "result": false,
      "timestamp": "2024-09-14T10:09:25.935Z",
      "description": "Checked if x > 15."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.935Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "Greater than 5 but less than or equal to 15",
      "timestamp": "2024-09-14T10:09:25.935Z",
      "description": "Set variable y to Greater than 5 but less than or equal to 15."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.935Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T10:09:25.937Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T10:09:25.937Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "index",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "characterAtIndex",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "index",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "index",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "characterAtIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 3
        },
        "index": {
          "type": "Identifier",
          "value": "index",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "line": 3,
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:25.938Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T10:09:25.939Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T10:09:25.939Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lastCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myString",
              "line": 2
            },
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": {
          "type": "Expression",
          "line": 2,
          "left": {
            "type": "LengthExpression",
            "line": 2,
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T10:09:25.940Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-09-14T10:09:25.940Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "emptyString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "emptyIndex",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "emptyString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "emptyString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "emptyIndex",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "emptyString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-09-14T10:09:25.942Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-09-14T10:09:25.942Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "firstCharacter",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "character",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "firstCharacter",
      "varType": null,
      "value": {
        "type": "IndexExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "index": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "line": 2,
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T10:09:25.943Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-09-14T10:09:25.943Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Test String",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "String is long enough",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "String is too short",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 2
          },
          "line": 2
        },
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is long enough",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "String is too short",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myString"
        },
        "operator": ">",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-09-14T10:09:25.945Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:25.945Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-09-14T10:09:25.945Z",
      "description": "Printed String is long enough."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:25.945Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "lengthOfUndefined",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "undefinedVariable",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfUndefined",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "undefinedVariable",
          "line": 1
        },
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "line": 1,
        "source": "undefinedVariable"
      }
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "halfLength",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "/",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "halfLength",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": {
            "type": "Identifier",
            "value": "myString",
            "line": 2
          },
          "line": 2
        },
        "operator": "/",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "line": 2,
        "left": {
          "type": "LengthExpression",
          "line": 2,
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T10:09:25.948Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-09-14T10:09:25.948Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T10:09:25.950Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-09-14T10:09:25.950Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "abc",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "lengthOfString",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lengthOfString",
      "varType": null,
      "value": {
        "type": "LengthExpression",
        "source": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "lengthOfString",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "line": 2,
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-09-14T10:09:25.951Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:25.952Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-09-14T10:09:25.952Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "13",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "13",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T10:09:26.007Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-09-14T10:09:26.007Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-09-14T10:09:26.007Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T10:09:26.009Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-09-14T10:09:26.009Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-09-14T10:09:26.009Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "ten",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "StringLiteral",
          "value": "ten",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "String",
    "value": "five",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "StringLiteral",
          "value": "five",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "2",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 2
          },
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": {
          "type": "Expression",
          "line": 2,
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-09-14T10:09:26.017Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-09-14T10:09:26.017Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-09-14T10:09:26.017Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T10:09:26.018Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-09-14T10:09:26.018Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-09-14T10:09:26.018Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "startIndex",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "7",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "endIndex",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 3
  },
  {
    "type": "Number",
    "value": "12",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "startIndex",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "endIndex",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "startIndex",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "endIndex",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 4
        },
        "start": {
          "type": "Identifier",
          "value": "startIndex",
          "line": 4
        },
        "end": {
          "type": "Identifier",
          "value": "endIndex",
          "line": 4
        },
        "line": 4
      },
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 5
      },
      "line": 5
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 4,
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 5
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T10:09:26.020Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T10:09:26.020Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T10:09:26.020Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-14T10:09:26.020Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-14T10:09:26.020Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "3",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "100",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 3
  },
  {
    "type": "Number",
    "value": "42",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 4
  },
  {
    "type": "Number",
    "value": "0",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "max",
    "line": 13
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "max",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 4
      },
      "line": 4
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 5
        },
        "line": 5
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 6
          },
          "line": 6
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 8
          },
          "line": 8
        }
      ],
      "line": 5
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "max",
          "line": 10
        },
        "line": 10
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "varName": "max",
          "varType": null,
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 11
          },
          "line": 11
        }
      ],
      "alternate": null,
      "line": 10
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "max",
        "line": 13
      },
      "line": 13
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 4,
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 4
      }
    },
    {
      "type": "IfStatement",
      "line": 5,
      "endLine": 5,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y",
        "line": 5
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 6,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 6
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "line": 8,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 8
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "line": 10,
      "endLine": 10,
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max",
        "line": 10
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "line": 11,
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 11
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max",
      "line": 13
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:26.021Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T10:09:26.021Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-09-14T10:09:26.021Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:26.021Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.021Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-09-14T10:09:26.022Z",
      "description": "Set variable max to 100."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.022Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.022Z",
      "description": "Checked if z > max."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.022Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-09-14T10:09:26.022Z",
      "description": "Printed max."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "substring",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myString",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "7",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "12",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "subStr",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myString",
      "varType": "string",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "subStr",
      "varType": null,
      "value": {
        "type": "SubstringExpression",
        "string": {
          "type": "Identifier",
          "value": "myString",
          "line": 2
        },
        "start": {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "12",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "subStr",
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "line": 2,
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr",
      "line": 3
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T10:09:26.028Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-09-14T10:09:26.028Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-09-14T10:09:26.028Z",
      "description": "Printed subStr."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "x",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "PrintStatement",
      "value": "x",
      "line": 2
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:26.031Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-14T10:09:26.031Z",
      "description": "Printed x."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "p",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "q",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Both are false",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "At least one is true",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "p",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "q",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "q",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are false",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "At least one is true",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "line": 3,
            "operator": "not",
            "argument": "q"
          }
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:26.035Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:09:26.035Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.035Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-09-14T10:09:26.035Z",
      "description": "Printed At least one is true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.035Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "15",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "20",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "x is between y and 20",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 8
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "equal",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Number",
    "value": "25",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "z is 25",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "20",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between y and 20",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 8
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 8
        },
        "line": 9
      },
      "line": 8
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "z",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "25",
          "line": 9
        },
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "z is 25",
            "line": 10
          },
          "line": 10
        }
      ],
      "alternate": null,
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "line": 8,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 9,
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "line": 9,
      "endLine": 9,
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25",
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25",
          "line": 10
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T10:09:26.038Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:26.038Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.038Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.038Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-09-14T10:09:26.038Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.038Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.038Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-09-14T10:09:26.038Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.038Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-09-14T10:09:26.038Z",
      "description": "Printed z is 25."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.038Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "20",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "25",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is less than 25",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "String",
    "value": "This is a normal statement",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "equal",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Number",
    "value": "20",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "y is equal to 20",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "25",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 25",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "StringLiteral",
        "value": "This is a normal statement",
        "line": 8
      },
      "line": 8
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "y",
        "operator": "equal",
        "right": {
          "type": "NumberLiteral",
          "value": "20",
          "line": 9
        },
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "y is equal to 20",
            "line": 10
          },
          "line": 10
        }
      ],
      "alternate": null,
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement",
      "line": 8
    },
    {
      "type": "IfStatement",
      "line": 9,
      "endLine": 9,
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20",
        "line": 9
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20",
          "line": 10
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:26.040Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T10:09:26.040Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.040Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.040Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-09-14T10:09:26.040Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.040Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.040Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-09-14T10:09:26.040Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.040Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-09-14T10:09:26.040Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.040Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is greater than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 7
  },
  {
    "type": "String",
    "value": "y is 10 or less",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 10
  },
  {
    "type": "String",
    "value": "x is 10 or less",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 11
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is greater than 10",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is 10 or less",
                "line": 7
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 10 or less",
            "line": 10
          },
          "line": 10
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10",
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less",
              "line": 7
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less",
          "line": 10
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T10:09:26.042Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.042Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.042Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.042Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-09-14T10:09:26.042Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.042Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.042Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 5
  },
  {
    "type": "Number",
    "value": "3",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "x is greater than 3 but not greater than 10",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "String",
    "value": "x is 3 or less",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 10",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "3",
              "line": 5
            },
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is greater than 3 but not greater than 10",
                "line": 6
              },
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 3 or less",
                "line": 8
              },
              "line": 8
            }
          ],
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "line": 5,
          "endLine": 5,
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3",
            "line": 5
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10",
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less",
              "line": 8
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.043Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.043Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.043Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-09-14T10:09:26.043Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.043Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.043Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "15",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "10",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "b is greater than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 6
  },
  {
    "type": "Number",
    "value": "20",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 7
  },
  {
    "type": "String",
    "value": "b is less than 20",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 9
  },
  {
    "type": "String",
    "value": "b is 20 or more",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 12
  },
  {
    "type": "String",
    "value": "b is 10 or less",
    "line": 12
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 14
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "a",
        "operator": "less",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "b",
            "operator": "greater",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is greater than 10",
                "line": 5
              },
              "line": 5
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "b",
                "operator": "less",
                "right": {
                  "type": "NumberLiteral",
                  "value": "20",
                  "line": 6
                },
                "line": 6
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is less than 20",
                    "line": 7
                  },
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": {
                    "type": "StringLiteral",
                    "value": "b is 20 or more",
                    "line": 9
                  },
                  "line": 9
                }
              ],
              "line": 6
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "b is 10 or less",
                "line": 12
              },
              "line": 12
            }
          ],
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10",
              "line": 5
            },
            {
              "type": "IfStatement",
              "line": 6,
              "endLine": 6,
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20",
                "line": 6
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20",
                  "line": 7
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more",
                  "line": 9
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less",
              "line": 12
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.046Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T10:09:26.046Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.046Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.046Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-09-14T10:09:26.046Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.046Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-09-14T10:09:26.046Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.046Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.046Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.046Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "30",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "x is between 10 and 30",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "x is 30 or more",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "30",
              "line": 3
            },
            "line": 3
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is between 10 and 30",
                "line": 4
              },
              "line": 4
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "x is 30 or more",
                "line": 6
              },
              "line": 6
            }
          ],
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10",
        "line": 2
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 3,
          "endLine": 3,
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30",
            "line": 3
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30",
              "line": 4
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more",
              "line": 6
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T10:09:26.048Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.048Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.048Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-09-14T10:09:26.048Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.048Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.048Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "firstName",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "John",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "lastName",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "String",
    "value": "Doe",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "fullName",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "firstName",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "String",
    "value": " ",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "lastName",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "fullName",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "firstName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "lastName",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "fullName",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": {
            "type": "Identifier",
            "value": "firstName",
            "line": 3
          },
          "operator": "+",
          "right": {
            "type": "StringLiteral",
            "value": " ",
            "line": 3
          },
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "lastName",
          "line": 3
        },
        "line": 4
      },
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "fullName",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "fullName",
      "value": {
        "type": "Expression",
        "line": 4,
        "left": {
          "type": "Expression",
          "line": 3,
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName",
      "line": 4
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-09-14T10:09:26.049Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-09-14T10:09:26.049Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-09-14T10:09:26.049Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-09-14T10:09:26.050Z",
      "description": "Printed fullName."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "isTrue is false",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": null,
        "operator": "not",
        "right": {
          "type": "Identifier",
          "value": "isTrue",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "isTrue is false",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false",
          "line": 3
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:26.051Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.051Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.051Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "boolean",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "Boolean is true",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "Boolean is false",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": "boolean",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is true",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Boolean is false",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:26.052Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.053Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-09-14T10:09:26.053Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.053Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "or",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": "(",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "Delimiter",
    "value": ")",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Complex Condition Met",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "Complex Condition Not Met",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "isTrue",
              "line": 3
            },
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Met",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Complex Condition Not Met",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "line": 3,
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "line": 3,
            "operator": "not",
            "argument": "isTrue"
          }
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:26.054Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:09:26.054Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.054Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-09-14T10:09:26.054Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.054Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Correct",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "String",
    "value": "Incorrect",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Expression",
          "left": null,
          "operator": "not",
          "right": {
            "type": "Identifier",
            "value": "isFalse",
            "line": 3
          },
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Correct",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Incorrect",
            "line": 6
          },
          "line": 6
        }
      ],
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "line": 3,
          "operator": "not",
          "argument": "isFalse"
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct",
          "line": 4
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect",
          "line": 6
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:26.057Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:09:26.057Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.057Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-09-14T10:09:26.057Z",
      "description": "Printed Correct."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.057Z",
      "description": "End of if statement."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:26.058Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:09:26.058Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isTrue",
    "line": 3
  },
  {
    "type": "LogicalOperator",
    "value": "and",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "isFalse",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "String",
    "value": "Both are booleans",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "isTrue",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "isFalse",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "Identifier",
          "value": "isFalse",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "Both are booleans",
            "line": 4
          },
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse",
        "line": 3
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans",
          "line": 4
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:09:26.059Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:09:26.059Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.059Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.059Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "String",
    "value": "Hello, World!",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "myVar",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "myVar",
      "varType": null,
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myVar",
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar",
      "line": 2
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-09-14T10:09:26.061Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-09-14T10:09:26.061Z",
      "description": "Printed myVar."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "1",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">=",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "ComparisonOperator",
    "value": "<",
    "line": 4
  },
  {
    "type": "Number",
    "value": "5",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 5
  },
  {
    "type": "Number",
    "value": "2",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 7
  },
  {
    "type": "Number",
    "value": "3",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 9
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">=",
        "right": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "x",
            "operator": "<",
            "right": {
              "type": "NumberLiteral",
              "value": "5",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 5
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "2",
                  "line": 5
                },
                "line": 6
              },
              "line": 5
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "varName": "x",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "Identifier",
                  "value": "x",
                  "line": 7
                },
                "operator": "+",
                "right": {
                  "type": "NumberLiteral",
                  "value": "3",
                  "line": 7
                },
                "line": 8
              },
              "line": 7
            }
          ],
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "LoopUntil",
      "line": 2,
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10",
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5",
            "line": 4
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 5,
              "name": "x",
              "value": {
                "type": "Expression",
                "line": 6,
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "line": 7,
              "name": "x",
              "value": {
                "type": "Expression",
                "line": 8,
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:26.064Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-09-14T10:09:26.064Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.064Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T10:09:26.064Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.064Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:26.064Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.064Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.064Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T10:09:26.064Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.064Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "Checked if x < 10."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:26.065Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 3
  },
  {
    "type": "Number",
    "value": "0",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 5
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 5
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 6
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 6
  },
  {
    "type": "Number",
    "value": "1",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 3
        },
        "line": 3
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 4
          },
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "varName": "y",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "y",
              "line": 5
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "x",
              "line": 5
            },
            "line": 6
          },
          "line": 5
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 6
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 6
            },
            "line": 7
          },
          "line": 6
        }
      ],
      "line": 3
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "y",
        "line": 8
      },
      "line": 8
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 3
      },
      "line": 3,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 4
        },
        {
          "type": "VariableDeclaration",
          "line": 5,
          "name": "y",
          "value": {
            "type": "Expression",
            "line": 6,
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "line": 6,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 7,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y",
      "line": 8
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.070Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:26.070Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T10:09:26.070Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.070Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T10:09:26.070Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.070Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T10:09:26.070Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.070Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T10:09:26.070Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T10:09:26.070Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:26.070Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.070Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T10:09:26.070Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T10:09:26.071Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:26.071Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.071Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T10:09:26.071Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-09-14T10:09:26.071Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:26.071Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.071Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T10:09:26.071Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T10:09:26.071Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:26.071Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.071Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:26.071Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-09-14T10:09:26.071Z",
      "description": "Printed y."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 7
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 7
  },
  {
    "type": "Number",
    "value": "2",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 8
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 6
      },
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "sum",
          "line": 7
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        "line": 8
      },
      "line": 7
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "sum",
        "line": 8
      },
      "line": 8
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "sum",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum",
      "line": 6
    },
    {
      "type": "VariableDeclaration",
      "line": 7,
      "name": "sum",
      "value": {
        "type": "Expression",
        "line": 8,
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum",
      "line": 8
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:26.074Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:26.074Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-09-14T10:09:26.074Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.074Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T10:09:26.074Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:26.074Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-09-14T10:09:26.075Z",
      "description": "Printed sum."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "sum",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "sum",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "sum",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "sum",
              "line": 4
            },
            "operator": "+",
            "right": {
              "type": "Identifier",
              "value": "i",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 1
      }
    },
    {
      "type": "LoopFromTo",
      "line": 2,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "sum",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:26.078Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "line": 1,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:26.080Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "until",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": "==",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "LoopUntil",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "==",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "LoopUntil",
      "line": 2,
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0",
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:26.082Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.083Z",
      "description": "Checked if x != 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:26.083Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 2
      },
      "line": 2,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:26.085Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Tokens: [
  {
    "type": "Keyword",
    "value": "loop",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "i",
            "line": 2
          },
          "line": 2
        }
      ],
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "line": 1,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        },
        "end": {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:26.087Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "otherwise",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "x is 5 or less",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 7
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 7
  },
  {
    "type": "Number",
    "value": "1",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "2",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "3",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "4",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "5",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "6",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "7",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "8",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 7
  },
  {
    "type": "Number",
    "value": "9",
    "line": 7
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "create",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "string",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "letters",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 8
  },
  {
    "type": "String",
    "value": "a",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "b",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "c",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "d",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "e",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "f",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 8
  },
  {
    "type": "String",
    "value": "g",
    "line": 8
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 9
  },
  {
    "type": "Number",
    "value": "5",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 9
  },
  {
    "type": "Identifier",
    "value": "nums",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 9
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 9
  },
  {
    "type": "Number",
    "value": "4",
    "line": 9
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": null,
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is 5 or less",
            "line": 5
          },
          "line": 5
        }
      ],
      "line": 2
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 7
        }
      ],
      "unInitialised": false,
      "line": 7
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "arrType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 8
        }
      ],
      "unInitialised": false,
      "line": 8
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 9
      },
      "position": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 9
      },
      "line": 9
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 3
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less",
          "line": 5
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 7
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 7
        }
      ],
      "line": 7,
      "unInitialised": false
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "dsType": "string",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 8
        }
      ],
      "line": 8,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 9,
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 9
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:26.091Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.091Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-14T10:09:26.091Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.091Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-09-14T10:09:26.091Z",
      "description": "Created array nums with values [1,2,3,4,5,6,7,8,9]."
    },
    {
      "line": 8,
      "operation": "create",
      "dataStructure": "array",
      "type": "string",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-09-14T10:09:26.091Z",
      "description": "Created array letters with values [a,b,c,d,e,f,g]."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-09-14T10:09:26.091Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:26.092Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "String",
    "value": "x is greater than 5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "StringLiteral",
            "value": "x is greater than 5",
            "line": 3
          },
          "line": 3
        }
      ],
      "alternate": null,
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "line": 2,
      "endLine": 2,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 2
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5",
          "line": 3
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:26.094Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.094Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-09-14T10:09:26.094Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.094Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-14T10:09:26.095Z",
      "description": "Created array numbers with values [0]."
    }
  ]
}
Test case 4

Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "0",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 2
  },
  {
    "type": "Number",
    "value": "1",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "insert",
    "line": 4
  },
  {
    "type": "Number",
    "value": "3",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "numbers",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "at",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 4
  },
  {
    "type": "Number",
    "value": "3",
    "line": 4
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "position": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "position": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "line": 3
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "position": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "line": 4
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "ArrayInsertion",
      "line": 2,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "line": 3,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "line": 4,
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 4
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-09-14T10:09:26.096Z",
      "description": "Created array numbers with values [0]."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-09-14T10:09:26.096Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-09-14T10:09:26.096Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-09-14T10:09:26.096Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 7

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "greater",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 3
  },
  {
    "type": "Number",
    "value": "5",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "is",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "less",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "than",
    "line": 4
  },
  {
    "type": "Number",
    "value": "10",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 5
  },
  {
    "type": "String",
    "value": "y is less than 10",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 7
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 7
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": "greater",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": "y",
            "operator": "less",
            "right": {
              "type": "NumberLiteral",
              "value": "10",
              "line": 4
            },
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": {
                "type": "StringLiteral",
                "value": "y is less than 10",
                "line": 5
              },
              "line": 5
            }
          ],
          "alternate": null,
          "line": 4
        }
      ],
      "alternate": null,
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "line": 3,
      "endLine": 3,
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5",
        "line": 3
      },
      "consequent": [
        {
          "type": "IfStatement",
          "line": 4,
          "endLine": 4,
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10",
            "line": 4
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10",
              "line": 5
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:26.098Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.098Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.098Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.098Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-09-14T10:09:26.098Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.098Z",
      "description": "End of if statement."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:09:26.098Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 2
  },
  {
    "type": "Number",
    "value": "3",
    "line": 2
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 2
        },
        "operator": "+",
        "right": {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        "line": 2
      },
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "Expression",
        "line": 2,
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.099Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-09-14T10:09:26.099Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "10",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "c",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "a",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "b",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "a",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "b",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "c",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "a",
          "line": 3
        },
        "operator": "+",
        "right": {
          "type": "Identifier",
          "value": "b",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "c",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.100Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:26.100Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T10:09:26.101Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Number",
    "value": "2",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 2
        },
        "operator": "-",
        "right": {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        "line": 3
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-09-14T10:09:26.102Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-09-14T10:09:26.102Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-09-14T10:09:26.102Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 2
  },
  {
    "type": "Number",
    "value": "5",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "z",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Operator",
    "value": "*",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "y",
    "line": 3
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "y",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      },
      "line": 2
    },
    {
      "type": "VariableDeclaration",
      "varName": "z",
      "varType": null,
      "value": {
        "type": "Expression",
        "left": {
          "type": "Identifier",
          "value": "x",
          "line": 3
        },
        "operator": "*",
        "right": {
          "type": "Identifier",
          "value": "y",
          "line": 3
        },
        "line": 3
      },
      "line": 3
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "line": 3,
      "name": "z",
      "value": {
        "type": "Expression",
        "line": 3,
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-09-14T10:09:26.106Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.106Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-09-14T10:09:26.106Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "set",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Number",
    "value": "5",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 2
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 2
  },
  {
    "type": "Number",
    "value": "0",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 3
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 3
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "x",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 5
  },
  {
    "type": "Keyword",
    "value": "while",
    "line": 5
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "varName": "x",
      "varType": "number",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      },
      "line": 1
    },
    {
      "type": "WhileLoop",
      "condition": {
        "type": "Expression",
        "left": "x",
        "operator": ">",
        "right": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        },
        "line": 2
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 3
          },
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "varName": "x",
          "varType": null,
          "value": {
            "type": "Expression",
            "left": {
              "type": "Identifier",
              "value": "x",
              "line": 4
            },
            "operator": "-",
            "right": {
              "type": "NumberLiteral",
              "value": "1",
              "line": 4
            },
            "line": 5
          },
          "line": 4
        }
      ],
      "line": 2
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "line": 1,
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 1
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0",
        "line": 2
      },
      "line": 2,
      "body": [
        {
          "type": "PrintStatement",
          "value": "x",
          "line": 3
        },
        {
          "type": "VariableDeclaration",
          "line": 4,
          "name": "x",
          "value": {
            "type": "Expression",
            "line": 5,
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "Checked if x > 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:09:26.111Z",
      "description": "End of while loop"
    }
  ]
}
Tokens: [
  {
    "type": "Keyword",
    "value": "create",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "number",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "array",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "as",
    "line": 1
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "values",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 1
  },
  {
    "type": "Number",
    "value": "50",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "40",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "30",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "20",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": ",",
    "line": 1
  },
  {
    "type": "Number",
    "value": "10",
    "line": 1
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 1
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 2
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 2
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 2
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 4
  },
  {
    "type": "Number",
    "value": "0",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 4
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 4
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 4
  },
  {
    "type": "Number",
    "value": "1",
    "line": 4
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 6
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 6
  },
  {
    "type": "Boolean",
    "value": "false",
    "line": 6
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "from",
    "line": 8
  },
  {
    "type": "Number",
    "value": "0",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 8
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 8
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 8
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 8
  },
  {
    "type": "Number",
    "value": "2",
    "line": 8
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "current",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 10
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 10
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 10
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 10
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "next",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 11
  },
  {
    "type": "Delimiter",
    "value": "[",
    "line": 11
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 11
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 11
  },
  {
    "type": "Number",
    "value": "1",
    "line": 11
  },
  {
    "type": "Delimiter",
    "value": "]",
    "line": 11
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "current",
    "line": 13
  },
  {
    "type": "ComparisonOperator",
    "value": ">",
    "line": 13
  },
  {
    "type": "Identifier",
    "value": "next",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 13
  },
  {
    "type": "Keyword",
    "value": "swap",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 14
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "with",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "position",
    "line": 14
  },
  {
    "type": "Identifier",
    "value": "j",
    "line": 14
  },
  {
    "type": "Operator",
    "value": "+",
    "line": 14
  },
  {
    "type": "Number",
    "value": "1",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "in",
    "line": 14
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 14
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 15
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 15
  },
  {
    "type": "Boolean",
    "value": "true",
    "line": 15
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 17
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 19
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 21
  },
  {
    "type": "LogicalOperator",
    "value": "not",
    "line": 21
  },
  {
    "type": "Identifier",
    "value": "swapped",
    "line": 21
  },
  {
    "type": "Keyword",
    "value": "then",
    "line": 21
  },
  {
    "type": "Keyword",
    "value": "set",
    "line": 23
  },
  {
    "type": "Identifier",
    "value": "i",
    "line": 23
  },
  {
    "type": "Keyword",
    "value": "to",
    "line": 23
  },
  {
    "type": "Keyword",
    "value": "length",
    "line": 23
  },
  {
    "type": "Keyword",
    "value": "of",
    "line": 23
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 23
  },
  {
    "type": "Operator",
    "value": "-",
    "line": 23
  },
  {
    "type": "Number",
    "value": "1",
    "line": 23
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 25
  },
  {
    "type": "Keyword",
    "value": "if",
    "line": 25
  },
  {
    "type": "Keyword",
    "value": "end",
    "line": 26
  },
  {
    "type": "Keyword",
    "value": "loop",
    "line": 26
  },
  {
    "type": "Keyword",
    "value": "print",
    "line": 30
  },
  {
    "type": "Identifier",
    "value": "myArray",
    "line": 30
  }
]
AST: {
  "type": "Program",
  "body": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "arrType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      ],
      "unInitialised": false,
      "line": 1
    },
    {
      "type": "VariableDeclaration",
      "varName": "swapped",
      "varType": null,
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      },
      "line": 2
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "end": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": {
              "type": "Identifier",
              "value": "myArray",
              "line": 4
            },
            "line": 4
          },
          "operator": "-",
          "right": {
            "type": "NumberLiteral",
            "value": "1",
            "line": 4
          },
          "line": 6
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "varName": "swapped",
          "varType": null,
          "value": {
            "type": "BooleanLiteral",
            "value": false,
            "line": 6
          },
          "line": 6
        },
        {
          "type": "LoopFromTo",
          "loopVariable": "j",
          "range": {
            "start": {
              "type": "NumberLiteral",
              "value": "0",
              "line": 8
            },
            "end": {
              "type": "Expression",
              "left": {
                "type": "Expression",
                "left": {
                  "type": "LengthExpression",
                  "source": {
                    "type": "Identifier",
                    "value": "myArray",
                    "line": 8
                  },
                  "line": 8
                },
                "operator": "-",
                "right": {
                  "type": "Identifier",
                  "value": "i",
                  "line": 8
                },
                "line": 8
              },
              "operator": "-",
              "right": {
                "type": "NumberLiteral",
                "value": "2",
                "line": 8
              },
              "line": 10
            }
          },
          "body": [
            {
              "type": "VariableDeclaration",
              "varName": "current",
              "varType": null,
              "value": {
                "type": "IndexExpression",
                "source": {
                  "type": "Identifier",
                  "value": "myArray",
                  "line": 10
                },
                "index": {
                  "type": "Identifier",
                  "value": "j",
                  "line": 10
                },
                "line": 10
              },
              "line": 10
            },
            {
              "type": "VariableDeclaration",
              "varName": "next",
              "varType": null,
              "value": {
                "type": "IndexExpression",
                "source": {
                  "type": "Identifier",
                  "value": "myArray",
                  "line": 11
                },
                "index": {
                  "type": "Expression",
                  "left": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 11
                  },
                  "operator": "+",
                  "right": {
                    "type": "NumberLiteral",
                    "value": "1",
                    "line": 11
                  },
                  "line": 11
                },
                "line": 11
              },
              "line": 11
            },
            {
              "type": "IfStatement",
              "condition": {
                "type": "Expression",
                "left": "current",
                "operator": ">",
                "right": {
                  "type": "Identifier",
                  "value": "next",
                  "line": 13
                },
                "line": 13
              },
              "consequent": [
                {
                  "type": "SwapOperation",
                  "varName": "myArray",
                  "firstPosition": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 14
                  },
                  "secondPosition": {
                    "type": "Expression",
                    "left": {
                      "type": "Identifier",
                      "value": "j",
                      "line": 14
                    },
                    "operator": "+",
                    "right": {
                      "type": "NumberLiteral",
                      "value": "1",
                      "line": 14
                    },
                    "line": 14
                  },
                  "line": 14
                },
                {
                  "type": "VariableDeclaration",
                  "varName": "swapped",
                  "varType": null,
                  "value": {
                    "type": "BooleanLiteral",
                    "value": true,
                    "line": 15
                  },
                  "line": 15
                }
              ],
              "alternate": null,
              "line": 13
            }
          ],
          "line": 8
        },
        {
          "type": "IfStatement",
          "condition": {
            "type": "Expression",
            "left": null,
            "operator": "not",
            "right": {
              "type": "Identifier",
              "value": "swapped",
              "line": 21
            },
            "line": 21
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "varName": "i",
              "varType": null,
              "value": {
                "type": "Expression",
                "left": {
                  "type": "LengthExpression",
                  "source": {
                    "type": "Identifier",
                    "value": "myArray",
                    "line": 23
                  },
                  "line": 23
                },
                "operator": "-",
                "right": {
                  "type": "NumberLiteral",
                  "value": "1",
                  "line": 23
                },
                "line": 25
              },
              "line": 23
            }
          ],
          "alternate": null,
          "line": 21
        }
      ],
      "line": 4
    },
    {
      "type": "PrintStatement",
      "value": {
        "type": "Identifier",
        "value": "myArray",
        "line": 30
      },
      "line": 30
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "myArray",
      "dsType": "number",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "50",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "40",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "30",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "20",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 1
        }
      ],
      "line": 1,
      "unInitialised": false
    },
    {
      "type": "VariableDeclaration",
      "line": 2,
      "name": "swapped",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "line": 4,
      "loopVariable": "i",
      "range": {
        "start": {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        "end": {
          "type": "Expression",
          "line": 6,
          "left": {
            "type": "LengthExpression",
            "line": 4,
            "source": "myArray"
          },
          "operator": "-",
          "right": "1"
        }
      },
      "body": [
        {
          "type": "VariableDeclaration",
          "line": 6,
          "name": "swapped",
          "value": {
            "type": "BooleanLiteral",
            "value": false,
            "line": 6
          }
        },
        {
          "type": "LoopFromTo",
          "line": 8,
          "loopVariable": "j",
          "range": {
            "start": {
              "type": "NumberLiteral",
              "value": "0",
              "line": 8
            },
            "end": {
              "type": "Expression",
              "line": 10,
              "left": {
                "type": "Expression",
                "line": 8,
                "left": {
                  "type": "LengthExpression",
                  "line": 8,
                  "source": "myArray"
                },
                "operator": "-",
                "right": "i"
              },
              "operator": "-",
              "right": "2"
            }
          },
          "body": [
            {
              "type": "VariableDeclaration",
              "line": 10,
              "name": "current",
              "value": {
                "type": "IndexExpression",
                "line": 10,
                "source": "myArray",
                "index": "j"
              }
            },
            {
              "type": "VariableDeclaration",
              "line": 11,
              "name": "next",
              "value": {
                "type": "IndexExpression",
                "line": 11,
                "source": "myArray",
                "index": {
                  "type": "Expression",
                  "line": 11,
                  "left": "j",
                  "operator": "+",
                  "right": "1"
                }
              }
            },
            {
              "type": "IfStatement",
              "line": 13,
              "endLine": 13,
              "condition": {
                "left": "current",
                "operator": ">",
                "right": "next",
                "line": 13
              },
              "consequent": [
                {
                  "type": "SwapOperation",
                  "line": 14,
                  "varName": "myArray",
                  "firstPosition": {
                    "type": "Identifier",
                    "value": "j",
                    "line": 14
                  },
                  "secondPosition": {
                    "type": "Expression",
                    "line": 14,
                    "left": "j",
                    "operator": "+",
                    "right": "1"
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "line": 15,
                  "name": "swapped",
                  "value": {
                    "type": "BooleanLiteral",
                    "value": true,
                    "line": 15
                  }
                }
              ],
              "alternate": null
            }
          ]
        },
        {
          "type": "IfStatement",
          "line": 21,
          "endLine": 21,
          "condition": {
            "left": null,
            "operator": "not",
            "right": "swapped",
            "line": 21
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "line": 23,
              "name": "i",
              "value": {
                "type": "Expression",
                "line": 25,
                "left": {
                  "type": "LengthExpression",
                  "line": 23,
                  "source": "myArray"
                },
                "operator": "-",
                "right": "1"
              }
            }
          ],
          "alternate": null
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "myArray",
      "line": 30
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create",
      "dataStructure": "array",
      "type": "number",
      "varName": "myArray",
      "value": [
        50,
        40,
        30,
        20,
        10
      ],
      "timestamp": "2024-09-14T10:13:26.739Z",
      "description": "Created array myArray with values [50,40,30,20,10]."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:13:26.743Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:13:26.743Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 4,
      "operation": "loop_from_to",
      "condition": "i <= 4",
      "timestamp": "2024-09-14T10:13:26.744Z",
      "description": "loop from_to loop with condition i <= 4."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.744Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:13:26.744Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:13:26.744Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 8,
      "operation": "loop_from_to",
      "condition": "j <= 3",
      "timestamp": "2024-09-14T10:13:26.744Z",
      "description": "loop from_to loop with condition j <= 3."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.744Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 50
      },
      "timestamp": "2024-09-14T10:13:26.745Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 40
      },
      "timestamp": "2024-09-14T10:13:26.745Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.745Z",
      "description": "Checked if current > next."
    },
    {
      "line": 14,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T10:13:26.746Z"
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:13:26.746Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.746Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:13:26.746Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.746Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 50
      },
      "timestamp": "2024-09-14T10:13:26.747Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 30
      },
      "timestamp": "2024-09-14T10:13:26.747Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.747Z",
      "description": "Checked if current > next."
    },
    {
      "line": 14,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T10:13:26.747Z"
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:13:26.748Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.748Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:13:26.748Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.748Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 50
      },
      "timestamp": "2024-09-14T10:13:26.748Z",
      "description": "Set variable current to myArray[2]."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 20
      },
      "timestamp": "2024-09-14T10:13:26.748Z",
      "description": "Set variable next to myArray[3]."
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.748Z",
      "description": "Checked if current > next."
    },
    {
      "line": 14,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 2,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 2 and 3 in array myArray.",
      "timestamp": "2024-09-14T10:13:26.748Z"
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:13:26.748Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.748Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:13:26.748Z",
      "description": "Set variable j to 3."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 3",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.748Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 50
      },
      "timestamp": "2024-09-14T10:13:26.748Z",
      "description": "Set variable current to myArray[3]."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 4,
        "result": 10
      },
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "Set variable next to myArray[4]."
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "Checked if current > next."
    },
    {
      "line": 14,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 3,
      "secondPosition": 4,
      "varName": "myArray",
      "description": "Swapped values in position 3 and 4 in array myArray.",
      "timestamp": "2024-09-14T10:13:26.749Z"
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "Set variable j to 4."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 3",
      "result": false,
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "Checked if j <= 3."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 21,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "End of if statement."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 8,
      "operation": "loop_from_to",
      "condition": "j <= 2",
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "loop from_to loop with condition j <= 2."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 40
      },
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 30
      },
      "timestamp": "2024-09-14T10:13:26.749Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "Checked if current > next."
    },
    {
      "line": 14,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T10:13:26.750Z"
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 40
      },
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 20
      },
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "Checked if current > next."
    },
    {
      "line": 14,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T10:13:26.750Z"
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 2",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 40
      },
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "Set variable current to myArray[2]."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 3,
        "result": 10
      },
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "Set variable next to myArray[3]."
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.750Z",
      "description": "Checked if current > next."
    },
    {
      "line": 14,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 2,
      "secondPosition": 3,
      "varName": "myArray",
      "description": "Swapped values in position 2 and 3 in array myArray.",
      "timestamp": "2024-09-14T10:13:26.750Z"
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "Set variable j to 3."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 2",
      "result": false,
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "Checked if j <= 2."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 21,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "End of if statement."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 8,
      "operation": "loop_from_to",
      "condition": "j <= 1",
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "loop from_to loop with condition j <= 1."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 1",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 30
      },
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 20
      },
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.751Z",
      "description": "Checked if current > next."
    },
    {
      "line": 14,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T10:13:26.753Z"
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:13:26.753Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.753Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:13:26.753Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 1",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.753Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 30
      },
      "timestamp": "2024-09-14T10:13:26.753Z",
      "description": "Set variable current to myArray[1]."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 2,
        "result": 10
      },
      "timestamp": "2024-09-14T10:13:26.753Z",
      "description": "Set variable next to myArray[2]."
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Checked if current > next."
    },
    {
      "line": 14,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 1,
      "secondPosition": 2,
      "varName": "myArray",
      "description": "Swapped values in position 1 and 2 in array myArray.",
      "timestamp": "2024-09-14T10:13:26.754Z"
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 2,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Set variable j to 2."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 1",
      "result": false,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Checked if j <= 1."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 21,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "End of if statement."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 8,
      "operation": "loop_from_to",
      "condition": "j <= 0",
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "loop from_to loop with condition j <= 0."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 0",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Checked if j <= 0."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "current",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 0,
        "result": 20
      },
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Set variable current to myArray[0]."
    },
    {
      "line": 11,
      "operation": "set",
      "varName": "next",
      "type": "number",
      "value": {
        "operation": "get",
        "type": "array",
        "varName": "myArray",
        "index": 1,
        "result": 10
      },
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Set variable next to myArray[1]."
    },
    {
      "line": 13,
      "operation": "if",
      "condition": "current > next",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Checked if current > next."
    },
    {
      "line": 14,
      "operation": "swap",
      "dataStructure": "array",
      "firstPosition": 0,
      "secondPosition": 1,
      "varName": "myArray",
      "description": "Swapped values in position 0 and 1 in array myArray.",
      "timestamp": "2024-09-14T10:13:26.754Z"
    },
    {
      "line": 15,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Set variable swapped to true."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 1,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Set variable j to 1."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= 0",
      "result": false,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Checked if j <= 0."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 21,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "End of if statement."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "i <= 4",
      "result": true,
      "timestamp": "2024-09-14T10:13:26.754Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "swapped",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-09-14T10:13:26.755Z",
      "description": "Set variable swapped to false."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "j",
      "type": "number",
      "value": 0,
      "timestamp": "2024-09-14T10:13:26.755Z",
      "description": "Set variable j to 0."
    },
    {
      "line": 8,
      "operation": "loop_from_to",
      "condition": "j <= -1",
      "timestamp": "2024-09-14T10:13:26.755Z",
      "description": "loop from_to loop with condition j <= -1."
    },
    {
      "line": 8,
      "operation": "if",
      "condition": "j <= -1",
      "result": false,
      "timestamp": "2024-09-14T10:13:26.755Z",
      "description": "Checked if j <= -1."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:13:26.755Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 21,
      "operation": "if",
      "condition": "!swapped",
      "result": false,
      "timestamp": "2024-09-14T10:13:26.755Z",
      "description": "Checked if !swapped."
    },
    {
      "line": null,
      "operation": "endif",
      "timestamp": "2024-09-14T10:13:26.755Z",
      "description": "End of if statement."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-09-14T10:13:26.755Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "i <= 4",
      "result": false,
      "timestamp": "2024-09-14T10:13:26.755Z",
      "description": "Checked if i <= 4."
    },
    {
      "line": null,
      "operation": "loop_end",
      "timestamp": "2024-09-14T10:13:26.755Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 30,
      "operation": "print",
      "isLiteral": false,
      "varName": "myArray",
      "literal": [
        10,
        20,
        30,
        40,
        50
      ],
      "timestamp": "2024-09-14T10:13:26.755Z",
      "description": "Printed myArray."
    }
  ]
}
