Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "object",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      },
      "timestamp": "2024-08-30T20:56:40.586Z",
      "description": "Set variable firstCharacter to [object Object]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "object",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      },
      "timestamp": "2024-08-30T20:56:40.591Z",
      "description": "Set variable characterAtIndex to [object Object]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "object",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      },
      "timestamp": "2024-08-30T20:56:40.595Z",
      "description": "Set variable lastCharacter to [object Object]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "invalidCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "invalidCharacter",
      "type": "object",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": "1"
        }
      },
      "timestamp": "2024-08-30T20:56:40.597Z",
      "description": "Set variable invalidCharacter to [object Object]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "object",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      },
      "timestamp": "2024-08-30T20:56:40.598Z",
      "description": "Set variable emptyIndex to [object Object]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T20:56:40.600Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.600Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T20:56:40.600Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.600Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T20:56:40.604Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T20:56:40.604Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T20:56:40.605Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T20:56:40.605Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T20:56:40.607Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T20:56:40.607Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T20:56:40.607Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T20:56:40.608Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T20:56:40.608Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T20:56:40.608Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T20:56:40.610Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T20:56:40.610Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T20:56:40.610Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T20:56:40.620Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T20:56:40.620Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T20:56:40.620Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T20:56:40.621Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T20:56:40.621Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T20:56:40.621Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T20:56:40.623Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T20:56:40.623Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T20:56:40.623Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T20:56:40.623Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T20:56:40.623Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T20:56:40.624Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T20:56:40.624Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T20:56:40.625Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T20:56:40.625Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.625Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T20:56:40.625Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.625Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.625Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.625Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T20:56:40.625Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T20:56:40.626Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T20:56:40.626Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T20:56:40.626Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T20:56:40.627Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T20:56:40.628Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T20:56:40.633Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T20:56:40.633Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.633Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T20:56:40.633Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.633Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T20:56:40.634Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T20:56:40.635Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.635Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.635Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T20:56:40.635Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.635Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.635Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T20:56:40.635Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.635Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T20:56:40.635Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.635Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T20:56:40.637Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T20:56:40.637Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.637Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.637Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T20:56:40.637Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.637Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.637Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T20:56:40.637Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.637Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T20:56:40.637Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.637Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T20:56:40.639Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.639Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.639Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.639Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T20:56:40.639Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.639Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.639Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.640Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.640Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.640Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T20:56:40.640Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.640Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.640Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.642Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T20:56:40.642Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.642Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.642Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T20:56:40.642Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.642Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T20:56:40.642Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.642Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.642Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.642Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T20:56:40.643Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.643Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.643Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T20:56:40.643Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.643Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.643Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T20:56:40.644Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T20:56:40.644Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T20:56:40.644Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T20:56:40.644Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T20:56:40.647Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.647Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.647Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T20:56:40.649Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.649Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T20:56:40.649Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.649Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T20:56:40.651Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T20:56:40.651Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.652Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T20:56:40.652Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.652Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T20:56:40.653Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T20:56:40.653Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.653Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T20:56:40.653Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.653Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T20:56:40.654Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T20:56:40.654Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T20:56:40.655Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T20:56:40.655Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.655Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.655Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T20:56:40.656Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T20:56:40.656Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T20:56:40.657Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T20:56:40.657Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T20:56:40.658Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T20:56:40.658Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.658Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T20:56:40.659Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.662Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T20:56:40.662Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T20:56:40.662Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T20:56:40.663Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T20:56:40.667Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.669Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T20:56:40.670Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T20:56:40.670Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T20:56:40.670Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.670Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T20:56:40.670Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T20:56:40.671Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.672Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T20:56:40.672Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.672Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.672Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T20:56:40.672Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T20:56:40.672Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.672Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T20:56:40.672Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T20:56:40.673Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T20:56:40.674Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.675Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T20:56:40.675Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.675Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T20:56:40.675Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T20:56:40.676Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T20:56:40.678Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T20:56:40.679Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T20:56:40.685Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.685Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T20:56:40.685Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.685Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T20:56:40.686Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T20:56:40.686Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T20:56:40.686Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T20:56:40.687Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T20:56:40.689Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.689Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T20:56:40.689Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.689Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T20:56:40.690Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T20:56:40.691Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T20:56:40.691Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T20:56:40.691Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T20:56:40.691Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T20:56:40.693Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T20:56:40.693Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T20:56:40.693Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T20:56:40.694Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.694Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.694Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.694Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T20:56:40.694Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.694Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T20:56:40.694Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.695Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T20:56:40.695Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.696Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T20:56:40.696Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T20:56:40.696Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T20:56:40.697Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T20:56:40.697Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T20:56:40.697Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T20:56:40.700Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T20:56:40.700Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T20:56:40.700Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T20:56:40.701Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T20:56:40.701Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T20:56:40.703Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.703Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T20:56:40.703Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.705Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T20:56:40.705Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T20:56:40.706Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T20:56:40.709Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T20:56:40.709Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T20:56:40.709Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "invalidCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T21:34:57.983Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:57.983Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T21:34:57.983Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:57.983Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:34:58.047Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T21:34:58.047Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:34:58.048Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T21:34:58.048Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T21:34:58.049Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:34:58.049Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T21:34:58.049Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:34:58.051Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T21:34:58.051Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T21:34:58.051Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:34:58.053Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T21:34:58.053Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T21:34:58.053Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T21:34:58.063Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T21:34:58.063Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T21:34:58.063Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:34:58.064Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T21:34:58.064Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T21:34:58.064Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:34:58.066Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:34:58.066Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:34:58.066Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T21:34:58.066Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T21:34:58.066Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:34:58.070Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:34:58.070Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T21:34:58.070Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:34:58.070Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.071Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:34:58.071Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.071Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.071Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.071Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T21:34:58.071Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:34:58.072Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T21:34:58.072Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T21:34:58.072Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:34:58.073Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T21:34:58.073Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:34:58.109Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:34:58.109Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.109Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T21:34:58.109Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.109Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:34:58.111Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:34:58.111Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.111Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.111Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T21:34:58.111Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.111Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.111Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T21:34:58.111Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.111Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T21:34:58.111Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.111Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:34:58.113Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:34:58.113Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.113Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.113Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T21:34:58.113Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.113Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.113Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T21:34:58.113Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.113Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T21:34:58.113Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.113Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:34:58.117Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.117Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.117Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.117Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T21:34:58.117Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.117Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.117Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.119Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.119Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.119Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T21:34:58.119Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.119Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.119Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.121Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:34:58.121Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.121Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.121Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T21:34:58.121Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.121Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T21:34:58.121Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.121Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.121Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.121Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:34:58.123Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.123Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.123Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T21:34:58.123Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.123Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.123Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T21:34:58.125Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T21:34:58.125Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T21:34:58.125Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T21:34:58.125Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:34:58.128Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.128Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.128Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:34:58.129Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.130Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T21:34:58.130Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.130Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:34:58.131Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:34:58.131Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.132Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T21:34:58.132Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.132Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:34:58.133Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:34:58.133Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.133Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T21:34:58.133Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.133Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:34:58.135Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:34:58.135Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:34:58.136Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:34:58.136Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.136Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.136Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:34:58.137Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T21:34:58.137Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T21:34:58.138Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T21:34:58.138Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:34:58.139Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T21:34:58.139Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.139Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:34:58.139Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.139Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:34:58.139Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.139Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.139Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:34:58.139Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.139Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.139Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.139Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.140Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:34:58.140Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.140Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:34:58.140Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.140Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.140Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T21:34:58.140Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.140Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T21:34:58.140Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.140Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.140Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:34:58.140Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T21:34:58.142Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T21:34:58.147Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:34:58.149Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:34:58.149Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T21:34:58.149Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.149Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:34:58.149Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:34:58.149Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:34:58.149Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:34:58.150Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:34:58.152Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:34:58.155Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T21:34:58.155Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.155Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T21:34:58.155Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:34:58.155Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.155Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T21:34:58.155Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:34:58.155Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.155Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T21:34:58.155Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:34:58.156Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.157Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:34:58.158Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:34:58.159Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T21:34:58.159Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.159Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T21:34:58.159Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:34:58.159Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:34:58.160Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:34:58.163Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.163Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T21:34:58.163Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.163Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T21:34:58.164Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T21:34:58.164Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T21:34:58.164Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:34:58.166Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:34:58.167Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.167Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T21:34:58.167Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.167Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T21:34:58.167Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T21:34:58.168Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T21:34:58.169Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T21:34:58.169Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T21:34:58.169Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T21:34:58.170Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T21:34:58.170Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T21:34:58.170Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:34:58.171Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.171Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.171Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.171Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T21:34:58.171Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.171Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:34:58.171Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.174Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:34:58.174Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.175Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:34:58.175Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:34:58.175Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:34:58.176Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:34:58.176Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T21:34:58.177Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:34:58.178Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T21:34:58.178Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T21:34:58.178Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:34:58.179Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T21:34:58.179Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:34:58.180Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.180Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T21:34:58.180Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.181Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:34:58.181Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.181Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:34:58.181Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:34:58.181Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.181Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:34:58.181Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:34:58.181Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.182Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:34:58.182Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:34:58.182Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.182Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:34:58.182Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:34:58.182Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:34:58.182Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:34:58.182Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:34:58.182Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:34:58.182Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:34:58.182Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T21:34:58.183Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:34:58.183Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T21:34:58.183Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "invalidCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T21:35:11.609Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.609Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T21:35:11.609Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.609Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:11.614Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T21:35:11.614Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:11.615Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T21:35:11.615Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T21:35:11.616Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:11.616Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:11.616Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:11.617Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T21:35:11.617Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T21:35:11.617Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:11.619Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T21:35:11.619Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T21:35:11.619Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T21:35:11.627Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T21:35:11.627Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T21:35:11.628Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:11.630Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T21:35:11.630Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T21:35:11.630Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:11.631Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:35:11.631Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:35:11.631Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T21:35:11.632Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T21:35:11.632Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:11.633Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:35:11.633Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T21:35:11.633Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:11.633Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.633Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:35:11.633Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.633Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.633Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.633Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T21:35:11.633Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:11.635Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T21:35:11.635Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T21:35:11.635Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:11.636Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T21:35:11.636Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:11.638Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:35:11.638Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.638Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T21:35:11.638Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.638Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:35:11.639Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:11.639Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.639Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.639Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T21:35:11.639Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.639Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.639Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T21:35:11.640Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.640Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T21:35:11.640Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.640Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:11.641Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:35:11.641Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.641Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.641Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T21:35:11.641Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.641Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.641Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T21:35:11.641Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.641Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T21:35:11.641Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.641Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:35:11.644Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.644Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.644Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.644Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T21:35:11.644Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.644Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.644Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.645Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.646Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.646Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T21:35:11.646Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.646Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.646Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.647Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:35:11.647Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.647Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.647Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T21:35:11.647Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.647Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T21:35:11.647Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.647Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.647Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.647Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:35:11.649Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.649Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.649Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T21:35:11.649Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.649Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.649Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T21:35:11.651Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T21:35:11.651Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T21:35:11.651Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T21:35:11.651Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:11.653Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.653Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.653Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:11.654Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.654Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T21:35:11.654Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.654Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:11.656Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:35:11.657Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.658Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T21:35:11.658Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.658Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:11.660Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:35:11.660Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.661Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T21:35:11.661Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.661Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:11.666Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:35:11.666Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:11.668Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:35:11.669Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.669Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.669Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:11.670Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T21:35:11.670Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T21:35:11.671Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T21:35:11.671Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:11.674Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T21:35:11.674Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.674Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:11.674Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.674Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:11.674Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.674Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.674Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:11.674Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.675Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.675Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.675Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.675Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:11.675Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.675Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:35:11.675Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.675Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.675Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T21:35:11.675Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.675Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T21:35:11.675Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.676Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.676Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:11.676Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.682Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:11.682Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:35:11.682Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.682Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:11.682Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.683Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:11.683Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.683Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:11.683Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:35:11.683Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:11.683Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.683Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:11.683Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:35:11.684Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:11.684Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.684Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:11.684Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T21:35:11.684Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:11.684Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.685Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:11.685Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:35:11.685Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:11.685Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.685Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:11.685Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T21:35:11.685Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:11.688Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:11.688Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T21:35:11.688Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.688Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:11.688Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:11.688Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:11.688Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.688Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:11.688Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:11.689Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:11.689Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.689Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:11.689Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:35:11.689Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:11.689Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.689Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:11.689Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T21:35:11.689Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:35:11.689Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T21:35:11.689Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:11.692Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:11.692Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T21:35:11.692Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.692Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:11.692Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:11.692Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:11.692Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.692Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:11.692Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:11.693Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:11.693Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.693Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:11.693Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:35:11.693Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:11.693Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.693Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:11.693Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:11.694Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.694Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.694Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:11.694Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:35:11.694Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:35:11.694Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.694Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:11.694Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:35:11.699Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.700Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:11.700Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:11.703Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T21:35:11.703Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.704Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T21:35:11.704Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:35:11.704Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.704Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T21:35:11.704Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:35:11.704Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.704Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T21:35:11.704Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:35:11.704Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.704Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T21:35:11.704Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:11.705Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.706Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:11.706Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:11.706Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.706Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:11.706Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.709Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:35:11.709Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.709Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:11.709Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:11.709Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.710Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:11.710Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:11.710Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.710Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:11.710Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:11.710Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.710Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:11.710Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:11.711Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.711Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:11.711Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:11.711Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.711Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:11.711Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:11.714Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T21:35:11.714Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.714Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T21:35:11.714Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:11.714Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.714Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:11.714Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:11.714Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.714Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:11.714Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:11.714Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T21:35:11.715Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:35:11.716Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.716Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T21:35:11.716Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:11.716Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.716Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T21:35:11.716Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T21:35:11.716Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.716Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:11.716Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:11.719Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.720Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T21:35:11.720Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.720Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T21:35:11.721Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T21:35:11.724Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T21:35:11.724Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:11.727Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:11.730Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.731Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T21:35:11.731Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.731Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T21:35:11.733Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T21:35:11.734Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T21:35:11.734Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T21:35:11.734Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T21:35:11.734Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T21:35:11.737Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T21:35:11.737Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T21:35:11.737Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:11.741Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.741Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.742Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.742Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T21:35:11.742Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.742Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:11.742Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.745Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:35:11.746Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.749Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:11.749Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:35:11.749Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:35:11.753Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:35:11.754Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T21:35:11.754Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:35:11.757Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T21:35:11.757Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T21:35:11.758Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:11.763Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T21:35:11.764Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:11.766Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.766Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T21:35:11.767Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.768Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:35:11.768Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.770Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:11.770Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:11.771Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.771Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:11.771Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:11.771Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.771Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:11.771Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:11.771Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.771Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:11.771Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:11.771Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:11.771Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:11.771Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:11.772Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:35:11.772Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:11.772Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T21:35:11.774Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:11.774Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T21:35:11.774Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "invalidCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T21:35:40.128Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.128Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T21:35:40.128Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.128Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:40.130Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T21:35:40.130Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:40.131Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T21:35:40.131Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T21:35:40.132Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:40.132Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:40.132Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:40.148Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T21:35:40.148Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T21:35:40.148Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:40.149Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T21:35:40.149Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T21:35:40.149Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T21:35:40.161Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T21:35:40.161Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T21:35:40.161Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:40.162Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T21:35:40.163Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T21:35:40.163Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:40.164Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:35:40.164Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:35:40.164Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T21:35:40.164Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T21:35:40.164Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:40.166Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:35:40.167Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T21:35:40.167Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:40.167Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.167Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:35:40.167Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.167Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.167Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.167Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T21:35:40.167Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:40.169Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T21:35:40.169Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T21:35:40.169Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:40.170Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T21:35:40.170Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:40.172Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:35:40.172Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.173Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T21:35:40.173Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.173Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:35:40.177Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:40.177Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.177Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.177Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T21:35:40.177Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.177Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.177Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T21:35:40.177Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.177Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T21:35:40.177Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.177Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:40.179Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:35:40.179Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.179Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.179Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T21:35:40.179Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.179Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.179Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T21:35:40.179Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.179Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T21:35:40.179Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.179Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:35:40.181Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.181Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.181Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.181Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T21:35:40.181Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.181Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.181Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.182Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.183Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.183Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T21:35:40.183Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.183Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.183Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.184Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:35:40.184Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.184Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.184Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T21:35:40.184Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.184Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T21:35:40.184Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.184Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.184Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.184Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:35:40.185Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.185Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.185Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T21:35:40.185Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.185Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.185Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T21:35:40.186Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T21:35:40.186Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T21:35:40.186Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T21:35:40.187Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:40.188Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.188Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.188Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:40.193Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.193Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T21:35:40.193Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.193Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:40.195Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:35:40.195Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.195Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T21:35:40.195Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.195Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:40.196Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:35:40.196Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.196Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T21:35:40.196Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.196Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:40.197Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:35:40.198Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:35:40.199Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:35:40.199Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.199Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.199Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:35:40.200Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T21:35:40.200Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T21:35:40.201Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T21:35:40.201Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:40.202Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T21:35:40.202Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:40.203Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:40.206Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:35:40.207Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:40.207Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.207Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:40.207Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T21:35:40.207Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:40.210Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:40.210Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T21:35:40.210Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.210Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:40.210Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T21:35:40.211Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:40.212Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:40.212Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T21:35:40.212Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:40.213Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:40.215Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:40.217Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.218Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:40.218Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:40.218Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.218Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:40.218Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:40.218Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.218Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:40.218Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.219Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:35:40.219Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.219Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:40.219Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:40.219Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.219Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:40.219Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:40.219Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.219Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:40.219Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:40.219Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.219Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:40.219Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:40.220Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.220Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:40.220Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:40.220Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.220Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:40.220Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:40.223Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:40.228Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.228Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T21:35:40.228Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.228Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T21:35:40.229Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T21:35:40.229Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T21:35:40.229Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:40.231Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:40.232Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.232Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T21:35:40.232Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.232Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T21:35:40.235Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T21:35:40.236Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T21:35:40.236Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T21:35:40.236Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T21:35:40.236Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T21:35:40.240Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T21:35:40.240Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T21:35:40.240Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:40.242Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.243Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.243Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.243Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T21:35:40.243Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.243Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:35:40.243Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.244Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:35:40.244Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.246Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:40.246Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:35:40.246Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:35:40.247Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:35:40.247Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T21:35:40.247Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:35:40.260Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T21:35:40.260Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T21:35:40.260Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:40.264Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T21:35:40.271Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:35:40.276Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.276Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T21:35:40.276Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:35:40.278Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T21:35:40.282Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:35:40.282Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T21:35:40.289Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "invalidCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T21:36:09.416Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.416Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T21:36:09.416Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.417Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:09.418Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T21:36:09.418Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:09.419Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T21:36:09.419Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T21:36:09.420Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:09.420Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:09.420Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:09.421Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T21:36:09.421Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T21:36:09.422Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:09.423Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T21:36:09.423Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T21:36:09.423Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T21:36:09.430Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T21:36:09.430Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T21:36:09.430Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:09.431Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T21:36:09.431Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T21:36:09.431Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:09.433Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:36:09.433Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:36:09.433Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T21:36:09.433Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T21:36:09.433Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:09.435Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:36:09.435Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T21:36:09.435Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:09.435Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.435Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:36:09.436Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.436Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.436Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.436Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T21:36:09.436Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:09.437Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T21:36:09.437Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T21:36:09.437Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:09.438Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T21:36:09.438Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:09.439Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:36:09.439Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.439Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T21:36:09.439Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.439Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:36:09.440Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:09.440Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.440Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.441Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T21:36:09.441Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.441Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.441Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T21:36:09.441Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.441Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T21:36:09.441Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.441Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:09.442Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:36:09.442Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.442Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.442Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T21:36:09.442Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.442Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.442Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T21:36:09.442Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.442Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T21:36:09.442Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.442Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:36:09.443Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.443Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.443Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.443Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T21:36:09.443Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.443Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.443Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.444Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.444Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.445Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T21:36:09.445Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.445Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.445Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.446Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:36:09.446Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.446Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.446Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T21:36:09.446Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.446Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T21:36:09.446Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.446Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.446Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.446Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:36:09.447Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.447Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.447Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T21:36:09.447Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.447Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.447Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T21:36:09.448Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T21:36:09.448Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T21:36:09.448Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T21:36:09.448Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:09.449Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.449Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.449Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:09.450Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.450Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T21:36:09.450Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.450Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:09.452Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:36:09.452Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.452Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T21:36:09.452Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.452Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:09.453Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:36:09.453Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.453Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T21:36:09.453Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.453Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:09.454Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:36:09.454Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:09.456Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:36:09.456Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.456Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.456Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:09.458Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T21:36:09.458Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T21:36:09.460Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T21:36:09.461Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:09.463Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T21:36:09.463Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.466Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.467Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:09.467Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.470Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:09.470Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:36:09.470Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.470Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:09.470Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.470Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:09.470Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.471Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:09.471Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:36:09.471Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:09.471Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.471Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:09.471Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:36:09.471Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:09.471Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.471Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:09.471Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T21:36:09.471Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:09.472Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.472Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:09.472Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:36:09.472Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:09.472Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.473Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:09.473Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T21:36:09.473Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:09.476Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:09.477Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T21:36:09.477Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.478Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:09.478Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:09.478Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:09.478Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.478Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:09.478Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:09.478Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:09.478Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.478Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:09.478Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:36:09.479Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:09.479Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.479Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:09.479Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T21:36:09.479Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:36:09.479Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T21:36:09.479Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:09.481Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:09.481Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T21:36:09.481Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.481Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:09.481Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:09.481Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:09.481Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.481Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:36:09.482Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.483Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:09.483Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:09.486Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T21:36:09.486Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.486Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T21:36:09.486Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:09.486Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.487Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:09.487Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:09.487Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.487Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:09.487Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:09.487Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.487Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:09.487Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:09.488Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.488Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:09.488Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.488Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.488Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:09.488Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:36:09.488Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.488Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:09.488Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:09.490Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T21:36:09.490Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.490Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T21:36:09.491Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:36:09.491Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.491Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T21:36:09.491Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:36:09.491Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.491Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T21:36:09.491Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:36:09.491Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.493Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T21:36:09.494Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:36:09.494Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.494Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T21:36:09.494Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.494Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.494Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:09.494Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:09.494Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:09.495Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.499Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:36:09.499Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.499Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:09.499Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:09.499Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.500Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:09.500Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:09.500Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.500Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:09.500Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:09.500Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.500Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:09.500Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:09.501Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.501Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:09.504Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:09.504Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.505Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:09.505Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:09.506Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T21:36:09.506Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:36:09.507Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:09.508Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:09.513Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.513Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T21:36:09.513Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.513Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T21:36:09.515Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T21:36:09.516Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T21:36:09.516Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:09.522Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:09.523Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.523Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T21:36:09.523Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.523Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T21:36:09.524Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T21:36:09.526Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T21:36:09.526Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T21:36:09.526Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T21:36:09.526Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T21:36:09.528Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T21:36:09.528Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T21:36:09.528Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:09.531Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.531Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.531Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.531Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T21:36:09.531Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.531Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:09.531Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.536Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:36:09.536Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.538Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:09.538Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:36:09.538Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:36:09.539Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:36:09.540Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T21:36:09.540Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:36:09.542Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T21:36:09.543Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T21:36:09.544Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:09.545Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T21:36:09.546Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:09.554Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.554Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T21:36:09.554Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.557Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:36:09.557Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.557Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:09.557Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:09.557Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.557Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:09.557Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:09.557Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.557Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:09.557Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:09.558Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.558Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:09.558Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:09.558Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:09.558Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:09.558Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:09.558Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:36:09.559Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:09.559Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T21:36:09.560Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:09.560Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T21:36:09.560Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "invalidCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T21:36:58.334Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.334Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T21:36:58.334Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.334Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:58.346Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T21:36:58.346Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:58.349Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T21:36:58.349Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T21:36:58.350Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:58.350Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:58.350Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:58.374Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T21:36:58.374Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T21:36:58.374Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:58.399Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T21:36:58.400Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T21:36:58.400Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T21:36:58.408Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T21:36:58.408Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T21:36:58.408Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:58.410Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T21:36:58.410Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T21:36:58.410Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:58.411Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:36:58.411Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:36:58.411Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T21:36:58.411Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T21:36:58.411Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:58.413Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:36:58.413Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T21:36:58.413Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:58.413Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.413Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:36:58.413Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.413Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.413Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.413Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T21:36:58.413Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:58.414Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T21:36:58.415Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T21:36:58.415Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:58.415Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T21:36:58.416Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:58.419Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:36:58.419Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.419Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T21:36:58.419Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.419Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:36:58.421Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:58.421Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.421Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.421Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T21:36:58.421Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.421Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.421Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T21:36:58.421Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.421Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T21:36:58.421Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.421Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:58.423Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:36:58.423Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.423Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.423Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T21:36:58.423Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.423Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.423Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T21:36:58.423Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.423Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T21:36:58.423Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.423Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:36:58.425Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.425Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.425Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.425Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T21:36:58.425Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.425Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.425Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.427Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.427Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.427Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T21:36:58.427Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.427Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.427Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.429Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:36:58.429Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.429Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.429Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T21:36:58.429Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.429Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T21:36:58.429Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.429Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.429Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.429Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:36:58.430Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.430Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.430Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T21:36:58.430Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.430Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.430Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T21:36:58.432Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T21:36:58.432Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T21:36:58.432Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T21:36:58.432Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:58.434Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.434Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.434Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:58.436Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.436Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T21:36:58.436Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.436Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:58.446Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:36:58.447Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.448Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T21:36:58.448Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.448Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:58.449Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:36:58.449Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.449Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T21:36:58.449Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.449Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:58.451Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:36:58.452Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:36:58.453Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:36:58.453Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.453Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.453Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:36:58.454Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T21:36:58.454Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T21:36:58.455Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T21:36:58.455Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:58.457Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.459Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:58.459Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:36:58.459Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.459Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:58.459Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.459Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:58.459Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.459Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:58.459Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:36:58.459Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:58.459Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.459Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:58.459Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:36:58.460Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:58.460Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.460Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:58.460Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T21:36:58.460Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:58.460Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.460Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:58.460Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:36:58.460Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:58.460Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.460Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:58.460Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T21:36:58.460Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T21:36:58.462Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:58.464Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:36:58.465Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:36:58.465Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.465Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:58.465Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:58.466Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T21:36:58.466Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:58.467Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:58.469Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T21:36:58.469Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.469Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T21:36:58.469Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:36:58.469Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.469Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T21:36:58.469Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:58.470Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:58.471Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.471Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:58.471Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:58.471Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.471Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:58.471Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:58.473Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:58.475Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T21:36:58.475Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.475Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T21:36:58.475Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:58.475Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.475Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:58.475Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:58.475Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:58.476Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:58.478Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.478Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T21:36:58.478Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.478Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T21:36:58.478Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T21:36:58.479Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T21:36:58.479Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:58.481Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:58.482Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.482Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T21:36:58.482Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.482Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T21:36:58.484Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T21:36:58.485Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T21:36:58.485Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T21:36:58.485Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T21:36:58.485Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T21:36:58.486Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T21:36:58.486Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T21:36:58.486Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:58.489Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.489Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.489Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.489Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T21:36:58.489Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.489Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:36:58.489Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.491Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:36:58.491Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.493Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:58.493Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:36:58.493Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:36:58.494Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:36:58.494Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T21:36:58.494Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:36:58.495Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T21:36:58.496Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T21:36:58.496Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:58.497Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T21:36:58.497Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:36:58.498Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.498Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T21:36:58.498Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.499Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:36:58.499Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.499Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:36:58.499Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:36:58.499Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.499Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:36:58.499Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:36:58.499Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.499Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:36:58.499Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:36:58.500Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.500Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:36:58.500Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:36:58.500Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:36:58.500Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:36:58.500Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:36:58.500Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:36:58.500Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:36:58.500Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T21:36:58.503Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:36:58.503Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T21:36:58.503Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:40:34.191Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "type": "string",
      "value": {
        "operation": "get",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T21:40:34.191Z",
      "description": "Set variable undefined to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "invalidCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 2
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T21:40:34.204Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.204Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T21:40:34.204Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.204Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:40:34.223Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T21:40:34.223Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:40:34.231Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T21:40:34.231Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T21:40:34.232Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:40:34.232Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T21:40:34.232Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:40:34.234Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T21:40:34.234Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T21:40:34.234Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:40:34.236Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T21:40:34.236Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T21:40:34.236Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T21:40:34.297Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T21:40:34.297Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T21:40:34.297Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:40:34.299Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T21:40:34.299Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T21:40:34.299Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:40:34.300Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:40:34.300Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:40:34.300Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T21:40:34.301Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T21:40:34.301Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:40:34.302Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:40:34.302Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T21:40:34.303Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:40:34.303Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.303Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:40:34.303Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.303Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.303Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.303Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T21:40:34.303Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:40:34.304Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T21:40:34.305Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T21:40:34.305Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:40:34.306Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T21:40:34.306Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:40:34.308Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:40:34.308Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.308Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T21:40:34.308Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.308Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:40:34.316Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:40:34.316Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.316Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.316Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T21:40:34.316Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.316Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.316Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T21:40:34.317Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.317Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T21:40:34.317Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.317Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:40:34.318Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:40:34.318Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.318Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.320Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T21:40:34.320Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.320Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.320Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T21:40:34.320Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.320Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T21:40:34.320Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.320Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:40:34.322Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.322Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.323Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.323Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T21:40:34.323Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.323Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.323Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.325Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.325Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.325Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T21:40:34.325Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.325Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.325Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.327Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:40:34.327Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.327Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.327Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T21:40:34.327Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.327Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T21:40:34.327Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.327Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.327Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.327Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:40:34.328Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.328Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.328Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T21:40:34.328Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.328Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.328Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T21:40:34.332Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T21:40:34.332Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T21:40:34.332Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T21:40:34.332Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:40:34.334Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.334Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.334Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:40:34.335Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.335Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T21:40:34.335Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.335Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:40:34.336Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:40:34.336Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.336Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T21:40:34.336Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.336Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:40:34.338Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:40:34.339Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.340Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T21:40:34.340Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.340Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:40:34.343Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:40:34.343Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T21:40:34.347Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T21:40:34.347Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.348Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.348Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T21:40:34.351Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T21:40:34.351Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T21:40:34.352Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T21:40:34.352Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:40:34.353Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T21:40:34.353Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:40:34.354Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:40:34.356Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:40:34.357Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:40:34.357Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.357Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:40:34.357Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T21:40:34.357Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:40:34.358Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:40:34.358Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T21:40:34.358Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.358Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:40:34.358Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:40:34.358Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:40:34.358Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.358Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:40:34.358Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:40:34.358Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:40:34.358Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.358Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:40:34.358Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:40:34.359Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:40:34.359Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.359Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:40:34.359Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T21:40:34.359Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T21:40:34.359Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T21:40:34.359Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:40:34.361Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:40:34.363Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.365Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:40:34.366Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.369Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:40:34.369Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.369Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:40:34.369Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:40:34.369Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.369Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:40:34.369Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:40:34.369Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.369Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:40:34.369Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:40:34.369Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.370Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:40:34.370Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:40:34.370Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.370Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:40:34.370Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:40:34.370Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.370Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:40:34.370Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:40:34.372Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T21:40:34.372Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.372Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T21:40:34.372Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:40:34.372Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:40:34.373Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:40:34.376Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.376Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T21:40:34.376Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.376Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T21:40:34.378Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T21:40:34.378Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T21:40:34.378Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:40:34.379Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:40:34.380Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.380Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T21:40:34.380Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.380Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T21:40:34.381Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T21:40:34.382Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T21:40:34.382Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T21:40:34.382Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T21:40:34.382Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T21:40:34.384Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T21:40:34.384Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T21:40:34.384Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:40:34.385Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.385Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.385Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.385Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T21:40:34.385Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.385Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T21:40:34.385Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.388Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T21:40:34.388Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.389Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:40:34.389Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:40:34.390Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T21:40:34.391Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T21:40:34.391Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T21:40:34.391Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T21:40:34.392Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T21:40:34.392Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T21:40:34.392Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:40:34.393Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T21:40:34.394Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T21:40:34.395Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.395Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T21:40:34.395Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.396Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T21:40:34.396Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.396Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T21:40:34.396Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T21:40:34.396Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.396Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T21:40:34.396Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T21:40:34.396Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.396Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T21:40:34.396Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T21:40:34.397Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.397Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T21:40:34.397Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T21:40:34.397Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T21:40:34.397Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T21:40:34.397Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T21:40:34.397Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T21:40:34.397Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T21:40:34.397Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T21:40:34.398Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T21:40:34.398Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T21:40:34.398Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:22:17.850Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "type": "string",
      "value": {
        "operation": "get",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:22:17.850Z",
      "description": "Set variable undefined to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T22:22:17.856Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.856Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T22:22:17.856Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.856Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:22:17.863Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T22:22:17.863Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:22:17.864Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T22:22:17.864Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T22:22:17.866Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:22:17.866Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T22:22:17.866Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:22:17.868Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T22:22:17.868Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:22:17.868Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:22:17.869Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T22:22:17.869Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T22:22:17.869Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T22:22:17.877Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T22:22:17.877Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T22:22:17.877Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:22:17.878Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T22:22:17.878Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T22:22:17.878Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:22:17.879Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:22:17.880Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:22:17.880Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:22:17.880Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:22:17.880Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:22:17.881Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:22:17.882Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T22:22:17.882Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:22:17.882Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.882Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:22:17.882Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.882Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.882Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.882Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T22:22:17.882Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:22:17.885Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:22:17.885Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:22:17.885Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:22:17.887Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:22:17.887Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:22:17.889Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:22:17.889Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.900Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T22:22:17.900Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.900Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:22:17.903Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:22:17.903Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.903Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.903Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T22:22:17.903Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.903Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.903Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:22:17.903Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.903Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T22:22:17.903Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.903Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:22:17.905Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:22:17.905Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.905Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.905Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T22:22:17.905Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.905Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.905Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T22:22:17.905Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.905Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T22:22:17.905Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.905Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:22:17.906Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:17.906Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.906Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.906Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T22:22:17.906Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.906Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.906Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:17.908Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.908Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.909Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T22:22:17.909Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.909Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.909Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:17.910Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:22:17.910Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.910Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.910Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T22:22:17.910Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.910Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T22:22:17.910Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.910Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.910Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.910Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:22:17.911Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.911Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.911Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T22:22:17.911Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.911Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.911Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T22:22:17.913Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T22:22:17.913Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T22:22:17.913Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T22:22:17.913Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:22:17.915Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.915Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.915Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:22:17.918Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.918Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T22:22:17.918Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.918Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:22:17.921Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:22:17.921Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.921Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T22:22:17.921Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.921Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:22:17.922Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:22:17.922Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.922Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T22:22:17.922Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.922Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:22:17.924Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:22:17.924Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:22:17.946Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:22:17.946Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.946Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.946Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:22:17.949Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:22:17.949Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T22:22:17.950Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T22:22:17.950Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:22:17.952Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:17.953Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:22:17.953Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:22:17.953Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.953Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:22:17.953Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T22:22:17.954Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T22:22:17.956Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:22:17.958Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:22:17.960Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:22:17.961Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T22:22:17.961Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.961Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:22:17.961Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:22:17.961Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.961Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T22:22:17.961Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:22:17.961Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:22:17.962Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:22:17.964Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:22:17.992Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.993Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T22:22:17.993Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:22:17.993Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.993Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T22:22:17.993Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:22:17.993Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.993Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T22:22:17.993Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:22:17.993Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T22:22:17.993Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:22:17.993Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:22:17.999Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:17.999Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:22:17.999Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:17.999Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T22:22:18.000Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T22:22:18.000Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T22:22:18.000Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:22:18.004Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:22:18.006Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:18.006Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:22:18.006Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:18.006Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:22:18.007Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:22:18.008Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T22:22:18.008Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T22:22:18.008Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T22:22:18.008Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T22:22:18.010Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T22:22:18.010Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T22:22:18.010Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:22:18.011Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:18.012Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:22:18.012Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T22:22:18.012Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T22:22:18.012Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:18.012Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:22:18.013Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:18.015Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:22:18.015Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:18.016Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:22:18.016Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:22:18.016Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:22:18.017Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:22:18.017Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T22:22:18.017Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:22:18.018Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:22:18.019Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T22:22:18.019Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:22:18.020Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T22:22:18.020Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:22:18.021Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:18.021Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T22:22:18.021Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:22:18.022Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T22:22:18.024Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:22:18.024Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T22:22:18.024Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:04.187Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:24:04.187Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T22:24:04.192Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.192Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T22:24:04.192Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.192Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:04.194Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T22:24:04.194Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:04.195Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T22:24:04.195Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T22:24:04.196Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:04.196Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:04.196Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:04.197Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T22:24:04.197Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:24:04.197Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:04.198Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T22:24:04.198Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T22:24:04.198Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T22:24:04.203Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T22:24:04.203Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T22:24:04.203Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:04.204Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T22:24:04.204Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T22:24:04.204Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:04.207Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:24:04.207Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:24:04.207Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:24:04.207Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:24:04.207Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:04.208Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:24:04.208Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T22:24:04.208Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:04.208Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.208Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:24:04.208Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.208Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.208Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.208Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T22:24:04.208Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:04.209Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:24:04.209Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:24:04.209Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:04.210Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:24:04.210Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:04.212Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:04.212Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.212Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T22:24:04.212Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.212Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:04.213Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:04.213Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.213Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.213Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T22:24:04.213Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.213Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.213Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:24:04.213Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.213Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T22:24:04.213Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.213Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:04.214Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:24:04.214Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.214Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.214Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T22:24:04.214Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.214Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.214Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T22:24:04.214Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.214Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T22:24:04.214Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.214Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:24:04.215Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.215Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.216Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.216Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T22:24:04.216Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.216Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.216Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.217Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.217Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.217Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T22:24:04.217Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.217Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.217Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.218Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:04.218Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.218Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.218Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T22:24:04.218Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.218Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T22:24:04.218Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.218Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.218Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.218Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:24:04.219Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.219Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.219Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T22:24:04.219Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.219Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.219Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T22:24:04.220Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T22:24:04.220Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T22:24:04.220Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T22:24:04.220Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:04.221Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.221Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.221Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:04.222Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.222Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T22:24:04.222Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.222Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:04.223Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:04.223Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.223Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T22:24:04.224Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.224Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:04.224Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:04.224Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.225Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T22:24:04.225Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.225Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:04.226Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:04.226Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:04.226Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:04.226Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.227Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.227Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:04.227Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:24:04.227Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T22:24:04.228Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T22:24:04.228Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.236Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:24:04.237Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.237Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.237Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:04.237Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.244Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T22:24:04.245Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:04.249Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:04.249Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T22:24:04.249Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.249Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:04.249Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:04.249Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:04.249Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.249Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:04.249Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:04.249Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:04.249Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.249Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:04.249Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:04.250Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:04.250Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.250Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:04.250Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T22:24:04.250Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:24:04.250Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T22:24:04.250Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:04.253Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:04.253Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:24:04.253Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.256Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:04.256Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:04.256Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:04.256Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.256Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:04.256Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:04.256Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:04.256Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.256Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:04.256Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:04.256Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:04.256Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.257Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:04.257Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:04.257Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.257Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.257Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:04.257Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:04.257Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:04.257Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.257Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:04.257Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:04.281Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:04.283Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T22:24:04.283Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.283Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:24:04.283Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:24:04.283Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.283Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T22:24:04.283Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:24:04.283Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.283Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:24:04.283Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:24:04.283Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.283Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T22:24:04.283Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:04.284Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:04.285Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:04.287Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:24:04.289Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.290Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T22:24:04.290Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:24:04.290Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.290Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T22:24:04.290Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:04.290Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.290Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T22:24:04.290Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:24:04.290Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.290Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:04.290Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:04.292Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.292Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:24:04.292Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.292Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T22:24:04.292Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T22:24:04.292Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T22:24:04.293Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:04.295Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:04.295Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.296Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:24:04.296Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.296Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:24:04.297Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:24:04.298Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T22:24:04.298Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T22:24:04.298Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T22:24:04.298Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T22:24:04.299Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T22:24:04.299Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T22:24:04.299Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:04.300Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.300Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.300Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.300Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T22:24:04.300Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.300Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:04.300Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.302Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:24:04.302Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.303Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:04.303Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:04.303Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:24:04.303Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:04.303Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T22:24:04.304Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:24:04.304Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:24:04.304Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T22:24:04.305Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:04.307Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T22:24:04.307Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:04.308Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.308Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T22:24:04.308Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:04.311Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T22:24:04.313Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:04.313Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T22:24:04.313Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:39.280Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:24:39.280Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T22:24:39.281Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.281Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T22:24:39.281Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.281Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:39.283Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T22:24:39.283Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:39.284Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T22:24:39.284Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T22:24:39.285Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:39.285Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:39.285Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:39.286Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T22:24:39.286Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:24:39.286Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:39.287Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T22:24:39.287Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T22:24:39.287Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T22:24:39.304Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T22:24:39.304Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T22:24:39.304Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:39.305Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T22:24:39.305Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T22:24:39.305Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:39.306Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:24:39.306Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:24:39.306Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:24:39.306Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:24:39.306Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:39.307Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:24:39.307Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T22:24:39.307Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:39.307Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.307Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:24:39.307Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.307Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.307Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.307Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T22:24:39.307Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:39.308Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:24:39.309Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:24:39.309Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:39.309Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:24:39.309Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:39.311Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:39.311Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.311Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T22:24:39.311Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.311Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:39.312Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:39.312Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.312Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.312Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T22:24:39.312Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.312Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.312Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:24:39.312Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.312Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T22:24:39.312Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.312Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:39.313Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:24:39.314Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.314Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.314Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T22:24:39.314Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.314Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.314Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T22:24:39.314Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.314Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T22:24:39.314Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.314Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:24:39.315Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.315Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.315Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.315Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T22:24:39.315Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.315Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.315Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.316Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.316Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.316Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T22:24:39.316Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.316Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.316Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.317Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:39.317Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.317Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.317Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T22:24:39.317Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.317Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T22:24:39.317Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.317Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.317Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.317Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:24:39.318Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.318Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.318Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T22:24:39.318Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.318Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.318Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T22:24:39.319Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T22:24:39.319Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T22:24:39.319Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T22:24:39.319Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:39.320Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.320Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.320Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:39.321Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.321Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T22:24:39.321Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.321Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:39.322Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:39.322Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.322Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T22:24:39.322Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.322Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:39.323Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:39.323Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.324Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T22:24:39.324Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.324Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:39.324Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:39.325Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:39.325Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:39.325Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.325Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.325Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:39.326Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:24:39.326Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T22:24:39.327Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T22:24:39.327Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.328Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:24:39.329Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.329Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.329Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:24:39.329Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.329Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:24:39.329Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.329Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.329Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:39.329Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.330Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:39.331Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T22:24:39.331Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:39.331Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.331Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:39.331Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:39.331Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:39.331Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.331Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:39.331Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T22:24:39.331Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:39.332Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:39.332Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T22:24:39.332Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.332Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T22:24:39.333Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.334Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.335Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:39.335Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:39.335Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:39.335Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.335Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:39.335Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:39.336Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:39.337Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T22:24:39.337Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:39.338Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:39.340Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:39.341Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T22:24:39.341Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.341Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:24:39.341Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:39.342Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:39.344Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.344Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:24:39.344Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.344Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T22:24:39.345Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T22:24:39.345Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T22:24:39.345Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:39.346Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:39.348Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.348Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:24:39.348Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.348Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:24:39.350Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:24:39.351Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T22:24:39.351Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T22:24:39.351Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T22:24:39.351Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T22:24:39.352Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T22:24:39.352Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T22:24:39.352Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:39.353Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.353Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.353Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.353Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T22:24:39.353Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.353Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:39.353Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.354Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:24:39.355Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.355Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:39.355Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:39.355Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:24:39.359Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:39.359Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T22:24:39.359Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:24:39.360Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:24:39.360Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T22:24:39.360Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:39.361Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T22:24:39.361Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:39.362Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.363Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T22:24:39.363Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.364Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:24:39.364Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.365Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:39.365Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:39.365Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.365Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:39.365Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:39.365Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.365Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:39.365Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:39.365Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.365Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:39.365Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:39.366Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:39.366Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:39.366Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:39.366Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:24:39.366Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:39.366Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T22:24:39.367Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:39.367Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T22:24:39.367Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.522Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:24:54.522Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:54.524Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.524Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:24:54.525Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.532Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-30T22:24:54.532Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "invalidCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.545Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:24:54.545Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T22:24:54.546Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.546Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T22:24:54.546Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.546Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.549Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T22:24:54.549Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.551Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T22:24:54.551Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T22:24:54.555Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:54.555Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:54.555Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.557Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T22:24:54.557Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.557Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.560Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T22:24:54.560Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T22:24:54.560Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T22:24:54.566Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T22:24:54.566Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T22:24:54.566Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.567Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T22:24:54.567Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T22:24:54.567Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.570Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:24:54.570Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:24:54.570Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:24:54.570Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:24:54.570Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:54.571Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:24:54.572Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T22:24:54.572Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:54.572Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.572Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:24:54.572Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.572Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.572Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.572Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T22:24:54.572Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.573Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:24:54.573Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:24:54.573Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:54.574Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:24:54.574Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:54.576Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:54.577Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.577Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T22:24:54.577Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.577Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:54.578Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:54.578Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.578Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.578Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T22:24:54.578Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.578Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.578Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:24:54.578Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.579Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T22:24:54.579Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.579Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:54.582Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:24:54.582Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.582Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.582Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T22:24:54.582Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.582Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.582Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T22:24:54.582Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.582Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T22:24:54.582Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.582Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:24:54.584Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.584Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.584Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.585Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T22:24:54.585Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.585Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.585Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.587Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.587Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.587Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T22:24:54.587Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.587Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.587Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.588Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:54.588Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.588Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.588Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T22:24:54.588Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.588Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T22:24:54.588Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.588Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.588Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.588Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:24:54.589Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.589Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.590Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T22:24:54.590Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.590Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.590Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T22:24:54.591Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T22:24:54.591Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T22:24:54.591Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T22:24:54.591Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:54.592Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.592Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.592Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:54.594Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.594Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T22:24:54.594Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.594Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:54.596Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:54.596Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.596Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T22:24:54.596Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.596Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:54.597Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:54.598Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.598Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T22:24:54.598Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.598Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:54.599Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:54.599Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:24:54.602Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:24:54.602Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.603Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.603Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.606Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:24:54.606Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T22:24:54.607Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T22:24:54.607Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:54.608Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T22:24:54.608Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:54.609Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.613Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:54.613Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:24:54.613Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.613Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:54.613Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.613Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T22:24:54.614Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T22:24:54.616Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:54.618Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:54.620Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:54.624Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:54.625Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:54.628Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:54.630Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:54.632Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.632Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:24:54.632Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.632Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T22:24:54.633Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T22:24:54.633Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T22:24:54.633Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:54.635Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:54.635Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.635Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:24:54.635Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.635Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:24:54.639Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:24:54.652Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T22:24:54.652Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T22:24:54.652Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T22:24:54.652Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T22:24:54.655Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T22:24:54.655Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T22:24:54.655Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:54.656Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.656Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.656Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.656Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T22:24:54.656Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.656Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:24:54.656Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.658Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:24:54.658Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.659Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:54.659Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:54.659Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:24:54.660Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:24:54.660Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T22:24:54.660Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:24:54.662Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:24:54.662Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T22:24:54.662Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:54.663Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T22:24:54.663Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:24:54.664Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.664Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T22:24:54.664Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.666Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:24:54.666Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.666Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:24:54.666Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:24:54.666Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.666Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:24:54.666Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:24:54.666Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.666Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:24:54.666Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:24:54.666Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.667Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:24:54.667Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:24:54.667Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:24:54.667Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:24:54.667Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:24:54.667Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:24:54.667Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:24:54.667Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T22:24:54.673Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:24:54.673Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T22:24:54.673Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.313Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:26:35.313Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:26:35.314Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.314Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:26:35.314Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.315Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-30T22:26:35.315Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "invalidCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.322Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:26:35.322Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T22:26:35.323Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.324Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T22:26:35.324Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.324Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.326Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T22:26:35.326Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.327Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T22:26:35.327Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T22:26:35.328Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:26:35.328Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T22:26:35.328Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.330Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T22:26:35.330Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.330Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.331Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T22:26:35.331Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T22:26:35.331Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T22:26:35.339Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T22:26:35.339Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T22:26:35.339Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.341Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T22:26:35.341Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T22:26:35.341Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.343Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:26:35.343Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:26:35.343Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:26:35.343Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:26:35.343Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:26:35.344Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:26:35.344Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T22:26:35.344Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:26:35.344Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.345Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:26:35.345Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.345Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.345Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.345Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T22:26:35.345Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.346Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:26:35.346Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:26:35.346Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:26:35.347Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:26:35.347Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:26:35.349Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:26:35.349Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.356Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T22:26:35.356Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.356Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:26:35.357Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:26:35.357Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.357Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.357Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T22:26:35.357Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.357Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.357Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:26:35.357Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.357Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T22:26:35.357Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.357Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:26:35.359Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:26:35.359Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.360Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.360Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T22:26:35.360Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.360Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.360Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T22:26:35.360Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.360Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T22:26:35.360Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.360Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:26:35.361Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.361Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.361Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.361Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T22:26:35.361Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.361Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.361Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.362Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.363Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.363Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T22:26:35.363Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.363Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.363Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.364Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:26:35.364Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.364Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.364Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T22:26:35.364Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.364Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T22:26:35.364Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.364Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.364Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.364Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:26:35.365Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.365Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.365Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T22:26:35.365Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.365Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.365Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T22:26:35.366Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T22:26:35.366Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T22:26:35.366Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T22:26:35.366Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:26:35.367Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.368Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.368Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:26:35.373Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.373Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T22:26:35.373Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.373Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:26:35.375Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:26:35.375Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.375Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T22:26:35.375Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.375Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:26:35.376Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:26:35.376Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.376Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T22:26:35.376Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.376Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:26:35.377Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:26:35.377Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:26:35.378Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:26:35.378Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.378Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.378Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.379Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:26:35.379Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T22:26:35.380Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T22:26:35.380Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:26:35.381Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T22:26:35.381Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:26:35.382Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:26:35.384Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:26:35.385Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.385Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:26:35.385Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T22:26:35.385Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T22:26:35.386Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:26:35.388Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:26:35.389Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.389Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.389Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:26:35.389Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:26:35.389Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:26:35.389Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.389Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:26:35.389Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:26:35.391Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T22:26:35.393Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:26:35.394Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.395Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:26:35.396Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:26:35.397Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T22:26:35.397Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.397Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:26:35.397Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:26:35.397Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.397Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:26:35.397Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:26:35.397Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:26:35.398Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:26:35.400Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.400Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:26:35.400Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.400Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T22:26:35.401Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T22:26:35.401Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T22:26:35.401Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:26:35.403Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:26:35.405Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.406Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:26:35.406Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.406Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:26:35.408Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:26:35.410Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T22:26:35.410Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T22:26:35.410Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T22:26:35.410Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T22:26:35.412Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T22:26:35.412Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T22:26:35.412Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:26:35.415Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.415Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.415Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.415Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T22:26:35.415Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.415Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:26:35.415Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.417Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:26:35.417Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.421Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:26:35.421Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:26:35.421Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:26:35.424Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:26:35.424Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T22:26:35.426Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:26:35.428Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:26:35.428Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T22:26:35.429Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:26:35.430Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T22:26:35.430Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:26:35.431Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.432Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T22:26:35.432Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:26:35.433Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T22:26:35.447Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:26:35.447Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T22:26:35.448Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.559Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:27:07.560Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:07.561Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.561Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:27:07.561Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.563Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-30T22:27:07.563Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "invalidCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.573Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:27:07.573Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T22:27:07.574Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.574Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T22:27:07.574Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.574Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.576Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T22:27:07.576Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.577Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T22:27:07.577Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T22:27:07.579Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:07.579Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:07.579Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.582Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T22:27:07.582Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.582Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.583Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T22:27:07.583Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T22:27:07.583Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T22:27:07.591Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T22:27:07.591Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T22:27:07.591Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.592Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T22:27:07.592Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T22:27:07.592Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.594Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:27:07.594Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:27:07.594Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:27:07.594Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:27:07.594Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:07.598Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:27:07.598Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T22:27:07.598Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:07.598Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.598Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:27:07.598Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.598Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.598Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.598Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T22:27:07.598Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.599Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:27:07.599Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:27:07.599Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:07.600Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:27:07.600Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:07.602Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:07.602Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.602Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T22:27:07.602Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.602Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:07.604Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:07.604Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.604Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.604Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T22:27:07.604Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.604Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.604Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:27:07.604Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.604Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T22:27:07.604Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.604Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:07.605Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:27:07.605Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.605Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.605Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T22:27:07.605Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.605Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.605Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T22:27:07.605Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.605Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T22:27:07.605Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.605Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:27:07.607Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.607Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.607Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.607Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T22:27:07.607Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.607Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.607Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.608Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.608Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.608Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T22:27:07.608Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.608Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.608Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.609Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:07.609Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.609Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.609Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T22:27:07.609Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.609Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T22:27:07.609Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.609Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.609Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.609Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:27:07.611Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.611Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.611Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T22:27:07.611Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.611Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.611Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T22:27:07.613Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T22:27:07.613Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T22:27:07.613Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T22:27:07.614Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:07.614Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.614Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.614Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:07.615Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.616Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T22:27:07.616Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.616Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:07.617Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:07.617Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.617Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T22:27:07.617Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.617Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:07.619Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:07.619Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.619Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T22:27:07.619Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.619Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:07.620Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:07.620Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:07.621Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:07.621Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.621Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.621Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.622Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:27:07.622Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T22:27:07.623Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T22:27:07.623Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:07.624Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:07.626Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:07.627Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:07.627Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.627Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:07.627Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T22:27:07.627Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:07.628Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:07.628Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T22:27:07.628Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.628Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:07.628Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:07.628Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T22:27:07.629Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:07.631Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:07.631Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:27:07.631Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.631Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:07.631Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:07.631Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:07.631Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.631Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:07.631Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:07.631Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:07.631Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.631Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:07.632Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:07.632Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:07.632Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.632Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:07.632Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:07.632Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.632Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.632Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:07.632Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:07.632Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:07.632Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.632Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:07.632Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:07.633Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:07.635Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T22:27:07.635Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.635Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:27:07.635Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:27:07.635Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.635Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T22:27:07.635Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:27:07.635Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.635Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:27:07.635Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:07.636Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.638Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:27:07.638Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.638Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:07.638Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:07.638Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.638Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:07.638Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:07.638Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.639Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:07.639Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:07.639Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.639Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:07.639Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:07.639Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.639Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:07.639Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:07.639Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.639Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:07.639Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.640Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:07.641Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:07.643Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.643Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:27:07.643Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.643Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T22:27:07.644Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T22:27:07.644Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T22:27:07.644Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:07.647Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:07.648Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.648Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:27:07.648Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.648Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:27:07.649Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:27:07.650Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T22:27:07.650Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T22:27:07.650Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T22:27:07.650Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T22:27:07.651Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T22:27:07.652Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T22:27:07.652Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:07.654Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.654Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.654Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.654Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T22:27:07.654Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.654Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:07.654Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.655Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:27:07.655Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.656Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:07.656Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:07.656Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:27:07.658Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:07.658Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T22:27:07.658Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:27:07.659Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:27:07.659Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T22:27:07.659Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:07.661Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T22:27:07.661Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:07.662Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.665Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T22:27:07.665Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.666Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:27:07.666Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.666Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:07.666Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:07.667Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T22:27:07.670Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:07.670Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T22:27:07.670Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.418Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:27:29.419Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:29.420Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.420Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:27:29.420Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.422Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-30T22:27:29.422Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "invalidCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-30T22:27:29.425Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-30T22:27:29.425Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.427Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:27:29.427Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T22:27:29.431Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.431Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T22:27:29.431Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.431Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.433Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T22:27:29.433Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.434Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T22:27:29.434Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T22:27:29.437Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:29.437Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:29.437Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.439Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T22:27:29.439Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.439Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.440Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T22:27:29.440Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T22:27:29.440Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T22:27:29.449Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T22:27:29.449Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T22:27:29.449Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.450Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T22:27:29.450Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T22:27:29.450Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.454Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:27:29.454Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:27:29.455Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:27:29.455Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:27:29.455Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:29.456Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:27:29.456Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T22:27:29.456Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:29.456Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.456Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:27:29.456Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.457Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.457Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.457Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T22:27:29.457Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.459Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:27:29.459Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:27:29.459Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:29.462Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:27:29.462Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:29.464Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:29.464Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.464Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T22:27:29.464Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.464Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:29.466Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:29.466Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.466Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.466Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T22:27:29.466Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.466Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.466Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:27:29.466Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.466Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T22:27:29.466Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.466Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:29.468Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:27:29.468Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.468Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.468Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T22:27:29.469Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.469Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.469Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T22:27:29.469Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.469Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T22:27:29.469Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.469Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:27:29.549Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.549Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.549Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.549Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T22:27:29.549Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.549Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.549Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.557Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.558Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.558Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T22:27:29.558Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.558Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.558Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.570Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:29.570Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.570Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.570Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T22:27:29.570Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.570Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T22:27:29.570Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.570Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.570Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.570Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:27:29.572Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.572Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.572Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T22:27:29.572Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.572Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.572Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T22:27:29.573Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T22:27:29.574Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T22:27:29.574Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T22:27:29.574Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:29.575Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.575Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.575Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:29.576Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.576Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T22:27:29.576Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.576Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:29.577Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:29.578Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.578Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T22:27:29.578Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.578Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:29.580Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:29.580Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.580Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T22:27:29.580Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.580Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:29.583Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:29.583Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:29.585Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:29.585Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.585Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.585Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.586Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:27:29.586Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T22:27:29.588Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T22:27:29.588Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.589Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:27:29.590Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.590Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.590Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:27:29.590Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.590Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:27:29.590Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.590Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.590Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:29.590Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T22:27:29.593Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T22:27:29.609Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:27:29.610Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T22:27:29.610Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:29.611Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:29.612Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.612Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.612Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:29.612Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:29.612Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:29.612Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.612Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:29.612Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:29.617Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:27:29.617Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.617Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:27:29.617Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:29.617Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:29.618Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:29.620Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T22:27:29.620Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.620Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:27:29.620Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:27:29.620Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.620Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T22:27:29.620Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:27:29.621Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.621Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:27:29.621Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:27:29.621Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.621Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T22:27:29.621Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:29.621Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.621Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T22:27:29.621Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.622Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.622Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:29.622Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:29.622Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.622Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:29.622Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:29.622Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.622Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:29.622Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:29.622Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.622Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:29.622Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:29.623Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.623Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:29.623Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:29.623Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.623Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:29.623Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:29.625Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:29.627Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T22:27:29.627Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.627Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:27:29.627Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:29.627Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:29.628Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:29.630Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.630Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:27:29.630Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.630Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T22:27:29.631Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T22:27:29.631Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T22:27:29.631Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:29.632Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:29.634Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.634Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:27:29.634Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.634Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:27:29.635Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:27:29.637Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T22:27:29.637Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T22:27:29.637Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T22:27:29.637Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T22:27:29.638Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T22:27:29.639Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T22:27:29.639Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:29.642Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.642Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.642Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.642Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T22:27:29.642Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.642Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:29.642Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.643Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:27:29.643Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.644Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:29.644Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:29.644Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:27:29.646Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:29.646Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T22:27:29.646Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:27:29.647Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:27:29.647Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T22:27:29.647Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:29.649Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T22:27:29.650Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:29.651Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.651Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T22:27:29.651Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:29.653Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:29.654Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:27:29.654Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:29.654Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T22:27:29.658Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:29.658Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T22:27:29.658Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.608Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:27:50.608Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:50.609Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.609Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:27:50.609Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.610Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-30T22:27:50.611Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "invalidCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.612Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "invalidCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": -1,
        "result": ""
      },
      "timestamp": "2024-08-30T22:27:50.612Z",
      "description": "Set variable invalidCharacter to myString[-1]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-30T22:27:50.617Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-30T22:27:50.617Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.619Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:27:50.619Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T22:27:50.620Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.620Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T22:27:50.620Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.620Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.622Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T22:27:50.622Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.623Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T22:27:50.623Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T22:27:50.624Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:50.624Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:50.624Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.626Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T22:27:50.626Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.626Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.628Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T22:27:50.628Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T22:27:50.628Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T22:27:50.635Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T22:27:50.635Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T22:27:50.635Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.637Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T22:27:50.637Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T22:27:50.637Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.642Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:27:50.642Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:27:50.642Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:27:50.642Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:27:50.642Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:50.644Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:27:50.644Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T22:27:50.644Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:50.645Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.645Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:27:50.645Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.645Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.645Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.645Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T22:27:50.645Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.646Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:27:50.646Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:27:50.646Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:50.647Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:27:50.647Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:50.648Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:50.648Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.649Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T22:27:50.649Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.649Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:50.650Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:50.651Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.651Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.651Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T22:27:50.651Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.651Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.651Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:27:50.651Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.651Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T22:27:50.651Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.651Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:50.653Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:27:50.653Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.653Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.653Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T22:27:50.653Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.653Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.653Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T22:27:50.653Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.653Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T22:27:50.653Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.653Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:27:50.655Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.655Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.656Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.656Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T22:27:50.656Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.656Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.656Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.657Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.657Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.657Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T22:27:50.657Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.657Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.657Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.659Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:50.659Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.660Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.660Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T22:27:50.660Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.660Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T22:27:50.660Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.660Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.660Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.660Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:27:50.661Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.661Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.661Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T22:27:50.661Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.661Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.661Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T22:27:50.663Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T22:27:50.663Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T22:27:50.663Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T22:27:50.663Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:50.664Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.664Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.664Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:50.665Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.665Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T22:27:50.665Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.665Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:50.666Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:50.666Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.667Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T22:27:50.667Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.667Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:50.670Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:50.670Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.670Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T22:27:50.670Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.670Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:50.671Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:50.671Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:27:50.672Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:27:50.672Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.673Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.673Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.674Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:27:50.674Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T22:27:50.676Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T22:27:50.676Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:50.678Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T22:27:50.678Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.678Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:50.678Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.678Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:50.678Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.678Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.678Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:50.678Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.678Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.678Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.678Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.679Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:50.679Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.679Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:27:50.679Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.679Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.679Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:27:50.679Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.679Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:27:50.679Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.679Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.679Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:50.679Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T22:27:50.683Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:50.688Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:50.688Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T22:27:50.688Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.688Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T22:27:50.689Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:50.691Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:50.691Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:27:50.691Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:50.692Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:50.694Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:27:50.694Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.694Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:27:50.694Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:50.694Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:50.695Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:50.697Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T22:27:50.697Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.697Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:27:50.697Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:27:50.697Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.697Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T22:27:50.697Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:27:50.697Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:50.698Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:50.701Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:50.703Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:50.706Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.707Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:27:50.707Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.707Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T22:27:50.707Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T22:27:50.708Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T22:27:50.708Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:50.710Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:50.713Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.713Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:27:50.713Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.713Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:27:50.715Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:27:50.716Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T22:27:50.717Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T22:27:50.717Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T22:27:50.717Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T22:27:50.718Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T22:27:50.718Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T22:27:50.718Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:50.719Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.719Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.719Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.719Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T22:27:50.719Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.719Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:27:50.719Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.721Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:27:50.721Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.722Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:50.722Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:50.722Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:27:50.723Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:27:50.723Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T22:27:50.723Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:27:50.726Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:27:50.726Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T22:27:50.726Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:50.729Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T22:27:50.729Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:27:50.732Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.732Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T22:27:50.732Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:27:50.735Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T22:27:50.738Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:27:50.738Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T22:27:50.738Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.394Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:28:08.394Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:28:08.395Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.395Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:28:08.395Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.396Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-30T22:28:08.396Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "invalidCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-30T22:28:08.399Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-30T22:28:08.399Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.400Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:28:08.400Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T22:28:08.401Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.401Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T22:28:08.401Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.401Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.403Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T22:28:08.403Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.404Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T22:28:08.404Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T22:28:08.405Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:28:08.405Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T22:28:08.405Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.407Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T22:28:08.407Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.407Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.408Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T22:28:08.408Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T22:28:08.408Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T22:28:08.413Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T22:28:08.413Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T22:28:08.413Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.414Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T22:28:08.414Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T22:28:08.414Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.416Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:28:08.416Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:28:08.416Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:28:08.416Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:28:08.416Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:28:08.417Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:28:08.417Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T22:28:08.417Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:28:08.417Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.417Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:28:08.417Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.417Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.417Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.417Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T22:28:08.417Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.418Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:28:08.418Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:28:08.418Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:28:08.419Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:28:08.419Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:28:08.421Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:28:08.421Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.421Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T22:28:08.421Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.421Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:28:08.422Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:28:08.422Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.423Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.423Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T22:28:08.423Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.423Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.423Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:28:08.423Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.423Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T22:28:08.423Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.423Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:28:08.424Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:28:08.424Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.424Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.424Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T22:28:08.424Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.424Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.424Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T22:28:08.424Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.424Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T22:28:08.424Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.424Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:28:08.425Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.425Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.426Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.426Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T22:28:08.426Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.426Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.426Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.427Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.427Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.427Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T22:28:08.427Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.427Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.427Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.428Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:28:08.428Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.428Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.428Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T22:28:08.428Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.429Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T22:28:08.429Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.429Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.429Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.429Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:28:08.430Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.430Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.430Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T22:28:08.430Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.430Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.430Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T22:28:08.431Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T22:28:08.431Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T22:28:08.431Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T22:28:08.431Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:28:08.432Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.432Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.432Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:28:08.433Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.433Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T22:28:08.433Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.433Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:28:08.434Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:28:08.434Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.435Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T22:28:08.435Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.435Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:28:08.436Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:28:08.436Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.436Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T22:28:08.436Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.436Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:28:08.437Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:28:08.437Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:28:08.438Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:28:08.438Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.438Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.438Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.439Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:28:08.439Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T22:28:08.440Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T22:28:08.440Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:28:08.442Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T22:28:08.444Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T22:28:08.446Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:28:08.448Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:28:08.449Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:28:08.449Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.449Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:28:08.449Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:28:08.449Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:28:08.450Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:28:08.451Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T22:28:08.451Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.451Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:28:08.451Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:28:08.452Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:28:08.454Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:28:08.456Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:28:08.458Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.458Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:28:08.458Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.458Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T22:28:08.459Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T22:28:08.459Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T22:28:08.459Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:28:08.462Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:28:08.463Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.463Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:28:08.463Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.463Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:28:08.464Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:28:08.465Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T22:28:08.465Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T22:28:08.465Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T22:28:08.465Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T22:28:08.466Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T22:28:08.467Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T22:28:08.467Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:28:08.468Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.468Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.468Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.468Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T22:28:08.468Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.468Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:28:08.468Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.469Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:28:08.469Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.470Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:28:08.470Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:28:08.471Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:28:08.472Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:28:08.472Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T22:28:08.472Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:28:08.473Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:28:08.473Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T22:28:08.473Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:28:08.474Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T22:28:08.474Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:28:08.477Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.477Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T22:28:08.477Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.478Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:28:08.478Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.478Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:28:08.478Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:28:08.478Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.478Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:28:08.478Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:28:08.479Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.479Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:28:08.479Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:28:08.479Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.479Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:28:08.479Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:28:08.479Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:28:08.479Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:28:08.479Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:28:08.479Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:28:08.479Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:28:08.479Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T22:28:08.481Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:28:08.481Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T22:28:08.481Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.301Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:49:05.301Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "index",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterAtIndex",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "index"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "index",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:49:05.303Z",
      "description": "Set variable index to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.303Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "characterAtIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:49:05.303Z",
      "description": "Set variable characterAtIndex to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": {
          "type": "Expression",
          "left": {
            "type": "LengthExpression",
            "source": "myString"
          },
          "operator": "-",
          "right": "1"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.304Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 12,
        "result": "!"
      },
      "timestamp": "2024-08-30T22:49:05.304Z",
      "description": "Set variable lastCharacter to myString[12]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "emptyString",
      "value": {
        "type": "StringLiteral",
        "value": "",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "emptyIndex",
      "value": {
        "type": "IndexExpression",
        "source": "emptyString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "emptyString",
      "type": "string",
      "value": "",
      "timestamp": "2024-08-30T22:49:05.308Z",
      "description": "Set variable emptyString to ."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "emptyIndex",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "emptyString",
        "index": 0,
        "result": ""
      },
      "timestamp": "2024-08-30T22:49:05.308Z",
      "description": "Set variable emptyIndex to emptyString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "firstCharacter",
      "value": {
        "type": "IndexExpression",
        "source": "myString",
        "index": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.309Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "firstCharacter",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "myString",
        "index": 0,
        "result": "H"
      },
      "timestamp": "2024-08-30T22:49:05.310Z",
      "description": "Set variable firstCharacter to myString[0]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Test String",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": ">",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "String is long enough"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "String is too short"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Test String",
      "timestamp": "2024-08-30T22:49:05.311Z",
      "description": "Set variable myString to Test String."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "11 > 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.311Z",
      "description": "Checked if 11 > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "String is long enough",
      "timestamp": "2024-08-30T22:49:05.311Z",
      "description": "Printed String is long enough."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.311Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "lengthOfUndefined",
      "value": {
        "type": "LengthExpression",
        "source": "undefinedVariable"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "halfLength",
      "value": {
        "type": "Expression",
        "left": {
          "type": "LengthExpression",
          "source": "myString"
        },
        "operator": "/",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.313Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "halfLength",
      "type": "number",
      "value": 6.5,
      "timestamp": "2024-08-30T22:49:05.313Z",
      "description": "Set variable halfLength to 13 / 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.314Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 13,
      "timestamp": "2024-08-30T22:49:05.314Z",
      "description": "Set variable lengthOfString to 13."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "abc",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthOfString",
      "value": {
        "type": "LengthExpression",
        "source": "myString"
      }
    },
    {
      "type": "PrintStatement",
      "value": "lengthOfString"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "abc",
      "timestamp": "2024-08-30T22:49:05.315Z",
      "description": "Set variable myString to abc."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lengthOfString",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:49:05.315Z",
      "description": "Set variable lengthOfString to 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "lengthOfString",
      "literal": 3,
      "timestamp": "2024-08-30T22:49:05.315Z",
      "description": "Printed lengthOfString."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "13"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.316Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 13,
        "result": "Hello, World!"
      },
      "timestamp": "2024-08-30T22:49:05.317Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 13."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.317Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.319Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 5,
        "end": 5,
        "result": ""
      },
      "timestamp": "2024-08-30T22:49:05.321Z",
      "description": "Set variable subStr to an empty string as start and end indices are identical."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "",
      "timestamp": "2024-08-30T22:49:05.321Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "5",
        "end": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 3
          },
          "operator": "-",
          "right": "1"
        },
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "1",
        "end": "10"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T22:49:05.339Z",
      "description": "Set variable myString to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 1,
        "end": 10,
        "result": "ello"
      },
      "timestamp": "2024-08-30T22:49:05.339Z",
      "description": "Set variable subStr to a substring of myString from index 1 to 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "ello",
      "timestamp": "2024-08-30T22:49:05.339Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "0",
        "end": "5"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.341Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 0,
        "end": 5,
        "result": "Hello"
      },
      "timestamp": "2024-08-30T22:49:05.341Z",
      "description": "Set variable subStr to a substring of myString from index 0 to 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "Hello",
      "timestamp": "2024-08-30T22:49:05.341Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "startIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "7",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "endIndex",
      "value": {
        "type": "NumberLiteral",
        "value": "12",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "startIndex",
        "end": "endIndex"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.342Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "startIndex",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:49:05.343Z",
      "description": "Set variable startIndex to 7."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "endIndex",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:49:05.343Z",
      "description": "Set variable endIndex to 12."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:49:05.343Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:49:05.343Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "42",
        "line": 4
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "max",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 5
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "x",
            "line": 7
          }
        }
      ],
      "alternate": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "y",
            "line": 9
          }
        }
      ]
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "greater",
        "right": "max"
      },
      "consequent": [
        {
          "type": "VariableDeclaration",
          "name": "max",
          "value": {
            "type": "Identifier",
            "value": "z",
            "line": 12
          }
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "max"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:49:05.344Z",
      "description": "Set variable x to 3."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:49:05.344Z",
      "description": "Set variable y to 100."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 42,
      "timestamp": "2024-08-30T22:49:05.344Z",
      "description": "Set variable z to 42."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:49:05.344Z",
      "description": "Set variable max to 0."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > y",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.344Z",
      "description": "Checked if x > y."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "max",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:49:05.344Z",
      "description": "Set variable max to 100."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.344Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "if",
      "condition": "z > max",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.345Z",
      "description": "Checked if z > max."
    },
    {
      "line": 12,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.345Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "print",
      "isLiteral": false,
      "varName": "max",
      "literal": 100,
      "timestamp": "2024-08-30T22:49:05.345Z",
      "description": "Printed max."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myString",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subStr",
      "value": {
        "type": "SubstringExpression",
        "string": "myString",
        "start": "7",
        "end": "12"
      }
    },
    {
      "type": "PrintStatement",
      "value": "subStr"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myString",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.346Z",
      "description": "Set variable myString to Hello, World!."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subStr",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "myString",
        "start": 7,
        "end": 12,
        "result": "World"
      },
      "timestamp": "2024-08-30T22:49:05.346Z",
      "description": "Set variable subStr to a substring of myString from index 7 to 12."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "subStr",
      "literal": "World",
      "timestamp": "2024-08-30T22:49:05.346Z",
      "description": "Printed subStr."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "x"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:49:05.349Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:49:05.349Z",
      "description": "Printed x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": {
          "type": "Expression",
          "left": "p",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "q"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are false"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "At least one is true"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:49:05.351Z",
      "description": "Set variable p to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:49:05.351Z",
      "description": "Set variable q to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "!p && !q",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.351Z",
      "description": "Checked if !p && !q."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "At least one is true",
      "timestamp": "2024-08-30T22:49:05.351Z",
      "description": "Printed At least one is true."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.351Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "y"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "20"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between y and 20"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "y"
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "z",
        "operator": "equal",
        "right": "25"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "z is 25"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:49:05.352Z",
      "description": "Set variable x to 15."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:49:05.352Z",
      "description": "Set variable y to 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > y",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.353Z",
      "description": "Checked if x > y."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 20",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.353Z",
      "description": "Checked if x < 20."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between y and 20",
      "timestamp": "2024-08-30T22:49:05.353Z",
      "description": "Printed x is between y and 20."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.353Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.353Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:49:05.353Z",
      "description": "Set variable z to x + y."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "z == 25",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.353Z",
      "description": "Checked if z == 25."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "z is 25",
      "timestamp": "2024-08-30T22:49:05.353Z",
      "description": "Printed z is 25."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.353Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "25"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 25"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    },
    {
      "type": "PrintStatement",
      "value": "This is a normal statement"
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "y",
        "operator": "equal",
        "right": "20"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "y is equal to 20"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:49:05.354Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:49:05.354Z",
      "description": "Set variable y to 20."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.354Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 25",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.354Z",
      "description": "Checked if y < 25."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 25",
      "timestamp": "2024-08-30T22:49:05.354Z",
      "description": "Printed y is less than 25."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.354Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.354Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "This is a normal statement",
      "timestamp": "2024-08-30T22:49:05.354Z",
      "description": "Printed This is a normal statement."
    },
    {
      "line": 9,
      "operation": "if",
      "condition": "y == 20",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.354Z",
      "description": "Checked if y == 20."
    },
    {
      "line": 10,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is equal to 20",
      "timestamp": "2024-08-30T22:49:05.354Z",
      "description": "Printed y is equal to 20."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.354Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "y is 10 or less"
            }
          ]
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 10 or less"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:49:05.356Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.356Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.356Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y > 10",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.356Z",
      "description": "Checked if y > 10."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is 10 or less",
      "timestamp": "2024-08-30T22:49:05.356Z",
      "description": "Printed y is 10 or less."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.356Z",
      "description": "End of if statement."
    },
    {
      "line": 11,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.356Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 10"
        }
      ],
      "alternate": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "greater",
            "right": "3"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is greater than 3 but not greater than 10"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 3 or less"
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.358Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.358Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 5,
      "operation": "if",
      "condition": "x > 3",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.358Z",
      "description": "Checked if x > 3."
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 3 but not greater than 10",
      "timestamp": "2024-08-30T22:49:05.358Z",
      "description": "Printed x is greater than 3 but not greater than 10."
    },
    {
      "line": 9,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.358Z",
      "description": "End of if statement."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.358Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "15",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "a",
        "operator": "less",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "b",
            "operator": "greater",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "b is greater than 10"
            },
            {
              "type": "IfStatement",
              "condition": {
                "left": "b",
                "operator": "less",
                "right": "20"
              },
              "consequent": [
                {
                  "type": "PrintStatement",
                  "value": "b is less than 20"
                }
              ],
              "alternate": [
                {
                  "type": "PrintStatement",
                  "value": "b is 20 or more"
                }
              ]
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "b is 10 or less"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.360Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:49:05.360Z",
      "description": "Set variable b to 15."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "a < 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.360Z",
      "description": "Checked if a < 10."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "b > 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.360Z",
      "description": "Checked if b > 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is greater than 10",
      "timestamp": "2024-08-30T22:49:05.360Z",
      "description": "Printed b is greater than 10."
    },
    {
      "line": 6,
      "operation": "if",
      "condition": "b < 20",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.360Z",
      "description": "Checked if b < 20."
    },
    {
      "line": 7,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "b is less than 20",
      "timestamp": "2024-08-30T22:49:05.360Z",
      "description": "Printed b is less than 20."
    },
    {
      "line": 10,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.360Z",
      "description": "End of if statement."
    },
    {
      "line": 13,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.360Z",
      "description": "End of if statement."
    },
    {
      "line": 14,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.360Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "10"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "less",
            "right": "30"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "x is between 10 and 30"
            }
          ],
          "alternate": [
            {
              "type": "PrintStatement",
              "value": "x is 30 or more"
            }
          ]
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:49:05.361Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.361Z",
      "description": "Checked if x > 10."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x < 30",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.361Z",
      "description": "Checked if x < 30."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is between 10 and 30",
      "timestamp": "2024-08-30T22:49:05.361Z",
      "description": "Printed x is between 10 and 30."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.361Z",
      "description": "End of if statement."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.361Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "firstName",
      "value": {
        "type": "StringLiteral",
        "value": "John",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lastName",
      "value": {
        "type": "StringLiteral",
        "value": "Doe",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "fullName",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "firstName",
          "operator": "+",
          "right": " "
        },
        "operator": "+",
        "right": "lastName"
      }
    },
    {
      "type": "PrintStatement",
      "value": "fullName"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "firstName",
      "type": "string",
      "value": "John",
      "timestamp": "2024-08-30T22:49:05.362Z",
      "description": "Set variable firstName to John."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "lastName",
      "type": "string",
      "value": "Doe",
      "timestamp": "2024-08-30T22:49:05.363Z",
      "description": "Set variable lastName to Doe."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "fullName",
      "type": "string",
      "value": "John Doe",
      "timestamp": "2024-08-30T22:49:05.363Z",
      "description": "Set variable fullName to John Doe."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "fullName",
      "literal": "John Doe",
      "timestamp": "2024-08-30T22:49:05.363Z",
      "description": "Printed fullName."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": null,
        "operator": "not",
        "right": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "isTrue is false"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:49:05.365Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "!isTrue",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.365Z",
      "description": "Checked if !isTrue."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.365Z",
      "description": "End of if statement."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "type": "Identifier",
        "value": "isTrue"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Boolean is true"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Boolean is false"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:49:05.366Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.366Z",
      "description": "Checked if isTrue."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Boolean is true",
      "timestamp": "2024-08-30T22:49:05.366Z",
      "description": "Printed Boolean is true."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.366Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "or",
        "right": {
          "type": "Expression",
          "left": "isFalse",
          "operator": "and",
          "right": {
            "type": "UnaryExpression",
            "operator": "not",
            "argument": "isTrue"
          }
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Met"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Complex Condition Not Met"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:49:05.380Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:49:05.380Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue || isFalse && !isTrue",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.381Z",
      "description": "Checked if isTrue || isFalse && !isTrue."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Complex Condition Met",
      "timestamp": "2024-08-30T22:49:05.381Z",
      "description": "Printed Complex Condition Met."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.381Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": {
          "type": "UnaryExpression",
          "operator": "not",
          "argument": "isFalse"
        }
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Correct"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "Incorrect"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:49:05.382Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:49:05.382Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && !isFalse",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.383Z",
      "description": "Checked if isTrue && !isFalse."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "Correct",
      "timestamp": "2024-08-30T22:49:05.383Z",
      "description": "Printed Correct."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.383Z",
      "description": "End of if statement."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:49:05.385Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:49:05.385Z",
      "description": "Set variable isFalse to false."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "isTrue",
      "value": {
        "type": "BooleanLiteral",
        "value": true,
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "isFalse",
      "value": {
        "type": "BooleanLiteral",
        "value": false,
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "isTrue",
        "operator": "and",
        "right": "isFalse"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "Both are booleans"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "isTrue",
      "type": "boolean",
      "value": true,
      "timestamp": "2024-08-30T22:49:05.386Z",
      "description": "Set variable isTrue to true."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "isFalse",
      "type": "boolean",
      "value": false,
      "timestamp": "2024-08-30T22:49:05.386Z",
      "description": "Set variable isFalse to false."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "isTrue && isFalse",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.386Z",
      "description": "Checked if isTrue && isFalse."
    },
    {
      "line": 5,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.386Z",
      "description": "End of if statement."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "myVar",
      "value": {
        "type": "StringLiteral",
        "value": "Hello, World!",
        "line": 2
      }
    },
    {
      "type": "PrintStatement",
      "value": "myVar"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "myVar",
      "type": "string",
      "value": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.388Z",
      "description": "Set variable myVar to Hello, World!."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "myVar",
      "literal": "Hello, World!",
      "timestamp": "2024-08-30T22:49:05.388Z",
      "description": "Printed myVar."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "FunctionDeclaration",
      "name": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "type": "ReturnStatement",
          "value": {
            "type": "Expression",
            "left": "a",
            "operator": "+",
            "right": "b"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "define",
      "varName": "add_numbers",
      "params": [
        "a",
        "b"
      ],
      "body": [
        {
          "line": 2,
          "operation": "return",
          "value": {
            "left": "a",
            "operator": "+",
            "right": "b"
          },
          "timestamp": "2024-08-30T22:49:05.389Z",
          "description": "Returned {\"left\":\"a\",\"operator\":\"+\",\"right\":\"b\"}."
        }
      ],
      "timestamp": "2024-08-30T22:49:05.389Z",
      "description": "Defined function add_numbers with parameters a, b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": ">=",
        "right": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "IfStatement",
          "condition": {
            "left": "x",
            "operator": "<",
            "right": "5"
          },
          "consequent": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "2"
              }
            }
          ],
          "alternate": [
            {
              "type": "VariableDeclaration",
              "name": "x",
              "value": {
                "type": "Expression",
                "left": "x",
                "operator": "+",
                "right": "3"
              }
            }
          ]
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:49:05.390Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x < 10",
      "timestamp": "2024-08-30T22:49:05.390Z",
      "description": "while loop with condition x < 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.390Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:49:05.390Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.390Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Set variable x to x + 2."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "x < 5",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Checked if x < 5."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Set variable x to x + 3."
    },
    {
      "line": 8,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "End of if statement."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x < 10",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "Checked if x < 10."
    },
    {
      "line": 9,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:49:05.391Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 3
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "y",
          "value": {
            "type": "Expression",
            "left": "y",
            "operator": "+",
            "right": "x"
          }
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "y"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.393Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:49:05.393Z",
      "description": "Set variable y to 0."
    },
    {
      "line": 3,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:49:05.393Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.393Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:49:05.393Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.393Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:49:05.393Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.393Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:49:05.394Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:49:05.394Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:49:05.394Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.394Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:49:05.394Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:49:05.394Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:49:05.394Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.394Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:49:05.394Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 14,
      "timestamp": "2024-08-30T22:49:05.394Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:49:05.395Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.395Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 4,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:49:05.395Z",
      "description": "Printed x."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:49:05.395Z",
      "description": "Set variable y to y + x."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:49:05.395Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.395Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 7,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:49:05.395Z",
      "description": "End of while loop"
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "y",
      "literal": 15,
      "timestamp": "2024-08-30T22:49:05.395Z",
      "description": "Printed y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "3"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    },
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "Expression",
        "left": "sum",
        "operator": "*",
        "right": "2"
      }
    },
    {
      "type": "PrintStatement",
      "value": "sum"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:49:05.397Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:49:05.397Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 3",
      "timestamp": "2024-08-30T22:49:05.397Z",
      "description": "loop from_to loop with condition i <= 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.397Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:49:05.397Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:49:05.397Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:49:05.397Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.397Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:49:05.397Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:49:05.397Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:49:05.397Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.397Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:49:05.397Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:49:05.398Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:49:05.398Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 3",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.398Z",
      "description": "Checked if i <= 3."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:49:05.398Z",
      "description": "End of loop from_to loop"
    },
    {
      "line": 6,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 6,
      "timestamp": "2024-08-30T22:49:05.398Z",
      "description": "Printed sum."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 12,
      "timestamp": "2024-08-30T22:49:05.398Z",
      "description": "Set variable sum to sum * 2."
    },
    {
      "line": 8,
      "operation": "print",
      "isLiteral": false,
      "varName": "sum",
      "literal": 12,
      "timestamp": "2024-08-30T22:49:05.398Z",
      "description": "Printed sum."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "sum",
      "value": {
        "type": "NumberLiteral",
        "value": "0",
        "line": 2
      }
    },
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "1",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        },
        {
          "type": "VariableDeclaration",
          "name": "sum",
          "value": {
            "type": "Expression",
            "left": "sum",
            "operator": "+",
            "right": "i"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Set variable sum to 0."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 2,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.400Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.401Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:49:05.401Z",
      "description": "Printed i."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "sum",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:49:05.401Z",
      "description": "Set variable sum to sum + i."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:49:05.401Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.401Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:49:05.401Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "5"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 5",
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "loop from_to loop with condition i <= 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 5",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "Checked if i <= 5."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:49:05.402Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "LoopUntil",
      "condition": {
        "left": "x",
        "operator": "==",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:49:05.404Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x != 0",
      "timestamp": "2024-08-30T22:49:05.404Z",
      "description": "while loop with condition x != 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.404Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 10,
      "timestamp": "2024-08-30T22:49:05.404Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:49:05.405Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.405Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 9,
      "timestamp": "2024-08-30T22:49:05.405Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:49:05.405Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.405Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 8,
      "timestamp": "2024-08-30T22:49:05.405Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:49:05.405Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 7,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 6,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:49:05.406Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x != 0",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.407Z",
      "description": "Checked if x != 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:49:05.407Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:49:05.410Z",
      "description": "End of while loop"
    }
  ]
}
Test case 16

Intermediate Representation: {
  "program": [
    {
      "type": "LoopFromTo",
      "loopVariable": "i",
      "range": {
        "start": "0",
        "end": "10"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "i"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:49:05.411Z",
      "description": "Set variable i to 0."
    },
    {
      "line": 1,
      "operation": "loop_from_to",
      "condition": "i <= 10",
      "timestamp": "2024-08-30T22:49:05.411Z",
      "description": "loop from_to loop with condition i <= 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.411Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 0,
      "timestamp": "2024-08-30T22:49:05.411Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:49:05.411Z",
      "description": "Set variable i to 1."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.411Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 1,
      "timestamp": "2024-08-30T22:49:05.411Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:49:05.411Z",
      "description": "Set variable i to 2."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.411Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 2,
      "timestamp": "2024-08-30T22:49:05.411Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:49:05.411Z",
      "description": "Set variable i to 3."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 3,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Set variable i to 4."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 4,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Set variable i to 5."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 5,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 6,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Set variable i to 6."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 6,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 7,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Set variable i to 7."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 7,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Set variable i to 8."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 8,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Set variable i to 9."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 9,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:49:05.412Z",
      "description": "Set variable i to 10."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.413Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 2,
      "operation": "print",
      "isLiteral": false,
      "varName": "i",
      "literal": 10,
      "timestamp": "2024-08-30T22:49:05.413Z",
      "description": "Printed i."
    },
    {
      "line": 1,
      "operation": "set",
      "varName": "i",
      "type": "number",
      "value": 11,
      "timestamp": "2024-08-30T22:49:05.413Z",
      "description": "Set variable i to 11."
    },
    {
      "line": 1,
      "operation": "if",
      "condition": "i <= 10",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.413Z",
      "description": "Checked if i <= 10."
    },
    {
      "line": 3,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:49:05.413Z",
      "description": "End of loop from_to loop"
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": [
        {
          "type": "PrintStatement",
          "value": "x is 5 or less"
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 8
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "letters",
      "values": [
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "b",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "c",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "d",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "e",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "f",
          "line": 9
        },
        {
          "type": "StringLiteral",
          "value": "g",
          "line": 9
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 10
      },
      "position": "4"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:49:05.415Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.415Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:49:05.415Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.415Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "timestamp": "2024-08-30T22:49:05.416Z",
      "description": "Created array nums."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "letters",
      "value": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g"
      ],
      "timestamp": "2024-08-30T22:49:05.416Z",
      "description": "Created array letters."
    },
    {
      "line": 9,
      "operation": "add",
      "varName": "nums",
      "value": 5,
      "position": 4,
      "timestamp": "2024-08-30T22:49:05.416Z",
      "description": "Added 5 to array nums at position 4."
    }
  ]
}
Test case 1

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:49:05.418Z",
      "description": "Set variable x to 10."
    }
  ]
}
Test case 2

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 1
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "PrintStatement",
          "value": "x is greater than 5"
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:49:05.419Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.419Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "x is greater than 5",
      "timestamp": "2024-08-30T22:49:05.419Z",
      "description": "Printed x is greater than 5."
    },
    {
      "line": 4,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.419Z",
      "description": "End of if statement."
    }
  ]
}
Test case 3

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:49:05.420Z",
      "description": "Created array numbers."
    }
  ]
}
Test case 4

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "numbers",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 3
      },
      "position": "1"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      },
      "position": "2"
    },
    {
      "type": "ArrayInsertion",
      "varName": "numbers",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 5
      },
      "position": "3"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "numbers",
      "value": [
        0
      ],
      "timestamp": "2024-08-30T22:49:05.421Z",
      "description": "Created array numbers."
    },
    {
      "line": 2,
      "operation": "add",
      "varName": "numbers",
      "value": 1,
      "position": 1,
      "timestamp": "2024-08-30T22:49:05.421Z",
      "description": "Added 1 to array numbers at position 1."
    },
    {
      "line": 3,
      "operation": "add",
      "varName": "numbers",
      "value": 2,
      "position": 2,
      "timestamp": "2024-08-30T22:49:05.421Z",
      "description": "Added 2 to array numbers at position 2."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "numbers",
      "value": 3,
      "position": 3,
      "timestamp": "2024-08-30T22:49:05.422Z",
      "description": "Added 3 to array numbers at position 3."
    }
  ]
}
Test case 5

Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        }
      ]
    },
    {
      "type": "ForLoop",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "type": "PrintStatement",
          "value": "num"
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3
      ],
      "timestamp": "2024-08-30T22:49:05.423Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "for",
      "iterator": "num",
      "collection": "nums",
      "body": [
        {
          "line": 3,
          "operation": "print",
          "isLiteral": true,
          "varName": null,
          "literal": "num",
          "timestamp": "2024-08-30T22:49:05.423Z",
          "description": "Printed num."
        }
      ],
      "timestamp": "2024-08-30T22:49:05.423Z",
      "description": "Iterating over nums with num."
    }
  ]
}
Test case 7

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "IfStatement",
      "condition": {
        "left": "x",
        "operator": "greater",
        "right": "5"
      },
      "consequent": [
        {
          "type": "IfStatement",
          "condition": {
            "left": "y",
            "operator": "less",
            "right": "10"
          },
          "consequent": [
            {
              "type": "PrintStatement",
              "value": "y is less than 10"
            }
          ],
          "alternate": null
        }
      ],
      "alternate": null
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:49:05.424Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.424Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "if",
      "condition": "x > 5",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.424Z",
      "description": "Checked if x > 5."
    },
    {
      "line": 4,
      "operation": "if",
      "condition": "y < 10",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.425Z",
      "description": "Checked if y < 10."
    },
    {
      "line": 5,
      "operation": "print",
      "isLiteral": true,
      "varName": null,
      "literal": "y is less than 10",
      "timestamp": "2024-08-30T22:49:05.425Z",
      "description": "Printed y is less than 10."
    },
    {
      "line": 6,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.425Z",
      "description": "End of if statement."
    },
    {
      "line": 7,
      "operation": "endif",
      "timestamp": "2024-08-30T22:49:05.425Z",
      "description": "End of if statement."
    }
  ]
}
Test case 17

Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "+",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.426Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 8,
      "timestamp": "2024-08-30T22:49:05.426Z",
      "description": "Set variable y to x + 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "b"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.427Z",
      "description": "Set variable a to 5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:49:05.427Z",
      "description": "Set variable b to 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:49:05.427Z",
      "description": "Set variable c to a + b."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "20",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "y",
        "operator": "*",
        "right": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 20,
      "timestamp": "2024-08-30T22:49:05.428Z",
      "description": "Set variable x to 20."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 15,
      "timestamp": "2024-08-30T22:49:05.429Z",
      "description": "Set variable y to x - 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 30,
      "timestamp": "2024-08-30T22:49:05.429Z",
      "description": "Set variable z to y * 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "p",
      "value": {
        "type": "NumberLiteral",
        "value": "100",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "q",
      "value": {
        "type": "Expression",
        "left": "p",
        "operator": "/",
        "right": "4"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "r",
      "value": {
        "type": "Expression",
        "left": {
          "type": "Expression",
          "left": "q",
          "operator": "+",
          "right": "5"
        },
        "operator": "*",
        "right": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "p",
      "type": "number",
      "value": 100,
      "timestamp": "2024-08-30T22:49:05.433Z",
      "description": "Set variable p to 100."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "q",
      "type": "number",
      "value": 25,
      "timestamp": "2024-08-30T22:49:05.434Z",
      "description": "Set variable q to p / 4."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "r",
      "type": "number",
      "value": 90,
      "timestamp": "2024-08-30T22:49:05.434Z",
      "description": "Set variable r to (q + 5) * 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "/",
        "right": "0"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:49:05.435Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": null,
      "timestamp": "2024-08-30T22:49:05.435Z",
      "description": "Set variable y to x / 0."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "10",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "Expression",
        "left": "x",
        "operator": "*",
        "right": "y"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 10,
      "timestamp": "2024-08-30T22:49:05.437Z",
      "description": "Set variable x to 10."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.437Z",
      "description": "Set variable y to 5."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 50,
      "timestamp": "2024-08-30T22:49:05.437Z",
      "description": "Set variable z to x * y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "WhileLoop",
      "condition": {
        "left": "x",
        "operator": ">",
        "right": "0"
      },
      "body": [
        {
          "type": "PrintStatement",
          "value": "x"
        },
        {
          "type": "VariableDeclaration",
          "name": "x",
          "value": {
            "type": "Expression",
            "left": "x",
            "operator": "-",
            "right": "1"
          }
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.438Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 2,
      "operation": "while",
      "condition": "x > 0",
      "timestamp": "2024-08-30T22:49:05.438Z",
      "description": "while loop with condition x > 0."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.438Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 5,
      "timestamp": "2024-08-30T22:49:05.438Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-30T22:49:05.438Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.438Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 4,
      "timestamp": "2024-08-30T22:49:05.438Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-30T22:49:05.438Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.439Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 3,
      "timestamp": "2024-08-30T22:49:05.439Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T22:49:05.439Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.439Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 2,
      "timestamp": "2024-08-30T22:49:05.439Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T22:49:05.439Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": true,
      "timestamp": "2024-08-30T22:49:05.439Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 3,
      "operation": "print",
      "isLiteral": false,
      "varName": "x",
      "literal": 1,
      "timestamp": "2024-08-30T22:49:05.439Z",
      "description": "Printed x."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 0,
      "timestamp": "2024-08-30T22:49:05.439Z",
      "description": "Set variable x to x - 1."
    },
    {
      "line": 2,
      "operation": "if",
      "condition": "x > 0",
      "result": false,
      "timestamp": "2024-08-30T22:49:05.439Z",
      "description": "Checked if x > 0."
    },
    {
      "line": 5,
      "operation": "loop_end",
      "timestamp": "2024-08-30T22:49:05.439Z",
      "description": "End of while loop"
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "a",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 2
        },
        "operator": "-",
        "right": "5"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "b",
      "value": {
        "type": "Expression",
        "left": "a",
        "operator": "+",
        "right": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "c",
      "value": {
        "type": "Expression",
        "left": "b",
        "operator": "*",
        "right": {
          "type": "Expression",
          "left": {
            "type": "NumberLiteral",
            "value": 0,
            "line": 4
          },
          "operator": "-",
          "right": "2"
        }
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "a",
      "type": "number",
      "value": -5,
      "timestamp": "2024-08-30T22:49:05.441Z",
      "description": "Set variable a to -5."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "b",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-30T22:49:05.441Z",
      "description": "Set variable b to a + 10."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "c",
      "type": "number",
      "value": -10,
      "timestamp": "2024-08-30T22:49:05.441Z",
      "description": "Set variable c to b * -2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "right",
      "value": {
        "type": "StringLiteral",
        "value": "correct",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "wrong",
      "value": {
        "type": "StringLiteral",
        "value": "not wrong this time!",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "right",
      "type": "string",
      "value": "correct",
      "timestamp": "2024-08-30T18:15:43.343Z",
      "description": "Set variable right to correct."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "wrong",
      "type": "string",
      "value": "not wrong this time!",
      "timestamp": "2024-08-30T18:15:43.343Z",
      "description": "Set variable wrong to not wrong this time!."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "right",
      "value": {
        "type": "StringLiteral",
        "value": "correct",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "wrong",
      "value": {
        "type": "StringLiteral",
        "value": "not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "right",
      "type": "string",
      "value": "correct",
      "timestamp": "2024-08-30T18:18:47.682Z",
      "description": "Set variable right to correct."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "wrong",
      "type": "string",
      "value": "not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!",
      "timestamp": "2024-08-30T18:18:47.682Z",
      "description": "Set variable wrong to not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "right",
      "value": {
        "type": "StringLiteral",
        "value": "correct",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "wrong",
      "value": {
        "type": "StringLiteral",
        "value": "not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "right",
      "type": "string",
      "value": "correct",
      "timestamp": "2024-08-30T18:18:58.943Z",
      "description": "Set variable right to correct."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "wrong",
      "type": "string",
      "value": "not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
      "timestamp": "2024-08-30T18:18:58.943Z",
      "description": "Set variable wrong to not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "right",
      "value": {
        "type": "StringLiteral",
        "value": "correct",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "wrong",
      "value": {
        "type": "StringLiteral",
        "value": "not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "right",
      "type": "string",
      "value": "correct",
      "timestamp": "2024-08-30T18:19:15.389Z",
      "description": "Set variable right to correct."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "wrong",
      "type": "string",
      "value": "not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
      "timestamp": "2024-08-30T18:19:15.389Z",
      "description": "Set variable wrong to not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "StringLiteral",
        "value": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "string",
      "value": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
      "timestamp": "2024-08-30T18:19:37.650Z",
      "description": "Set variable x to AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "StringLiteral",
        "value": "Not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "string",
      "value": "Not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
      "timestamp": "2024-08-30T18:19:52.311Z",
      "description": "Set variable x to Not wrong this time!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T18:23:04.576Z",
      "description": "Set variable x to 1."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T18:32:18.568Z",
      "description": "Set variable x to 1."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T18:36:03.897Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T18:36:03.897Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "an",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "array",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "with",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T18:37:12.205Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T18:37:12.205Z",
      "description": "Set variable y to 2."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "this",
        "is",
        "an",
        "array",
        "with",
        "words"
      ],
      "timestamp": "2024-08-30T18:37:12.206Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "an",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "array",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "with",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T18:37:29.766Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T18:37:29.766Z",
      "description": "Set variable y to 2."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "this",
        "is",
        "an",
        "array",
        "with",
        "words",
        "words",
        "words",
        "words",
        "words",
        "words",
        "words",
        "words"
      ],
      "timestamp": "2024-08-30T18:37:29.767Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "an",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "array",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "with",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "words",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayInsertion",
      "varName": "words",
      "value": {
        "type": "StringLiteral",
        "value": "imposter among us",
        "line": 4
      },
      "position": "11"
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-30T18:38:08.565Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-30T18:38:08.565Z",
      "description": "Set variable y to 2."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "this",
        "is",
        "an",
        "array",
        "with",
        "words",
        "words",
        "words",
        "words",
        "words",
        "words",
        "words",
        "words"
      ],
      "timestamp": "2024-08-30T18:38:08.566Z",
      "description": "Created array words."
    },
    {
      "line": 4,
      "operation": "add",
      "varName": "words",
      "value": "imposter among us",
      "position": 11,
      "timestamp": "2024-08-30T18:38:08.566Z",
      "description": "Added imposter among us to array words at position 11."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Hello World",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subst",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "2",
        "end": "5"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Hello World",
      "timestamp": "2024-08-30T18:44:21.243Z",
      "description": "Set variable word to Hello World."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subst",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 2,
        "end": 5,
        "result": "llo"
      },
      "timestamp": "2024-08-30T18:44:21.243Z",
      "description": "Set variable subst to a substring of word from index 2 to 5."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Hello World",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "subst",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "2",
        "end": "5"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Hello World",
      "timestamp": "2024-08-30T18:44:37.777Z",
      "description": "Set variable word to Hello World."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "subst",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 2,
        "end": 5,
        "result": "llo"
      },
      "timestamp": "2024-08-30T18:44:37.777Z",
      "description": "Set variable subst to a substring of word from index 2 to 5."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Hello",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Hello",
      "timestamp": "2024-08-30T22:43:10.537Z",
      "description": "Set variable word to Hello."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 0,
        "end": 2,
        "result": "He"
      },
      "timestamp": "2024-08-30T22:43:10.537Z",
      "description": "Set variable variableName to a substring of word from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "adbwjahbdhjwa",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "3"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "adbwjahbdhjwa",
      "timestamp": "2024-08-30T22:56:27.038Z",
      "description": "Set variable word to adbwjahbdhjwa."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 3,
        "result": "db"
      },
      "timestamp": "2024-08-30T22:56:27.039Z",
      "description": "Set variable variableName to a substring of word from index 1 to 3."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "4",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "Expression",
        "left": {
          "type": "NumberLiteral",
          "value": 0,
          "line": 4
        },
        "operator": "-",
        "right": "1"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T02:14:05.901Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T02:14:05.901Z",
      "description": "Set variable y to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 4,
      "timestamp": "2024-08-31T02:14:05.901Z",
      "description": "Set variable z to 4."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": -1,
      "timestamp": "2024-08-31T02:14:05.902Z",
      "description": "Set variable x to -1."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:18:02.604Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:18:02.604Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:19:33.201Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:19:33.201Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:20:37.388Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:20:37.388Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:24:24.993Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:24:24.993Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:31:11.006Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:31:11.007Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:34:10.802Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:34:10.802Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:44:44.939Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:44:44.939Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "1",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:49:11.150Z",
      "description": "Set variable word to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T02:49:11.150Z",
      "description": "Set variable variableName to a substring of word from index 1 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:50:03.931Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T02:50:03.931Z",
      "description": "Set variable variableName to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:50:28.080Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T02:50:28.080Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:51:37.317Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T02:51:37.317Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T02:56:35.200Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T02:56:35.200Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:01:17.691Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:01:17.691Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:03:17.926Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:03:17.926Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:04:19.231Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:04:19.231Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:05:06.484Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:05:06.484Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:06:29.090Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:06:29.091Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:06:42.926Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:06:42.926Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:06:42.927Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:07:06.335Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:07:06.335Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:07:06.335Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:07:38.735Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:07:38.735Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:07:38.735Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:09:29.793Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:09:29.794Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:09:29.794Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:10:00.727Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:10:00.727Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:10:00.727Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:11:07.203Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:11:07.203Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:11:07.203Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:11:41.715Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:11:41.715Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:11:41.715Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:11:58.892Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:11:58.892Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:11:58.892Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:13:20.117Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:13:20.117Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:13:20.117Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:15:46.689Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:15:46.689Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:15:46.689Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:16:24.515Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:16:24.515Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:16:24.515Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:16:45.538Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:16:45.539Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:16:45.539Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:17:07.524Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:17:07.525Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:17:07.525Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:19:56.014Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:19:56.014Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:19:56.014Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:23:52.656Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:23:52.656Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:23:52.656Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:24:04.115Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:24:04.116Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:24:04.116Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:24:58.399Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:24:58.399Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:24:58.399Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:26:19.402Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:26:19.402Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:26:19.402Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:26:53.769Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:26:53.769Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:26:53.770Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:28:25.812Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:28:25.812Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:28:25.813Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "saucy",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "0",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:30:15.400Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "saucy",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 0,
        "end": 2,
        "result": "wo"
      },
      "timestamp": "2024-08-31T03:30:15.400Z",
      "description": "Set variable saucy to a substring of words from index 0 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:30:15.400Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:32:01.338Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:32:01.339Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:32:01.339Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:32:25.719Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:32:25.719Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:32:25.720Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:32:48.755Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:32:48.755Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:32:48.755Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:33:24.518Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:33:24.518Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:33:24.518Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:34:30.174Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:34:30.174Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:34:30.174Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:34:41.120Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:34:41.120Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:34:41.120Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:36:21.718Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:36:21.718Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:36:21.718Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:38:05.478Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:38:05.478Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:38:05.478Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:38:40.538Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:38:40.538Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:38:40.538Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:38:59.974Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:38:59.974Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:38:59.974Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:39:33.210Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:39:33.210Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:39:33.210Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:39:53.785Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:39:53.785Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:39:53.785Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:40:12.371Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:40:12.371Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:40:12.371Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:40:33.531Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:40:33.531Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:40:33.531Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 3
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:41:04.214Z",
      "description": "Set variable words to words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:41:04.214Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:41:04.214Z",
      "description": "Set variable y to 2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hey",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "damn",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "word array is here to play",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "hey",
        "a",
        "damn",
        "word array is here to play"
      ],
      "timestamp": "2024-08-31T03:41:50.199Z",
      "description": "Created array words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:41:50.199Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:41:50.199Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:41:50.199Z",
      "description": "Set variable y to 2."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T03:41:50.200Z",
      "description": "Created array nums."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "hey",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "a",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "damn",
          "line": 1
        },
        {
          "type": "StringLiteral",
          "value": "word array is here to play",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "2",
        "line": 4
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "hey",
        "a",
        "damn",
        "word array is here to play"
      ],
      "timestamp": "2024-08-31T03:43:02.650Z",
      "description": "Created array words."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:43:02.650Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:43:02.651Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 2,
      "timestamp": "2024-08-31T03:43:02.651Z",
      "description": "Set variable y to 2."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T03:43:02.651Z",
      "description": "Created array nums."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "This",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "an",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "assortment of many words",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T03:44:59.591Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:44:59.591Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:44:59.591Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "This",
        "is",
        "an",
        "assortment of many words"
      ],
      "timestamp": "2024-08-31T03:44:59.591Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:46:04.879Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:46:04.879Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:46:04.879Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:46:04.880Z",
      "description": "Created array nums2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:46:30.306Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:46:30.307Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:46:30.307Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:46:30.307Z",
      "description": "Created array nums2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:47:04.409Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:47:04.409Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:47:04.409Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:47:04.410Z",
      "description": "Created array nums2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "words",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "1",
        "end": "2"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:48:42.279Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "words",
      "timestamp": "2024-08-31T03:48:42.279Z",
      "description": "Set variable words to words."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 1,
        "end": 2,
        "result": "o"
      },
      "timestamp": "2024-08-31T03:48:42.279Z",
      "description": "Set variable variableName to a substring of words from index 1 to 2."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T03:48:42.280Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS  AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:54:42.857Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS  AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T03:54:42.857Z",
      "description": "Set variable words to THIS IS  AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERYY LONG"
      },
      "timestamp": "2024-08-31T03:54:42.857Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T03:54:42.858Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:55:10.030Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T03:55:10.031Z",
      "description": "Set variable words to THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "ERYY LONG "
      },
      "timestamp": "2024-08-31T03:55:10.031Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T03:55:10.031Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:57:47.422Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T03:57:47.423Z",
      "description": "Set variable words to THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "ERYY LONG "
      },
      "timestamp": "2024-08-31T03:57:47.423Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T03:57:47.424Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:58:48.677Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T03:58:48.677Z",
      "description": "Set variable words to THIS IS AVERYY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "ERYY LONG "
      },
      "timestamp": "2024-08-31T03:58:48.677Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T03:58:48.678Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T03:59:16.349Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T03:59:16.349Z",
      "description": "Set variable words to THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERY LONG "
      },
      "timestamp": "2024-08-31T03:59:16.349Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T03:59:16.350Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:00:42.722Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T04:00:42.722Z",
      "description": "Set variable words to THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERY LONG "
      },
      "timestamp": "2024-08-31T04:00:42.722Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T04:00:42.723Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:01:41.861Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T04:01:41.861Z",
      "description": "Set variable words to THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERY LONG "
      },
      "timestamp": "2024-08-31T04:01:41.861Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T04:01:41.862Z",
      "description": "Created array words."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 2
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:02:19.129Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T04:02:19.129Z",
      "description": "Set variable words to THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERY LONG "
      },
      "timestamp": "2024-08-31T04:02:19.129Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T04:02:19.129Z",
      "description": "Created array words."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        10
      ],
      "timestamp": "2024-08-31T04:02:19.130Z",
      "description": "Created array nums2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums3",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 2
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums4",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums5",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums6",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 6
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 9
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:03:28.619Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums3",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:03:28.619Z",
      "description": "Created array nums3."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "nums4",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:03:28.620Z",
      "description": "Created array nums4."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums5",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:03:28.621Z",
      "description": "Created array nums5."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums6",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:03:28.621Z",
      "description": "Created array nums6."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T04:03:28.622Z",
      "description": "Set variable words to THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERY LONG "
      },
      "timestamp": "2024-08-31T04:03:28.622Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T04:03:28.622Z",
      "description": "Created array words."
    },
    {
      "line": 9,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        10
      ],
      "timestamp": "2024-08-31T04:03:28.623Z",
      "description": "Created array nums2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 1
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums3",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums4",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums5",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums6",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 6
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 6
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "variableName",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "words",
      "values": [
        {
          "type": "StringLiteral",
          "value": "why",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "is",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "blud",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "up",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "at",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "this",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "hour",
          "line": 8
        },
        {
          "type": "StringLiteral",
          "value": "tho???",
          "line": 8
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "01",
          "line": 9
        },
        {
          "type": "NumberLiteral",
          "value": "10",
          "line": 9
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:04:20.029Z",
      "description": "Created array nums."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums3",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:04:20.029Z",
      "description": "Created array nums3."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY",
      "timestamp": "2024-08-31T04:04:20.029Z",
      "description": "Set variable words to THIS IS A VERY LONG SENTENCE AND IT REQUIRES A LOT OF SPACE SUCH THAT IT IS VIABLE FOR TESTING CERTAIN THINGS WITHIN THE APPLICATION MY BOY."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums4",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:04:20.030Z",
      "description": "Created array nums4."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums5",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:04:20.030Z",
      "description": "Created array nums5."
    },
    {
      "line": 6,
      "operation": "create_array",
      "varName": "nums6",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "timestamp": "2024-08-31T04:04:20.030Z",
      "description": "Created array nums6."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "variableName",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "VERY LONG "
      },
      "timestamp": "2024-08-31T04:04:20.030Z",
      "description": "Set variable variableName to a substring of words from index 10 to 20."
    },
    {
      "line": 8,
      "operation": "create_array",
      "varName": "words",
      "value": [
        "why",
        "is",
        "blud",
        "up",
        "at",
        "this",
        "hour",
        "tho???"
      ],
      "timestamp": "2024-08-31T04:04:20.031Z",
      "description": "Created array words."
    },
    {
      "line": 9,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        10
      ],
      "timestamp": "2024-08-31T04:04:20.031Z",
      "description": "Created array nums2."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "middle",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "10",
        "end": "25"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
      "timestamp": "2024-08-31T15:03:21.680Z",
      "description": "Set variable word to Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "middle",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 10,
        "end": 25,
        "result": "fundamentals an"
      },
      "timestamp": "2024-08-31T15:03:21.682Z",
      "description": "Set variable middle to a substring of word from index 10 to 25."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "middle",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "10",
        "end": "25"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "lengthVar",
      "value": {
        "type": "LengthExpression",
        "source": "word"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
      "timestamp": "2024-08-31T15:04:25.546Z",
      "description": "Set variable word to Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "middle",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 10,
        "end": 25,
        "result": "fundamentals an"
      },
      "timestamp": "2024-08-31T15:04:25.546Z",
      "description": "Set variable middle to a substring of word from index 10 to 25."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "lengthVar",
      "type": "number",
      "value": 154,
      "timestamp": "2024-08-31T15:04:25.546Z",
      "description": "Set variable lengthVar to 154."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "middle",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "10",
        "end": "25"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "charAt",
      "value": {
        "type": "IndexExpression",
        "source": "word",
        "index": "10"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
      "timestamp": "2024-08-31T15:07:55.813Z",
      "description": "Set variable word to Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "middle",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 10,
        "end": 25,
        "result": "fundamentals an"
      },
      "timestamp": "2024-08-31T15:07:55.813Z",
      "description": "Set variable middle to a substring of word from index 10 to 25."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "charAt",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "word",
        "index": 10,
        "result": "f"
      },
      "timestamp": "2024-08-31T15:07:55.814Z",
      "description": "Set variable charAt to word[10]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "indexVar",
      "value": {
        "type": "IndexExpression",
        "source": "word",
        "index": "10"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
      "timestamp": "2024-08-31T15:15:30.306Z",
      "description": "Set variable word to Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "indexVar",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "word",
        "index": 10,
        "result": "f"
      },
      "timestamp": "2024-08-31T15:15:30.306Z",
      "description": "Set variable indexVar to word[10]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "indexVar",
      "value": {
        "type": "IndexExpression",
        "source": "word",
        "index": "10"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
      "timestamp": "2024-08-31T15:19:37.321Z",
      "description": "Set variable word to Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "indexVar",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "word",
        "index": 10,
        "result": "f"
      },
      "timestamp": "2024-08-31T15:19:37.321Z",
      "description": "Set variable indexVar to word[10]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "indexVar",
      "value": {
        "type": "IndexExpression",
        "source": "word",
        "index": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "substringVar",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "0",
        "end": "10"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
      "timestamp": "2024-08-31T15:20:00.528Z",
      "description": "Set variable word to Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "indexVar",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "word",
        "index": 10,
        "result": "f"
      },
      "timestamp": "2024-08-31T15:20:00.529Z",
      "description": "Set variable indexVar to word[10]."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "substringVar",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 0,
        "end": 10,
        "result": "Learn the "
      },
      "timestamp": "2024-08-31T15:20:00.529Z",
      "description": "Set variable substringVar to a substring of word from index 0 to 10."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "indexVar",
      "value": {
        "type": "IndexExpression",
        "source": "word",
        "index": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "substringVar",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "0",
        "end": "10"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
      "timestamp": "2024-08-31T15:21:02.386Z",
      "description": "Set variable word to Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "indexVar",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "word",
        "index": 10,
        "result": "f"
      },
      "timestamp": "2024-08-31T15:21:02.387Z",
      "description": "Set variable indexVar to word[10]."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "substringVar",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 0,
        "end": 10,
        "result": "Learn the "
      },
      "timestamp": "2024-08-31T15:21:02.387Z",
      "description": "Set variable substringVar to a substring of word from index 0 to 10."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "indexVar",
      "value": {
        "type": "IndexExpression",
        "source": "word",
        "index": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "substringVar",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "0",
        "end": "10"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
      "timestamp": "2024-08-31T15:23:01.573Z",
      "description": "Set variable word to Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "indexVar",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "word",
        "index": 10,
        "result": "f"
      },
      "timestamp": "2024-08-31T15:23:01.574Z",
      "description": "Set variable indexVar to word[10]."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "substringVar",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 0,
        "end": 10,
        "result": "Learn the "
      },
      "timestamp": "2024-08-31T15:23:01.574Z",
      "description": "Set variable substringVar to a substring of word from index 0 to 10."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "word",
      "value": {
        "type": "StringLiteral",
        "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
        "line": 1
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "indexVar",
      "value": {
        "type": "IndexExpression",
        "source": "word",
        "index": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "substringVar",
      "value": {
        "type": "SubstringExpression",
        "string": "word",
        "start": "0",
        "end": "10"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "word",
      "type": "string",
      "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
      "timestamp": "2024-08-31T15:27:00.519Z",
      "description": "Set variable word to Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "indexVar",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "word",
        "index": 10,
        "result": "f"
      },
      "timestamp": "2024-08-31T15:27:00.519Z",
      "description": "Set variable indexVar to word[10]."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "substringVar",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "word",
        "start": 0,
        "end": 10,
        "result": "Learn the "
      },
      "timestamp": "2024-08-31T15:27:00.519Z",
      "description": "Set variable substringVar to a substring of word from index 0 to 10."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:28:51.875Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:28:51.877Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:34:34.072Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:34:34.073Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:34:58.993Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:34:58.994Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:37:26.266Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:37:26.267Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:38:55.943Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:38:55.944Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:39:16.825Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:39:16.825Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:39:29.879Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:39:29.880Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:39:42.933Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:39:42.935Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:40:07.890Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:40:07.890Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:40:32.604Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:40:32.605Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:40:55.958Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:40:55.959Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:42:49.256Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:42:49.256Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:43:54.823Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:43:54.824Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:44:29.727Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:44:29.728Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:45:36.182Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:45:36.183Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:46:11.340Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:46:11.341Z",
      "description": "Created array x."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "z",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 4
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 5
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T15:47:29.667Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:47:29.668Z",
      "description": "Created array x."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T15:47:29.668Z",
      "description": "Set variable y to 3."
    },
    {
      "line": 4,
      "operation": "set",
      "varName": "z",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T15:47:29.668Z",
      "description": "Set variable z to 5."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1
      ],
      "timestamp": "2024-08-31T15:47:29.668Z",
      "description": "Created array y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:48:13.557Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T15:48:13.557Z",
      "description": "Set variable x to 5."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:52:41.990Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T15:52:41.990Z",
      "description": "Set variable x to 5."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:53:21.300Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T15:53:21.300Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1
      ],
      "timestamp": "2024-08-31T15:53:21.301Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T15:53:21.301Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T15:53:21.301Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:57:15.066Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T15:57:15.066Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1
      ],
      "timestamp": "2024-08-31T15:57:15.066Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T15:57:15.067Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T15:57:15.067Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T15:57:53.424Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T15:57:53.424Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1
      ],
      "timestamp": "2024-08-31T15:57:53.424Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T15:57:53.425Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T15:57:53.425Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:01:28.145Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:01:28.149Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1
      ],
      "timestamp": "2024-08-31T16:01:28.150Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T16:01:28.150Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T16:01:28.151Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:01:43.307Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:01:43.307Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1
      ],
      "timestamp": "2024-08-31T16:01:43.308Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T16:01:43.308Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T16:01:43.308Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:04:57.609Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:04:57.610Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1
      ],
      "timestamp": "2024-08-31T16:04:57.610Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T16:04:57.610Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T16:04:57.610Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:06:00.254Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:06:00.255Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1
      ],
      "timestamp": "2024-08-31T16:06:00.255Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T16:06:00.255Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T16:06:00.256Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:08:34.708Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:08:34.709Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1
      ],
      "timestamp": "2024-08-31T16:08:34.709Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T16:08:34.709Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T16:08:34.710Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:11:42.006Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:11:42.006Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1
      ],
      "timestamp": "2024-08-31T16:11:42.007Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T16:11:42.007Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T16:11:42.007Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:12:10.841Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:12:10.841Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1
      ],
      "timestamp": "2024-08-31T16:12:10.841Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T16:12:10.842Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T16:12:10.842Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:12:53.687Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:12:53.687Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1,
        "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT"
      ],
      "timestamp": "2024-08-31T16:12:53.688Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T16:12:53.688Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T16:12:53.689Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:13:50.383Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:13:50.383Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1,
        "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT"
      ],
      "timestamp": "2024-08-31T16:13:50.383Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T16:13:50.384Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T16:13:50.384Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:17:17.176Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:17:17.176Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1,
        "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT"
      ],
      "timestamp": "2024-08-31T16:17:17.177Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T16:17:17.177Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T16:17:17.177Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT",
          "line": 3
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "z",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "0",
          "line": 4
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "StringLiteral",
        "value": "eish bra",
        "line": 5
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:17:57.856Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:17:57.856Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1,
        "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT"
      ],
      "timestamp": "2024-08-31T16:17:57.856Z",
      "description": "Created array y."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "z",
      "value": [
        0,
        0,
        0,
        0,
        0
      ],
      "timestamp": "2024-08-31T16:17:57.857Z",
      "description": "Created array z."
    },
    {
      "line": 5,
      "operation": "set",
      "varName": "y",
      "type": "string",
      "value": "eish bra",
      "timestamp": "2024-08-31T16:17:57.857Z",
      "description": "Set variable y to eish bra."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT",
          "line": 3
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:18:50.898Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:18:50.898Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1,
        "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT"
      ],
      "timestamp": "2024-08-31T16:18:50.898Z",
      "description": "Created array y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT",
          "line": 3
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:25:54.775Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:25:54.775Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1,
        "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT"
      ],
      "timestamp": "2024-08-31T16:25:54.775Z",
      "description": "Created array y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT",
          "line": 3
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:27:02.316Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:27:02.316Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1,
        "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT"
      ],
      "timestamp": "2024-08-31T16:27:02.316Z",
      "description": "Created array y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "ArrayCreation",
      "varName": "x",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 1
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 1
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 2
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 3
        },
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 3
        },
        {
          "type": "StringLiteral",
          "value": "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT",
          "line": 3
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "create_array",
      "varName": "x",
      "value": [
        1,
        2,
        3,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:27:23.280Z",
      "description": "Created array x."
    },
    {
      "line": 2,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:27:23.280Z",
      "description": "Set variable x to 5."
    },
    {
      "line": 3,
      "operation": "create_array",
      "varName": "y",
      "value": [
        5,
        4,
        3,
        2,
        1,
        "LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT LONG COMPONENT"
      ],
      "timestamp": "2024-08-31T16:27:23.280Z",
      "description": "Created array y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:29:22.133Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T16:29:22.133Z",
      "description": "Created array nums."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY HEY HEY HEY HEY HEY HEY HEY",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:30:01.135Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T16:30:01.135Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T16:30:01.135Z",
      "description": "Set variable y to 3."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "y",
      "value": [
        "HEY",
        "HEY",
        "HEY",
        "HEY HEY HEY HEY HEY HEY HEY HEY"
      ],
      "timestamp": "2024-08-31T16:30:01.136Z",
      "description": "Created array y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY HEY HEY HEY HEY HEY HEY HEY",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:35:21.604Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T16:35:21.604Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T16:35:21.604Z",
      "description": "Set variable y to 3."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "y",
      "value": [
        "HEY",
        "HEY",
        "HEY",
        "HEY HEY HEY HEY HEY HEY HEY HEY"
      ],
      "timestamp": "2024-08-31T16:35:21.605Z",
      "description": "Created array y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY HEY HEY HEY HEY HEY HEY HEY",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:36:12.515Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T16:36:12.515Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T16:36:12.515Z",
      "description": "Set variable y to 3."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "y",
      "value": [
        "HEY",
        "HEY",
        "HEY",
        "HEY HEY HEY HEY HEY HEY HEY HEY"
      ],
      "timestamp": "2024-08-31T16:36:12.515Z",
      "description": "Created array y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY HEY HEY HEY HEY HEY HEY HEY",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:37:01.818Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T16:37:01.818Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T16:37:01.818Z",
      "description": "Set variable y to 3."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "y",
      "value": [
        "HEY",
        "HEY",
        "HEY",
        "HEY HEY HEY HEY HEY HEY HEY HEY"
      ],
      "timestamp": "2024-08-31T16:37:01.818Z",
      "description": "Created array y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "y",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY HEY HEY HEY HEY HEY HEY HEY",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:37:58.856Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T16:37:58.856Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "y",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T16:37:58.856Z",
      "description": "Set variable y to 3."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "y",
      "value": [
        "HEY",
        "HEY",
        "HEY",
        "HEY HEY HEY HEY HEY HEY HEY HEY"
      ],
      "timestamp": "2024-08-31T16:37:58.856Z",
      "description": "Created array y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY HEY HEY HEY HEY HEY HEY HEY",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:38:54.558Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T16:38:54.558Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "nums",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T16:38:54.558Z",
      "description": "Set variable nums to 3."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "y",
      "value": [
        "HEY",
        "HEY",
        "HEY",
        "HEY HEY HEY HEY HEY HEY HEY HEY"
      ],
      "timestamp": "2024-08-31T16:38:54.558Z",
      "description": "Created array y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "6",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "7",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "3",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "y",
      "values": [
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY",
          "line": 4
        },
        {
          "type": "StringLiteral",
          "value": "HEY HEY HEY HEY HEY HEY HEY HEY",
          "line": 4
        }
      ]
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:40:03.565Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "timestamp": "2024-08-31T16:40:03.566Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "nums",
      "type": "number",
      "value": 3,
      "timestamp": "2024-08-31T16:40:03.566Z",
      "description": "Set variable nums to 3."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "y",
      "value": [
        "HEY",
        "HEY",
        "HEY",
        "HEY HEY HEY HEY HEY HEY HEY HEY"
      ],
      "timestamp": "2024-08-31T16:40:03.566Z",
      "description": "Created array y."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums1",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "89",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums1",
      "value": {
        "type": "NumberLiteral",
        "value": "9",
        "line": 6
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:46:04.234Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:46:04.234Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "nums",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:46:04.234Z",
      "description": "Set variable nums to 5."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums1",
      "value": [
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ],
      "timestamp": "2024-08-31T16:46:04.235Z",
      "description": "Created array nums1."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        8,
        9,
        8,
        89,
        8,
        9
      ],
      "timestamp": "2024-08-31T16:46:04.235Z",
      "description": "Created array nums2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "nums1",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T16:46:04.235Z",
      "description": "Set variable nums1 to 9."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums1",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "89",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums1",
      "value": {
        "type": "NumberLiteral",
        "value": "9",
        "line": 6
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:46:49.935Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:46:49.935Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "nums",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:46:49.935Z",
      "description": "Set variable nums to 5."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums1",
      "value": [
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ],
      "timestamp": "2024-08-31T16:46:49.936Z",
      "description": "Created array nums1."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        8,
        9,
        8,
        89,
        8,
        9
      ],
      "timestamp": "2024-08-31T16:46:49.936Z",
      "description": "Created array nums2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "nums1",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T16:46:49.936Z",
      "description": "Set variable nums1 to 9."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums1",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "89",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums1",
      "value": {
        "type": "NumberLiteral",
        "value": "9",
        "line": 6
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:47:08.430Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:47:08.430Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "nums",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:47:08.430Z",
      "description": "Set variable nums to 5."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums1",
      "value": [
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ],
      "timestamp": "2024-08-31T16:47:08.431Z",
      "description": "Created array nums1."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        8,
        9,
        8,
        89,
        8,
        9
      ],
      "timestamp": "2024-08-31T16:47:08.431Z",
      "description": "Created array nums2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "nums1",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T16:47:08.431Z",
      "description": "Set variable nums1 to 9."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums1",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "89",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums1",
      "value": {
        "type": "NumberLiteral",
        "value": "9",
        "line": 6
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:47:36.723Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:47:36.723Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "nums",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:47:36.723Z",
      "description": "Set variable nums to 5."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums1",
      "value": [
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ],
      "timestamp": "2024-08-31T16:47:36.724Z",
      "description": "Created array nums1."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        8,
        9,
        8,
        89,
        8,
        9
      ],
      "timestamp": "2024-08-31T16:47:36.724Z",
      "description": "Created array nums2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "nums1",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T16:47:36.724Z",
      "description": "Set variable nums1 to 9."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums1",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "89",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums1",
      "value": {
        "type": "NumberLiteral",
        "value": "9",
        "line": 6
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:48:23.489Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:48:23.490Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "nums",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:48:23.490Z",
      "description": "Set variable nums to 5."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums1",
      "value": [
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ],
      "timestamp": "2024-08-31T16:48:23.490Z",
      "description": "Created array nums1."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        8,
        9,
        8,
        89,
        8,
        9
      ],
      "timestamp": "2024-08-31T16:48:23.490Z",
      "description": "Created array nums2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "nums1",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T16:48:23.490Z",
      "description": "Set variable nums1 to 9."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums1",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "89",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums1",
      "value": {
        "type": "NumberLiteral",
        "value": "9",
        "line": 6
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:48:56.497Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:48:56.497Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "nums",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:48:56.497Z",
      "description": "Set variable nums to 5."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums1",
      "value": [
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ],
      "timestamp": "2024-08-31T16:48:56.499Z",
      "description": "Created array nums1."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        8,
        9,
        8,
        89,
        8,
        9
      ],
      "timestamp": "2024-08-31T16:48:56.499Z",
      "description": "Created array nums2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "nums1",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T16:48:56.499Z",
      "description": "Set variable nums1 to 9."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums1",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "89",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums1",
      "value": {
        "type": "NumberLiteral",
        "value": "9",
        "line": 6
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
        "line": 7
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "wordSubstring",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterOfWord",
      "value": {
        "type": "IndexExpression",
        "source": "words",
        "index": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "AnotherChar",
      "value": {
        "type": "IndexExpression",
        "source": "words",
        "index": "11"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:50:49.830Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:50:49.831Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "nums",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:50:49.831Z",
      "description": "Set variable nums to 5."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums1",
      "value": [
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ],
      "timestamp": "2024-08-31T16:50:49.832Z",
      "description": "Created array nums1."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        8,
        9,
        8,
        89,
        8,
        9
      ],
      "timestamp": "2024-08-31T16:50:49.833Z",
      "description": "Created array nums2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "nums1",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T16:50:49.833Z",
      "description": "Set variable nums1 to 9."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
      "timestamp": "2024-08-31T16:50:49.833Z",
      "description": "Set variable words to Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "wordSubstring",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "fundamenta"
      },
      "timestamp": "2024-08-31T16:50:49.833Z",
      "description": "Set variable wordSubstring to a substring of words from index 10 to 20."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "characterOfWord",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "words",
        "index": 10,
        "result": "f"
      },
      "timestamp": "2024-08-31T16:50:49.833Z",
      "description": "Set variable characterOfWord to words[10]."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "AnotherChar",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "words",
        "index": 11,
        "result": "u"
      },
      "timestamp": "2024-08-31T16:50:49.833Z",
      "description": "Set variable AnotherChar to words[11]."
    }
  ]
}
Intermediate Representation: {
  "program": [
    {
      "type": "VariableDeclaration",
      "name": "x",
      "value": {
        "type": "NumberLiteral",
        "value": "1",
        "line": 1
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "1",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "2",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "3",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "4",
          "line": 2
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 2
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums",
      "value": {
        "type": "NumberLiteral",
        "value": "5",
        "line": 3
      }
    },
    {
      "type": "ArrayCreation",
      "varName": "nums1",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        },
        {
          "type": "NumberLiteral",
          "value": "5",
          "line": 4
        }
      ]
    },
    {
      "type": "ArrayCreation",
      "varName": "nums2",
      "values": [
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "89",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "8",
          "line": 5
        },
        {
          "type": "NumberLiteral",
          "value": "9",
          "line": 5
        }
      ]
    },
    {
      "type": "VariableDeclaration",
      "name": "nums1",
      "value": {
        "type": "NumberLiteral",
        "value": "9",
        "line": 6
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "words",
      "value": {
        "type": "StringLiteral",
        "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
        "line": 7
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "wordSubstring",
      "value": {
        "type": "SubstringExpression",
        "string": "words",
        "start": "10",
        "end": "20"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "characterOfWord",
      "value": {
        "type": "IndexExpression",
        "source": "words",
        "index": "10"
      }
    },
    {
      "type": "VariableDeclaration",
      "name": "AnotherChar",
      "value": {
        "type": "IndexExpression",
        "source": "words",
        "index": "11"
      }
    }
  ]
}
Final JSON: {
  "actionFrames": [
    {
      "line": 1,
      "operation": "set",
      "varName": "x",
      "type": "number",
      "value": 1,
      "timestamp": "2024-08-31T16:51:58.549Z",
      "description": "Set variable x to 1."
    },
    {
      "line": 2,
      "operation": "create_array",
      "varName": "nums",
      "value": [
        1,
        2,
        3,
        4,
        4,
        5
      ],
      "timestamp": "2024-08-31T16:51:58.549Z",
      "description": "Created array nums."
    },
    {
      "line": 3,
      "operation": "set",
      "varName": "nums",
      "type": "number",
      "value": 5,
      "timestamp": "2024-08-31T16:51:58.549Z",
      "description": "Set variable nums to 5."
    },
    {
      "line": 4,
      "operation": "create_array",
      "varName": "nums1",
      "value": [
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ],
      "timestamp": "2024-08-31T16:51:58.551Z",
      "description": "Created array nums1."
    },
    {
      "line": 5,
      "operation": "create_array",
      "varName": "nums2",
      "value": [
        8,
        9,
        8,
        89,
        8,
        9
      ],
      "timestamp": "2024-08-31T16:51:58.551Z",
      "description": "Created array nums2."
    },
    {
      "line": 6,
      "operation": "set",
      "varName": "nums1",
      "type": "number",
      "value": 9,
      "timestamp": "2024-08-31T16:51:58.551Z",
      "description": "Set variable nums1 to 9."
    },
    {
      "line": 7,
      "operation": "set",
      "varName": "words",
      "type": "string",
      "value": "Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console",
      "timestamp": "2024-08-31T16:51:58.552Z",
      "description": "Set variable words to Learn the fundamentals and start building on AWS. Find best practices to help you launch your first application and get to know the AWS Management Console."
    },
    {
      "line": 8,
      "operation": "set",
      "varName": "wordSubstring",
      "type": "string",
      "value": {
        "operation": "substring",
        "source": "words",
        "start": 10,
        "end": 20,
        "result": "fundamenta"
      },
      "timestamp": "2024-08-31T16:51:58.552Z",
      "description": "Set variable wordSubstring to a substring of words from index 10 to 20."
    },
    {
      "line": 9,
      "operation": "set",
      "varName": "characterOfWord",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "words",
        "index": 10,
        "result": "f"
      },
      "timestamp": "2024-08-31T16:51:58.552Z",
      "description": "Set variable characterOfWord to words[10]."
    },
    {
      "line": 10,
      "operation": "set",
      "varName": "AnotherChar",
      "type": "string",
      "value": {
        "operation": "get",
        "type": "string",
        "varName": "words",
        "index": 11,
        "result": "u"
      },
      "timestamp": "2024-08-31T16:51:58.552Z",
      "description": "Set variable AnotherChar to words[11]."
    }
  ]
}
